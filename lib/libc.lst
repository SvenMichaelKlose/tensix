                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Oct 17 2006)
                              4 ; This file generated Thu Oct 19 04:08:14 2006
                              5 ;--------------------------------------------------------
                              6 	.module libc
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _libc_printndec
                             13 	.globl _libc_con
                             14 	.globl _libc_init
                             15 	.globl _libc_close
                             16 	.globl _printf
                             17 ;--------------------------------------------------------
                             18 ; special function registers
                             19 ;--------------------------------------------------------
                             20 ;--------------------------------------------------------
                             21 ;  ram data
                             22 ;--------------------------------------------------------
                             23 	.area _DATA
   0000                      24 _libc_con::
   0000                      25 	.ds 2
                             26 ;--------------------------------------------------------
                             27 ; overlayable items in  ram 
                             28 ;--------------------------------------------------------
                             29 	.area _OVERLAY
                             30 ;--------------------------------------------------------
                             31 ; external initialized ram data
                             32 ;--------------------------------------------------------
                             33 ;--------------------------------------------------------
                             34 ; global & static initialisations
                             35 ;--------------------------------------------------------
                             36 	.area _HOME
                             37 	.area _GSINIT
                             38 	.area _GSFINAL
                             39 	.area _GSINIT
                             40 ;--------------------------------------------------------
                             41 ; Home
                             42 ;--------------------------------------------------------
                             43 	.area _HOME
                             44 	.area _CODE
                             45 ;--------------------------------------------------------
                             46 ; code
                             47 ;--------------------------------------------------------
                             48 	.area _CODE
                             49 ;libc.c:20: libc_init ()
                             50 ;	genLabel
                             51 ;	genFunction
                             52 ;	---------------------------------
                             53 ; Function libc_init
                             54 ; ---------------------------------
   0000                      55 _libc_init_start::
   0000                      56 _libc_init:
                             57 ;libc.c:22: int err = open (&libc_con, "/con");
                             58 ;	genIpush
                             59 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0000 21r2As00             60 	ld	hl,#__str_0
   0003 E5                   61 	push	hl
                             62 ;	genIpush
   0004 21r00s00             63 	ld	hl,#_libc_con
   0007 E5                   64 	push	hl
                             65 ;	genCall
   0008 CDr00s00             66 	call	_open
   000B 44                   67 	ld	b,h
   000C 4D                   68 	ld	c,l
   000D F1                   69 	pop	af
   000E F1                   70 	pop	af
                             71 ;	genAssign
                             72 ;	(registers are the same)
                             73 ;libc.c:23: if (err != ENONE) {
                             74 ;	genCmpEq
                             75 ; genCmpEq: left 2, right 2, result 0
   000F 79                   76 	ld	a,c
   0010 B0                   77 	or	a,b
   0011 CAr29s00             78 	jp	z,00103$
   0014                      79 00106$:
                             80 ;libc.c:24: printk ("libc: fatal error: can't open /con\n", 0);
                             81 ;	genIpush
                             82 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0014 21 00 00             83 	ld	hl,#0x0000
   0017 E5                   84 	push	hl
                             85 ;	genIpush
   0018 21r2Fs00             86 	ld	hl,#__str_1
   001B E5                   87 	push	hl
                             88 ;	genCall
   001C CDr00s00             89 	call	_printk
   001F F1                   90 	pop	af
   0020 F1                   91 	pop	af
                             92 ;libc.c:25: exit (-1);
                             93 ;	genIpush
                             94 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0021 21 FF FF             95 	ld	hl,#0xFFFFFFFF
   0024 E5                   96 	push	hl
                             97 ;	genCall
   0025 CDr00s00             98 	call	_exit
   0028 F1                   99 	pop	af
                            100 ;	genLabel
   0029                     101 00103$:
                            102 ;	genEndFunction
   0029 C9                  103 	ret
   002A                     104 _libc_init_end::
   002A                     105 __str_0:
   002A 2F 63 6F 6E         106 	.ascii "/con"
   002E 00                  107 	.db 0x00
   002F                     108 __str_1:
   002F 6C 69 62 63 3A 20   109 	.ascii "libc: fatal error: can't open /con"
        66 61 74 61 6C 20
        65 72 72 6F 72 3A
        20 63 61 6E 27 74
        20 6F 70 65 6E 20
        2F 63 6F 6E
   0051 0A                  110 	.db 0x0A
   0052 00                  111 	.db 0x00
                            112 ;libc.c:30: libc_close ()
                            113 ;	genLabel
                            114 ;	genFunction
                            115 ;	---------------------------------
                            116 ; Function libc_close
                            117 ; ---------------------------------
   0053                     118 _libc_close_start::
   0053                     119 _libc_close:
                            120 ;libc.c:32: close (libc_con);
                            121 ;	genIpush
                            122 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0053 2Ar00s00            123 	ld	hl,(_libc_con)
   0056 E5                  124 	push	hl
                            125 ;	genCall
   0057 CDr00s00            126 	call	_close
   005A F1                  127 	pop	af
                            128 ;	genLabel
   005B                     129 00101$:
                            130 ;	genEndFunction
   005B C9                  131 	ret
   005C                     132 _libc_close_end::
                            133 ;libc.c:47: libc_printndec (char ** whereto, unsigned int n)
                            134 ;	genLabel
                            135 ;	genFunction
                            136 ;	---------------------------------
                            137 ; Function libc_printndec
                            138 ; ---------------------------------
   005C                     139 _libc_printndec_start::
   005C                     140 _libc_printndec:
   005C DD E5               141 	push	ix
   005E DD 21 00 00         142 	ld	ix,#0
   0062 DD 39               143 	add	ix,sp
   0064 21 EC FF            144 	ld	hl,#-20
   0067 39                  145 	add	hl,sp
   0068 F9                  146 	ld	sp,hl
                            147 ;libc.c:49: char *to = *whereto;
                            148 ;	genAssign
                            149 ;	AOP_STK for 
                            150 ;	AOP_STK for _libc_printndec_sloc1_1_0
   0069 DD 7E 04            151 	ld	a,4(ix)
   006C DD 77 EC            152 	ld	-20(ix),a
   006F DD 7E 05            153 	ld	a,5(ix)
   0072 DD 77 ED            154 	ld	-19(ix),a
                            155 ;	genPointerGet
                            156 ;	AOP_STK for _libc_printndec_sloc1_1_0
   0075 DD 6E EC            157 	ld	l,-20(ix)
   0078 DD 66 ED            158 	ld	h,-19(ix)
   007B 5E                  159 	ld	e,(hl)
   007C 23                  160 	inc	hl
   007D 56                  161 	ld	d,(hl)
                            162 ;	genAssign
                            163 ;	AOP_STK for _libc_printndec_to_1_1
   007E DD 73 FE            164 	ld	-2(ix),e
   0081 DD 72 FF            165 	ld	-1(ix),d
                            166 ;libc.c:53: do {
                            167 ;	genAddrOf
                            168 ;	AOP_STK for _libc_printndec_sloc0_1_0
   0084 21 06 00            169 	ld	hl,#0x0006
   0087 39                  170 	add	hl,sp
   0088 DD 75 EE            171 	ld	-18(ix),l
   008B DD 74 EF            172 	ld	-17(ix),h
                            173 ;	genAssign
                            174 ;	AOP_STK for _libc_printndec_i_1_1
   008E DD 36 F0 00         175 	ld	-16(ix),#0x00
   0092 DD 36 F1 00         176 	ld	-15(ix),#0x00
                            177 ;	genLabel
   0096                     178 00101$:
                            179 ;libc.c:54: out[i++] = n % 10;
                            180 ;	genAssign
                            181 ;	AOP_STK for _libc_printndec_i_1_1
   0096 DD 5E F0            182 	ld	e,-16(ix)
   0099 DD 56 F1            183 	ld	d,-15(ix)
                            184 ;	genPlus
                            185 ;	AOP_STK for _libc_printndec_i_1_1
                            186 ;	genPlusIncr
   009C DD 34 F0            187 	inc	-16(ix)
   009F C2rA5s00            188 	jp	nz,00114$
   00A2 DD 34 F1            189 	inc	-15(ix)
   00A5                     190 00114$:
                            191 ;	genPlus
                            192 ;	AOP_STK for _libc_printndec_sloc0_1_0
                            193 ;	Can't optimise plus by inc, falling back to the normal way
   00A5 DD 7E EE            194 	ld	a,-18(ix)
   00A8 83                  195 	add	a,e
   00A9 5F                  196 	ld	e,a
   00AA DD 7E EF            197 	ld	a,-17(ix)
   00AD 8A                  198 	adc	a,d
   00AE 57                  199 	ld	d,a
                            200 ;	genIpush
                            201 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   00AF D5                  202 	push	de
   00B0 21 0A 00            203 	ld	hl,#0x000A
   00B3 E5                  204 	push	hl
                            205 ;	genIpush
                            206 ;	AOP_STK for 
   00B4 DD 6E 06            207 	ld	l,6(ix)
   00B7 DD 66 07            208 	ld	h,7(ix)
   00BA E5                  209 	push	hl
                            210 ;	genCall
   00BB CDr00s00            211 	call	__moduint_rrx_s
   00BE 44                  212 	ld	b,h
   00BF 4D                  213 	ld	c,l
   00C0 F1                  214 	pop	af
   00C1 F1                  215 	pop	af
   00C2 D1                  216 	pop	de
                            217 ;	genCast
   00C3 79                  218 	ld	a,c
                            219 ;	genAssign (pointer)
                            220 ;	isBitvar = 0
   00C4 12                  221 	ld	(de),a
                            222 ;libc.c:55: n /= 10;
                            223 ;	genIpush
                            224 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   00C5 21 0A 00            225 	ld	hl,#0x000A
   00C8 E5                  226 	push	hl
                            227 ;	genIpush
                            228 ;	AOP_STK for 
   00C9 DD 6E 06            229 	ld	l,6(ix)
   00CC DD 66 07            230 	ld	h,7(ix)
   00CF E5                  231 	push	hl
                            232 ;	genCall
   00D0 CDr00s00            233 	call	__divuint_rrx_s
   00D3 44                  234 	ld	b,h
   00D4 4D                  235 	ld	c,l
   00D5 F1                  236 	pop	af
   00D6 F1                  237 	pop	af
                            238 ;	genAssign
                            239 ;	AOP_STK for 
   00D7 DD 71 06            240 	ld	6(ix),c
   00DA DD 70 07            241 	ld	7(ix),b
                            242 ;libc.c:56: } while (n);
                            243 ;	genIfx
                            244 ;	AOP_STK for 
   00DD DD 7E 06            245 	ld	a,6(ix)
   00E0 DD B6 07            246 	or	a,7(ix)
   00E3 C2r96s00            247 	jp	nz,00101$
                            248 ;libc.c:58: while (i--)
                            249 ;	genAssign
                            250 ;	AOP_STK for _libc_printndec_to_1_1
   00E6 DD 4E FE            251 	ld	c,-2(ix)
   00E9 DD 46 FF            252 	ld	b,-1(ix)
                            253 ;	genAssign
                            254 ;	AOP_STK for _libc_printndec_i_1_1
                            255 ;	(registers are the same)
                            256 ;	genLabel
   00EC                     257 00104$:
                            258 ;	genAssign
                            259 ;	AOP_STK for _libc_printndec_i_1_1
   00EC DD 5E F0            260 	ld	e,-16(ix)
   00EF DD 56 F1            261 	ld	d,-15(ix)
                            262 ;	genMinus
                            263 ;	AOP_STK for _libc_printndec_i_1_1
   00F2 DD 6E F0            264 	ld	l,-16(ix)
   00F5 DD 66 F1            265 	ld	h,-15(ix)
   00F8 2B                  266 	dec	hl
   00F9 DD 75 F0            267 	ld	-16(ix),l
   00FC DD 74 F1            268 	ld	-15(ix),h
                            269 ;	genIfx
   00FF 7B                  270 	ld	a,e
   0100 B2                  271 	or	a,d
   0101 CAr1Bs01            272 	jp	z,00106$
                            273 ;libc.c:59: *to++ = out[i] + '0';
                            274 ;	genPlus
                            275 ;	AOP_STK for _libc_printndec_sloc0_1_0
                            276 ;	AOP_STK for _libc_printndec_i_1_1
                            277 ;	Can't optimise plus by inc, falling back to the normal way
   0104 DD 7E EE            278 	ld	a,-18(ix)
   0107 DD 86 F0            279 	add	a,-16(ix)
   010A 5F                  280 	ld	e,a
   010B DD 7E EF            281 	ld	a,-17(ix)
   010E DD 8E F1            282 	adc	a,-15(ix)
   0111 57                  283 	ld	d,a
                            284 ;	genPointerGet
   0112 1A                  285 	ld	a,(de)
                            286 ;	genPlus
                            287 ;	genPlusIncr
                            288 ;	Can't optimise plus by inc, falling back to the normal way
   0113 5F                  289 	ld	e,a
   0114 C6 30               290 	add	a,#0x30
                            291 ;	genAssign (pointer)
                            292 ;	isBitvar = 0
   0116 02                  293 	ld	(bc),a
                            294 ;	genPlus
                            295 ;	genPlusIncr
   0117 03                  296 	inc	bc
                            297 ;	genGoto
   0118 C3rECs00            298 	jp	00104$
                            299 ;	genLabel
   011B                     300 00106$:
                            301 ;libc.c:61: *whereto = to;
                            302 ;	genAssign (pointer)
                            303 ;	AOP_STK for _libc_printndec_sloc1_1_0
                            304 ;	isBitvar = 0
   011B DD 6E EC            305 	ld	l,-20(ix)
   011E DD 66 ED            306 	ld	h,-19(ix)
   0121 71                  307 	ld	(hl),c
   0122 23                  308 	inc	hl
   0123 70                  309 	ld	(hl),b
                            310 ;	genLabel
   0124                     311 00107$:
                            312 ;	genEndFunction
   0124 DD F9               313 	ld	sp,ix
   0126 DD E1               314 	pop	ix
   0128 C9                  315 	ret
   0129                     316 _libc_printndec_end::
                            317 ;libc.c:66: printf (char *fmt, unsigned int v)
                            318 ;	genLabel
                            319 ;	genFunction
                            320 ;	---------------------------------
                            321 ; Function printf
                            322 ; ---------------------------------
   0129                     323 _printf_start::
   0129                     324 _printf:
   0129 DD E5               325 	push	ix
   012B DD 21 00 00         326 	ld	ix,#0
   012F DD 39               327 	add	ix,sp
   0131 21 F8 FF            328 	ld	hl,#-8
   0134 39                  329 	add	hl,sp
   0135 F9                  330 	ld	sp,hl
                            331 ;libc.c:75: err = bref (&buf, libc_con, 0, IO_CREATE);
                            332 ;	genAddrOf
   0136 21 06 00            333 	ld	hl,#0x0006
   0139 39                  334 	add	hl,sp
   013A 4D                  335 	ld	c,l
   013B 44                  336 	ld	b,h
                            337 ;	genIpush
                            338 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   013C 3E 01               339 	ld	a,#0x01
   013E F5                  340 	push	af
   013F 33                  341 	inc	sp
                            342 ;	genIpush
   0140 21 00 00            343 	ld	hl,#0x0000
   0143 E5                  344 	push	hl
                            345 ;	genIpush
   0144 2Ar00s00            346 	ld	hl,(_libc_con)
   0147 E5                  347 	push	hl
                            348 ;	genIpush
   0148 C5                  349 	push	bc
                            350 ;	genCall
   0149 CDr00s00            351 	call	_bref
   014C 44                  352 	ld	b,h
   014D 4D                  353 	ld	c,l
   014E F1                  354 	pop	af
   014F F1                  355 	pop	af
   0150 F1                  356 	pop	af
   0151 33                  357 	inc	sp
                            358 ;	genAssign
                            359 ;	(registers are the same)
                            360 ;libc.c:76: if (err != ENONE) {
                            361 ;	genCmpEq
                            362 ; genCmpEq: left 2, right 2, result 0
   0152 79                  363 	ld	a,c
   0153 B0                  364 	or	a,b
   0154 CAr6Cs01            365 	jp	z,00102$
   0157                     366 00127$:
                            367 ;libc.c:77: printk ("printf: fatal error: can't get console buffer\n", 0);
                            368 ;	genIpush
                            369 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0157 21 00 00            370 	ld	hl,#0x0000
   015A E5                  371 	push	hl
                            372 ;	genIpush
   015B 21rBDs02            373 	ld	hl,#__str_2
   015E E5                  374 	push	hl
                            375 ;	genCall
   015F CDr00s00            376 	call	_printk
   0162 F1                  377 	pop	af
   0163 F1                  378 	pop	af
                            379 ;libc.c:78: exit (-1);
                            380 ;	genIpush
                            381 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0164 21 FF FF            382 	ld	hl,#0xFFFFFFFF
   0167 E5                  383 	push	hl
                            384 ;	genCall
   0168 CDr00s00            385 	call	_exit
   016B F1                  386 	pop	af
                            387 ;	genLabel
   016C                     388 00102$:
                            389 ;libc.c:80: p = buf->data;
                            390 ;	genAssign
                            391 ;	AOP_STK for _printf_buf_1_1
   016C DD 4E FE            392 	ld	c,-2(ix)
   016F DD 46 FF            393 	ld	b,-1(ix)
                            394 ;	genPlus
                            395 ;	genPlusIncr
   0172 03                  396 	inc	bc
   0173 03                  397 	inc	bc
   0174 03                  398 	inc	bc
   0175 03                  399 	inc	bc
   0176 03                  400 	inc	bc
                            401 ;	genPointerGet
   0177 69                  402 	ld	l,c
   0178 60                  403 	ld	h,b
   0179 4E                  404 	ld	c,(hl)
   017A 23                  405 	inc	hl
   017B 46                  406 	ld	b,(hl)
                            407 ;	genAssign
                            408 ;	AOP_STK for _printf_p_1_1
   017C DD 71 FC            409 	ld	-4(ix),c
   017F DD 70 FD            410 	ld	-3(ix),b
                            411 ;libc.c:82: while ((c = *fmt++) != 0) {
                            412 ;	genAssign
                            413 ;	AOP_STK for 
                            414 ;	AOP_STK for _printf_sloc0_1_0
   0182 DD 7E 06            415 	ld	a,6(ix)
   0185 DD 77 FA            416 	ld	-6(ix),a
   0188 DD 7E 07            417 	ld	a,7(ix)
   018B DD 77 FB            418 	ld	-5(ix),a
                            419 ;	genLabel
   018E                     420 00113$:
                            421 ;	genAssign
                            422 ;	AOP_STK for 
   018E DD 5E 04            423 	ld	e,4(ix)
   0191 DD 56 05            424 	ld	d,5(ix)
                            425 ;	genPointerGet
   0194 1A                  426 	ld	a,(de)
   0195 4F                  427 	ld	c,a
                            428 ;	genPlus
                            429 ;	AOP_STK for 
                            430 ;	genPlusIncr
                            431 ;	Can't optimise plus by inc, falling back to the normal way
   0196 7B                  432 	ld	a,e
   0197 C6 01               433 	add	a,#0x01
   0199 DD 77 04            434 	ld	4(ix),a
   019C 7A                  435 	ld	a,d
   019D CE 00               436 	adc	a,#0x00
   019F DD 77 05            437 	ld	5(ix),a
                            438 ;	genAssign
                            439 ;	genCmpEq
                            440 ; genCmpEq: left 1, right 1, result 0
   01A2 41                  441 	ld	b,c
   01A3 78                  442 	ld	a,b
   01A4 B7                  443 	or	a,a
   01A5 CAr6As02            444 	jp	z,00115$
   01A8                     445 00128$:
                            446 ;libc.c:83: if (c != '%') {
                            447 ;	genCmpEq
                            448 ; genCmpEq: left 1, right 1, result 0
   01A8 78                  449 	ld	a,b
   01A9 FE 25               450 	cp	a,#0x25
   01AB CArC5s01            451 	jp	z,00104$
   01AE                     452 00129$:
                            453 ;libc.c:84: *p++ = c;
                            454 ;	genAssign
                            455 ;	AOP_STK for _printf_p_1_1
   01AE DD 5E FC            456 	ld	e,-4(ix)
   01B1 DD 56 FD            457 	ld	d,-3(ix)
                            458 ;	genAssign (pointer)
                            459 ;	isBitvar = 0
   01B4 78                  460 	ld	a,b
   01B5 12                  461 	ld	(de),a
                            462 ;	genPlus
                            463 ;	AOP_STK for _printf_p_1_1
                            464 ;	genPlusIncr
                            465 ;	Can't optimise plus by inc, falling back to the normal way
   01B6 7B                  466 	ld	a,e
   01B7 C6 01               467 	add	a,#0x01
   01B9 DD 77 FC            468 	ld	-4(ix),a
   01BC 7A                  469 	ld	a,d
   01BD CE 00               470 	adc	a,#0x00
   01BF DD 77 FD            471 	ld	-3(ix),a
                            472 ;libc.c:85: continue;
                            473 ;	genGoto
   01C2 C3r8Es01            474 	jp	00113$
                            475 ;	genLabel
   01C5                     476 00104$:
                            477 ;libc.c:87: c = *fmt++;
                            478 ;	genAssign
                            479 ;	AOP_STK for 
   01C5 DD 5E 04            480 	ld	e,4(ix)
   01C8 DD 56 05            481 	ld	d,5(ix)
                            482 ;	genPointerGet
   01CB 1A                  483 	ld	a,(de)
   01CC 4F                  484 	ld	c,a
                            485 ;	genPlus
                            486 ;	AOP_STK for 
                            487 ;	genPlusIncr
                            488 ;	Can't optimise plus by inc, falling back to the normal way
   01CD 7B                  489 	ld	a,e
   01CE C6 01               490 	add	a,#0x01
   01D0 DD 77 04            491 	ld	4(ix),a
   01D3 7A                  492 	ld	a,d
   01D4 CE 00               493 	adc	a,#0x00
   01D6 DD 77 05            494 	ld	5(ix),a
                            495 ;	genAssign
   01D9 41                  496 	ld	b,c
                            497 ;libc.c:88: switch (c) {
                            498 ;	genCmpEq
                            499 ; genCmpEq: left 1, right 1, result 0
   01DA 78                  500 	ld	a,b
   01DB FE 64               501 	cp	a,#0x64
   01DD CArEFs01            502 	jp	z,00106$
   01E0                     503 00130$:
                            504 ;	genCmpEq
                            505 ; genCmpEq: left 1, right 1, result 0
   01E0 78                  506 	ld	a,b
   01E1 FE 6C               507 	cp	a,#0x6C
   01E3 CArEFs01            508 	jp	z,00106$
   01E6                     509 00131$:
                            510 ;	genCmpEq
                            511 ; genCmpEq: left 1, right 1, result 0
   01E6 78                  512 	ld	a,b
   01E7 FE 73               513 	cp	a,#0x73
   01E9 CAr05s02            514 	jp	z,00107$
   01EC                     515 00132$:
                            516 ;	genGoto
   01EC C3r3Es02            517 	jp	00111$
                            518 ;libc.c:90: case 'l':
                            519 ;	genLabel
   01EF                     520 00106$:
                            521 ;libc.c:92: libc_printndec (&p, (unsigned int) d);
                            522 ;	genAddrOf
   01EF 21 04 00            523 	ld	hl,#0x0004
   01F2 39                  524 	add	hl,sp
   01F3 5D                  525 	ld	e,l
   01F4 54                  526 	ld	d,h
                            527 ;	genIpush
                            528 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            529 ;	AOP_STK for _printf_sloc0_1_0
   01F5 DD 6E FA            530 	ld	l,-6(ix)
   01F8 DD 66 FB            531 	ld	h,-5(ix)
   01FB E5                  532 	push	hl
                            533 ;	genIpush
   01FC D5                  534 	push	de
                            535 ;	genCall
   01FD CDr5Cs00            536 	call	_libc_printndec
   0200 F1                  537 	pop	af
   0201 F1                  538 	pop	af
                            539 ;libc.c:93: break;
                            540 ;	genGoto
   0202 C3r8Es01            541 	jp	00113$
                            542 ;libc.c:95: case 's':
                            543 ;	genLabel
   0205                     544 00107$:
                            545 ;libc.c:96: s = (char*) v;
                            546 ;	genCast
                            547 ;	AOP_STK for 
   0205 DD 46 06            548 	ld	b,6(ix)
   0208 DD 56 07            549 	ld	d,7(ix)
                            550 ;libc.c:97: while ((c = *s++) != 0)
                            551 ;	genAssign
                            552 ;	AOP_STK for _printf_p_1_1
   020B DD 4E FC            553 	ld	c,-4(ix)
   020E DD 5E FD            554 	ld	e,-3(ix)
                            555 ;	genAssign
                            556 ;	AOP_STK for _printf_sloc1_1_0
   0211 DD 70 F8            557 	ld	-8(ix),b
   0214 DD 72 F9            558 	ld	-7(ix),d
                            559 ;	genLabel
   0217                     560 00108$:
                            561 ;	genPointerGet
                            562 ;	AOP_STK for _printf_sloc1_1_0
   0217 DD 6E F8            563 	ld	l,-8(ix)
   021A DD 66 F9            564 	ld	h,-7(ix)
   021D 56                  565 	ld	d,(hl)
                            566 ;	genPlus
                            567 ;	AOP_STK for _printf_sloc1_1_0
                            568 ;	genPlusIncr
   021E DD 34 F8            569 	inc	-8(ix)
   0221 C2r27s02            570 	jp	nz,00133$
   0224 DD 34 F9            571 	inc	-7(ix)
   0227                     572 00133$:
                            573 ;	genAssign
                            574 ;	genCmpEq
                            575 ; genCmpEq: left 1, right 1, result 0
   0227 42                  576 	ld	b,d
   0228 78                  577 	ld	a,b
   0229 B7                  578 	or	a,a
   022A CAr8Es01            579 	jp	z,00113$
   022D                     580 00134$:
                            581 ;libc.c:98: *p++ = c;
                            582 ;	genAssign (pointer)
                            583 ;	isBitvar = 0
   022D 69                  584 	ld	l,c
   022E 63                  585 	ld	h,e
   022F 70                  586 	ld	(hl),b
                            587 ;	genPlus
                            588 ;	genPlusIncr
   0230 0C                  589 	inc	c
   0231 C2r35s02            590 	jp	nz,00135$
   0234 1C                  591 	inc	e
   0235                     592 00135$:
                            593 ;	genAssign
                            594 ;	AOP_STK for _printf_p_1_1
   0235 DD 71 FC            595 	ld	-4(ix),c
   0238 DD 73 FD            596 	ld	-3(ix),e
                            597 ;	genGoto
   023B C3r17s02            598 	jp	00108$
                            599 ;libc.c:101: default:
                            600 ;	genLabel
   023E                     601 00111$:
                            602 ;libc.c:102: *p++ = '%';
                            603 ;	genAssign
                            604 ;	AOP_STK for _printf_p_1_1
   023E DD 5E FC            605 	ld	e,-4(ix)
   0241 DD 56 FD            606 	ld	d,-3(ix)
                            607 ;	genAssign (pointer)
                            608 ;	isBitvar = 0
   0244 3E 25               609 	ld	a,#0x25
   0246 12                  610 	ld	(de),a
                            611 ;	genPlus
                            612 ;	AOP_STK for _printf_p_1_1
                            613 ;	genPlusIncr
                            614 ;	Can't optimise plus by inc, falling back to the normal way
   0247 7B                  615 	ld	a,e
   0248 C6 01               616 	add	a,#0x01
   024A DD 77 FC            617 	ld	-4(ix),a
   024D 7A                  618 	ld	a,d
   024E CE 00               619 	adc	a,#0x00
   0250 DD 77 FD            620 	ld	-3(ix),a
                            621 ;libc.c:103: *p++ = c;
                            622 ;	genAssign
                            623 ;	AOP_STK for _printf_p_1_1
   0253 DD 5E FC            624 	ld	e,-4(ix)
   0256 DD 56 FD            625 	ld	d,-3(ix)
                            626 ;	genAssign (pointer)
                            627 ;	isBitvar = 0
   0259 78                  628 	ld	a,b
   025A 12                  629 	ld	(de),a
                            630 ;	genPlus
                            631 ;	AOP_STK for _printf_p_1_1
                            632 ;	genPlusIncr
                            633 ;	Can't optimise plus by inc, falling back to the normal way
   025B 7B                  634 	ld	a,e
   025C C6 01               635 	add	a,#0x01
   025E DD 77 FC            636 	ld	-4(ix),a
   0261 7A                  637 	ld	a,d
   0262 CE 00               638 	adc	a,#0x00
   0264 DD 77 FD            639 	ld	-3(ix),a
                            640 ;libc.c:104: }
                            641 ;	genGoto
   0267 C3r8Es01            642 	jp	00113$
                            643 ;	genLabel
   026A                     644 00115$:
                            645 ;libc.c:107: buf->len = (size_t) POINTER_SUB(p, buf->data);
                            646 ;	genAssign
                            647 ;	AOP_STK for _printf_buf_1_1
   026A DD 4E FE            648 	ld	c,-2(ix)
   026D DD 46 FF            649 	ld	b,-1(ix)
                            650 ;	genPlus
                            651 ;	AOP_STK for _printf_sloc1_1_0
                            652 ;	genPlusIncr
                            653 ;	Can't optimise plus by inc, falling back to the normal way
   0270 79                  654 	ld	a,c
   0271 C6 0B               655 	add	a,#0x0B
   0273 DD 77 F8            656 	ld	-8(ix),a
   0276 78                  657 	ld	a,b
   0277 CE 00               658 	adc	a,#0x00
   0279 DD 77 F9            659 	ld	-7(ix),a
                            660 ;	genCast
                            661 ;	AOP_STK for _printf_p_1_1
                            662 ;	AOP_STK for _printf_sloc0_1_0
   027C DD 7E FC            663 	ld	a,-4(ix)
   027F DD 77 FA            664 	ld	-6(ix),a
   0282 DD 7E FD            665 	ld	a,-3(ix)
   0285 DD 77 FB            666 	ld	-5(ix),a
                            667 ;	genPlus
                            668 ;	genPlusIncr
                            669 ;	Can't optimise plus by inc, falling back to the normal way
   0288 79                  670 	ld	a,c
   0289 C6 05               671 	add	a,#0x05
   028B 5F                  672 	ld	e,a
   028C 78                  673 	ld	a,b
   028D CE 00               674 	adc	a,#0x00
   028F 57                  675 	ld	d,a
                            676 ;	genPointerGet
   0290 6B                  677 	ld	l,e
   0291 62                  678 	ld	h,d
   0292 5E                  679 	ld	e,(hl)
   0293 23                  680 	inc	hl
   0294 56                  681 	ld	d,(hl)
                            682 ;	genCast
                            683 ;	genMinus
                            684 ;	AOP_STK for _printf_sloc0_1_0
   0295 DD 7E FA            685 	ld	a,-6(ix)
   0298 93                  686 	sub	a,e
   0299 5F                  687 	ld	e,a
   029A DD 7E FB            688 	ld	a,-5(ix)
   029D 9A                  689 	sbc	a,d
   029E 57                  690 	ld	d,a
                            691 ;	genCast
                            692 ;	genCast
                            693 ;	genAssign (pointer)
                            694 ;	AOP_STK for _printf_sloc1_1_0
                            695 ;	isBitvar = 0
   029F DD 6E F8            696 	ld	l,-8(ix)
   02A2 DD 66 F9            697 	ld	h,-7(ix)
   02A5 73                  698 	ld	(hl),e
   02A6 23                  699 	inc	hl
   02A7 72                  700 	ld	(hl),d
                            701 ;libc.c:108: BDIRTY(buf);
                            702 ;	genIpush
                            703 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   02A8 C5                  704 	push	bc
                            705 ;	genCall
   02A9 CDr00s00            706 	call	__bdirty
   02AC F1                  707 	pop	af
                            708 ;libc.c:109: bunref (buf);
                            709 ;	genIpush
                            710 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            711 ;	AOP_STK for _printf_buf_1_1
   02AD DD 6E FE            712 	ld	l,-2(ix)
   02B0 DD 66 FF            713 	ld	h,-1(ix)
   02B3 E5                  714 	push	hl
                            715 ;	genCall
   02B4 CDr00s00            716 	call	_bunref
   02B7 F1                  717 	pop	af
                            718 ;	genLabel
   02B8                     719 00116$:
                            720 ;	genEndFunction
   02B8 DD F9               721 	ld	sp,ix
   02BA DD E1               722 	pop	ix
   02BC C9                  723 	ret
   02BD                     724 _printf_end::
   02BD                     725 __str_2:
   02BD 70 72 69 6E 74 66   726 	.ascii "printf: fatal error: can't get console buffer"
        3A 20 66 61 74 61
        6C 20 65 72 72 6F
        72 3A 20 63 61 6E
        27 74 20 67 65 74
        20 63 6F 6E 73 6F
        6C 65 20 62 75 66
        66 65 72
   02EA 0A                  727 	.db 0x0A
   02EB 00                  728 	.db 0x00
                            729 	.area _CODE
