                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Oct 17 2006)
                              4 ; This file generated Thu Oct 19 04:12:00 2006
                              5 ;--------------------------------------------------------
                              6 	.module string
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _strncmp
                             13 	.globl _strcmp
                             14 	.globl _strcat
                             15 	.globl _strcpy
                             16 	.globl _strlen
                             17 	.globl _memcmp
                             18 	.globl _memcpy
                             19 	.globl _bzero
                             20 ;--------------------------------------------------------
                             21 ; special function registers
                             22 ;--------------------------------------------------------
                             23 ;--------------------------------------------------------
                             24 ;  ram data
                             25 ;--------------------------------------------------------
                             26 	.area _DATA
                             27 ;--------------------------------------------------------
                             28 ; overlayable items in  ram 
                             29 ;--------------------------------------------------------
                             30 	.area _OVERLAY
                             31 ;--------------------------------------------------------
                             32 ; external initialized ram data
                             33 ;--------------------------------------------------------
                             34 ;--------------------------------------------------------
                             35 ; global & static initialisations
                             36 ;--------------------------------------------------------
                             37 	.area _HOME
                             38 	.area _GSINIT
                             39 	.area _GSFINAL
                             40 	.area _GSINIT
                             41 ;--------------------------------------------------------
                             42 ; Home
                             43 ;--------------------------------------------------------
                             44 	.area _HOME
                             45 	.area _CODE
                             46 ;--------------------------------------------------------
                             47 ; code
                             48 ;--------------------------------------------------------
                             49 	.area _CODE
                             50 ;string.c:13: bzero (void *dest, size_t len)
                             51 ;	genLabel
                             52 ;	genFunction
                             53 ;	---------------------------------
                             54 ; Function bzero
                             55 ; ---------------------------------
   0000                      56 _bzero_start::
   0000                      57 _bzero:
   0000 DD E5                58 	push	ix
   0002 DD 21 00 00          59 	ld	ix,#0
   0006 DD 39                60 	add	ix,sp
                             61 ;string.c:15: while (len--)
                             62 ;	genAssign
                             63 ;	AOP_STK for 
   0008 DD 4E 06             64 	ld	c,6(ix)
   000B DD 46 07             65 	ld	b,7(ix)
                             66 ;	genLabel
   000E                      67 00101$:
                             68 ;	genAssign
   000E 59                   69 	ld	e,c
   000F 50                   70 	ld	d,b
                             71 ;	genMinus
   0010 0B                   72 	dec	bc
                             73 ;	genIfx
   0011 7B                   74 	ld	a,e
   0012 B2                   75 	or	a,d
   0013 CAr22s00             76 	jp	z,00104$
                             77 ;string.c:16: *(u8_t *) dest++ = 0;
                             78 ;	genAssign
                             79 ;	AOP_STK for 
                             80 ;	genAssign
                             81 ;	AOP_STK for 
   0016 DD 5E 04             82 	ld	e,4(ix)
   0019 DD 56 05             83 	ld	d,5(ix)
                             84 ;	genAssign (pointer)
                             85 ;	isBitvar = 0
   001C 3E 00                86 	ld	a,#0x00
   001E 12                   87 	ld	(de),a
                             88 ;	genGoto
   001F C3r0Es00             89 	jp	00101$
                             90 ;	genLabel
   0022                      91 00104$:
                             92 ;	genEndFunction
   0022 DD E1                93 	pop	ix
   0024 C9                   94 	ret
   0025                      95 _bzero_end::
                             96 ;string.c:20: memcpy (void *dest, void *src, size_t len)
                             97 ;	genLabel
                             98 ;	genFunction
                             99 ;	---------------------------------
                            100 ; Function memcpy
                            101 ; ---------------------------------
   0025                     102 _memcpy_start::
   0025                     103 _memcpy:
   0025 DD E5               104 	push	ix
   0027 DD 21 00 00         105 	ld	ix,#0
   002B DD 39               106 	add	ix,sp
   002D 21 FE FF            107 	ld	hl,#-2
   0030 39                  108 	add	hl,sp
   0031 F9                  109 	ld	sp,hl
                            110 ;string.c:22: while (len--)
                            111 ;	genAssign
                            112 ;	AOP_STK for 
   0032 DD 4E 08            113 	ld	c,8(ix)
   0035 DD 46 09            114 	ld	b,9(ix)
                            115 ;	genLabel
   0038                     116 00101$:
                            117 ;	genAssign
   0038 59                  118 	ld	e,c
   0039 50                  119 	ld	d,b
                            120 ;	genMinus
   003A 0B                  121 	dec	bc
                            122 ;	genIfx
   003B 7B                  123 	ld	a,e
   003C B2                  124 	or	a,d
   003D CAr69s00            125 	jp	z,00104$
                            126 ;string.c:23: *(u8_t *) dest++ = *(u8_t *) src++;
                            127 ;	genAssign
                            128 ;	AOP_STK for 
                            129 ;	AOP_STK for _memcpy_sloc0_1_0
   0040 DD 7E 04            130 	ld	a,4(ix)
   0043 DD 77 FE            131 	ld	-2(ix),a
   0046 DD 7E 05            132 	ld	a,5(ix)
   0049 DD 77 FF            133 	ld	-1(ix),a
                            134 ;	genAssign
                            135 ;	AOP_STK for _memcpy_sloc0_1_0
                            136 ;	AOP_STK for 
   004C DD 7E FE            137 	ld	a,-2(ix)
   004F DD 77 04            138 	ld	4(ix),a
   0052 DD 7E FF            139 	ld	a,-1(ix)
   0055 DD 77 05            140 	ld	5(ix),a
                            141 ;	genAssign
                            142 ;	AOP_STK for 
                            143 ;	genAssign
                            144 ;	AOP_STK for 
   0058 DD 5E 06            145 	ld	e,6(ix)
   005B DD 56 07            146 	ld	d,7(ix)
                            147 ;	genPointerGet
   005E 1A                  148 	ld	a,(de)
                            149 ;	genAssign (pointer)
                            150 ;	AOP_STK for _memcpy_sloc0_1_0
                            151 ;	isBitvar = 0
   005F DD 6E FE            152 	ld	l,-2(ix)
   0062 DD 66 FF            153 	ld	h,-1(ix)
   0065 77                  154 	ld	(hl),a
                            155 ;	genGoto
   0066 C3r38s00            156 	jp	00101$
                            157 ;	genLabel
   0069                     158 00104$:
                            159 ;	genEndFunction
   0069 DD F9               160 	ld	sp,ix
   006B DD E1               161 	pop	ix
   006D C9                  162 	ret
   006E                     163 _memcpy_end::
                            164 ;string.c:33: memcmp (void *s1, void *s2, size_t len)
                            165 ;	genLabel
                            166 ;	genFunction
                            167 ;	---------------------------------
                            168 ; Function memcmp
                            169 ; ---------------------------------
   006E                     170 _memcmp_start::
   006E                     171 _memcmp:
   006E DD E5               172 	push	ix
   0070 DD 21 00 00         173 	ld	ix,#0
   0074 DD 39               174 	add	ix,sp
                            175 ;string.c:37: while (len--) {
                            176 ;	genAssign
                            177 ;	AOP_STK for 
   0076 DD 4E 08            178 	ld	c,8(ix)
   0079 DD 46 09            179 	ld	b,9(ix)
                            180 ;	genLabel
   007C                     181 00103$:
                            182 ;	genAssign
   007C 59                  183 	ld	e,c
   007D 50                  184 	ld	d,b
                            185 ;	genMinus
   007E 0B                  186 	dec	bc
                            187 ;	genIfx
   007F 7B                  188 	ld	a,e
   0080 B2                  189 	or	a,d
   0081 CArA4s00            190 	jp	z,00105$
                            191 ;string.c:38: r = *(u8_t *) s2 - *(u8_t *) s1;
                            192 ;	genAssign
                            193 ;	(operands are equal 3)
                            194 ;	genPointerGet
                            195 ;	AOP_STK for 
   0084 DD 6E 06            196 	ld	l,6(ix)
   0087 DD 66 07            197 	ld	h,7(ix)
   008A 56                  198 	ld	d,(hl)
                            199 ;	genAssign
                            200 ;	(operands are equal 3)
                            201 ;	genPointerGet
                            202 ;	AOP_STK for 
   008B DD 6E 04            203 	ld	l,4(ix)
   008E DD 66 05            204 	ld	h,5(ix)
   0091 5E                  205 	ld	e,(hl)
                            206 ;	genMinus
   0092 7A                  207 	ld	a,d
   0093 93                  208 	sub	a,e
                            209 ;	genAssign
                            210 ;	(registers are the same)
                            211 ;string.c:39: if (r != 0)
                            212 ;	genCmpEq
                            213 ; genCmpEq: left 1, right 1, result 0
   0094 5F                  214 	ld	e,a
   0095 B7                  215 	or	a,a
   0096 CArA1s00            216 	jp	z,00102$
   0099                     217 00111$:
                            218 ;string.c:40: return r;
                            219 ;	genCast
   0099 6B                  220 	ld	l,e
   009A 7D                  221 	ld	a,l
   009B 17                  222 	rla	
   009C 9F                  223 	sbc	a,a
   009D 67                  224 	ld	h,a
                            225 ;	genRet
                            226 ; Dump of IC_LEFT: type AOP_STR size 2
   009E C3rA7s00            227 	jp	00106$
                            228 ;	genLabel
   00A1                     229 00102$:
                            230 ;string.c:41: s1++;
                            231 ;	genAssign
                            232 ;	(operands are equal 4)
                            233 ;string.c:42: s2++;
                            234 ;	genAssign
                            235 ;	(operands are equal 4)
                            236 ;	genGoto
   00A1 C3r7Cs00            237 	jp	00103$
                            238 ;	genLabel
   00A4                     239 00105$:
                            240 ;string.c:45: return 0;
                            241 ;	genRet
                            242 ; Dump of IC_LEFT: type AOP_LIT size 2
   00A4 21 00 00            243 	ld	hl,#0x0000
                            244 ;	genLabel
   00A7                     245 00106$:
                            246 ;	genEndFunction
   00A7 DD E1               247 	pop	ix
   00A9 C9                  248 	ret
   00AA                     249 _memcmp_end::
                            250 ;string.c:49: strlen (char *p)
                            251 ;	genLabel
                            252 ;	genFunction
                            253 ;	---------------------------------
                            254 ; Function strlen
                            255 ; ---------------------------------
   00AA                     256 _strlen_start::
   00AA                     257 _strlen:
   00AA DD E5               258 	push	ix
   00AC DD 21 00 00         259 	ld	ix,#0
   00B0 DD 39               260 	add	ix,sp
                            261 ;string.c:53: while (*p++)
                            262 ;	genAssign
   00B2 01 00 00            263 	ld	bc,#0x0000
                            264 ;	genAssign
                            265 ;	AOP_STK for 
   00B5 DD 5E 04            266 	ld	e,4(ix)
   00B8 DD 56 05            267 	ld	d,5(ix)
                            268 ;	genLabel
   00BB                     269 00101$:
                            270 ;	genPointerGet
   00BB 1A                  271 	ld	a,(de)
                            272 ;	genPlus
                            273 ;	genPlusIncr
   00BC 13                  274 	inc	de
                            275 ;	genIfx
   00BD B7                  276 	or	a,a
   00BE CArC5s00            277 	jp	z,00103$
                            278 ;string.c:54: len++;
                            279 ;	genPlus
                            280 ;	genPlusIncr
   00C1 03                  281 	inc	bc
                            282 ;	genGoto
   00C2 C3rBBs00            283 	jp	00101$
                            284 ;	genLabel
   00C5                     285 00103$:
                            286 ;string.c:56: return len;
                            287 ;	genRet
                            288 ; Dump of IC_LEFT: type AOP_REG size 2
                            289 ;	 reg = bc
   00C5 69                  290 	ld	l,c
   00C6 60                  291 	ld	h,b
                            292 ;	genLabel
   00C7                     293 00104$:
                            294 ;	genEndFunction
   00C7 DD E1               295 	pop	ix
   00C9 C9                  296 	ret
   00CA                     297 _strlen_end::
                            298 ;string.c:60: strcpy (char *dest, char *src)
                            299 ;	genLabel
                            300 ;	genFunction
                            301 ;	---------------------------------
                            302 ; Function strcpy
                            303 ; ---------------------------------
   00CA                     304 _strcpy_start::
   00CA                     305 _strcpy:
   00CA DD E5               306 	push	ix
   00CC DD 21 00 00         307 	ld	ix,#0
   00D0 DD 39               308 	add	ix,sp
   00D2 21 FC FF            309 	ld	hl,#-4
   00D5 39                  310 	add	hl,sp
   00D6 F9                  311 	ld	sp,hl
                            312 ;string.c:62: char *ret = dest;
                            313 ;	genAssign
                            314 ;	AOP_STK for 
                            315 ;	AOP_STK for _strcpy_ret_1_1
   00D7 DD 7E 04            316 	ld	a,4(ix)
   00DA DD 77 FE            317 	ld	-2(ix),a
   00DD DD 7E 05            318 	ld	a,5(ix)
   00E0 DD 77 FF            319 	ld	-1(ix),a
                            320 ;string.c:64: while ((*dest++ = *src++) != 0);
                            321 ;	genAssign
                            322 ;	AOP_STK for 
   00E3 DD 5E 06            323 	ld	e,6(ix)
   00E6 DD 56 07            324 	ld	d,7(ix)
                            325 ;	genAssign
                            326 ;	AOP_STK for _strcpy_ret_1_1
                            327 ;	AOP_STK for _strcpy_sloc0_1_0
   00E9 DD 7E FE            328 	ld	a,-2(ix)
   00EC DD 77 FC            329 	ld	-4(ix),a
   00EF DD 7E FF            330 	ld	a,-1(ix)
   00F2 DD 77 FD            331 	ld	-3(ix),a
                            332 ;	genLabel
   00F5                     333 00101$:
                            334 ;	genPointerGet
   00F5 1A                  335 	ld	a,(de)
   00F6 4F                  336 	ld	c,a
                            337 ;	genPlus
                            338 ;	genPlusIncr
   00F7 13                  339 	inc	de
                            340 ;	genAssign (pointer)
                            341 ;	AOP_STK for _strcpy_sloc0_1_0
                            342 ;	isBitvar = 0
   00F8 DD 6E FC            343 	ld	l,-4(ix)
   00FB DD 66 FD            344 	ld	h,-3(ix)
   00FE 71                  345 	ld	(hl),c
                            346 ;	genPlus
                            347 ;	AOP_STK for _strcpy_sloc0_1_0
                            348 ;	genPlusIncr
   00FF DD 34 FC            349 	inc	-4(ix)
   0102 C2r08s01            350 	jp	nz,00109$
   0105 DD 34 FD            351 	inc	-3(ix)
   0108                     352 00109$:
                            353 ;	genCmpEq
                            354 ; genCmpEq: left 1, right 1, result 0
   0108 79                  355 	ld	a,c
   0109 B7                  356 	or	a,a
   010A CAr10s01            357 	jp	z,00111$
   010D                     358 00110$:
   010D C3rF5s00            359 	jp	00101$
   0110                     360 00111$:
                            361 ;string.c:66: return ret;
                            362 ;	genRet
                            363 ;	AOP_STK for _strcpy_ret_1_1
                            364 ; Dump of IC_LEFT: type AOP_STK size 2
                            365 ;	 aop_stk -2
   0110 DD 6E FE            366 	ld	l,-2(ix)
   0113 DD 66 FF            367 	ld	h,-1(ix)
                            368 ;	genLabel
   0116                     369 00104$:
                            370 ;	genEndFunction
   0116 DD F9               371 	ld	sp,ix
   0118 DD E1               372 	pop	ix
   011A C9                  373 	ret
   011B                     374 _strcpy_end::
                            375 ;string.c:70: strcat (char *dest, char *src)
                            376 ;	genLabel
                            377 ;	genFunction
                            378 ;	---------------------------------
                            379 ; Function strcat
                            380 ; ---------------------------------
   011B                     381 _strcat_start::
   011B                     382 _strcat:
   011B DD E5               383 	push	ix
   011D DD 21 00 00         384 	ld	ix,#0
   0121 DD 39               385 	add	ix,sp
   0123 21 FC FF            386 	ld	hl,#-4
   0126 39                  387 	add	hl,sp
   0127 F9                  388 	ld	sp,hl
                            389 ;string.c:72: char *ret = dest;
                            390 ;	genAssign
                            391 ;	AOP_STK for 
                            392 ;	AOP_STK for _strcat_ret_1_1
   0128 DD 7E 04            393 	ld	a,4(ix)
   012B DD 77 FE            394 	ld	-2(ix),a
   012E DD 7E 05            395 	ld	a,5(ix)
   0131 DD 77 FF            396 	ld	-1(ix),a
                            397 ;string.c:74: while (*dest != 0)
                            398 ;	genAssign
                            399 ;	AOP_STK for _strcat_ret_1_1
   0134 DD 5E FE            400 	ld	e,-2(ix)
   0137 DD 56 FF            401 	ld	d,-1(ix)
                            402 ;	genLabel
   013A                     403 00101$:
                            404 ;	genPointerGet
   013A 1A                  405 	ld	a,(de)
                            406 ;	genCmpEq
                            407 ; genCmpEq: left 1, right 1, result 0
   013B 4F                  408 	ld	c,a
   013C B7                  409 	or	a,a
   013D CAr44s01            410 	jp	z,00111$
   0140                     411 00115$:
                            412 ;string.c:75: dest++;
                            413 ;	genPlus
                            414 ;	genPlusIncr
   0140 13                  415 	inc	de
                            416 ;	genGoto
   0141 C3r3As01            417 	jp	00101$
                            418 ;string.c:77: while ((*dest++ = *src++) != 0);
                            419 ;	genLabel
   0144                     420 00111$:
                            421 ;	genAssign
                            422 ;	AOP_STK for 
                            423 ;	AOP_STK for _strcat_sloc0_1_0
   0144 DD 7E 06            424 	ld	a,6(ix)
   0147 DD 77 FC            425 	ld	-4(ix),a
   014A DD 7E 07            426 	ld	a,7(ix)
   014D DD 77 FD            427 	ld	-3(ix),a
                            428 ;	genAssign
                            429 ;	(registers are the same)
                            430 ;	genLabel
   0150                     431 00104$:
                            432 ;	genPointerGet
                            433 ;	AOP_STK for _strcat_sloc0_1_0
   0150 DD 6E FC            434 	ld	l,-4(ix)
   0153 DD 66 FD            435 	ld	h,-3(ix)
   0156 4E                  436 	ld	c,(hl)
                            437 ;	genPlus
                            438 ;	AOP_STK for _strcat_sloc0_1_0
                            439 ;	genPlusIncr
   0157 DD 34 FC            440 	inc	-4(ix)
   015A C2r60s01            441 	jp	nz,00116$
   015D DD 34 FD            442 	inc	-3(ix)
   0160                     443 00116$:
                            444 ;	genAssign (pointer)
                            445 ;	isBitvar = 0
   0160 79                  446 	ld	a,c
   0161 12                  447 	ld	(de),a
                            448 ;	genPlus
                            449 ;	genPlusIncr
   0162 13                  450 	inc	de
                            451 ;	genCmpEq
                            452 ; genCmpEq: left 1, right 1, result 0
   0163 79                  453 	ld	a,c
   0164 B7                  454 	or	a,a
   0165 CAr6Bs01            455 	jp	z,00118$
   0168                     456 00117$:
   0168 C3r50s01            457 	jp	00104$
   016B                     458 00118$:
                            459 ;string.c:79: return ret;
                            460 ;	genRet
                            461 ;	AOP_STK for _strcat_ret_1_1
                            462 ; Dump of IC_LEFT: type AOP_STK size 2
                            463 ;	 aop_stk -2
   016B DD 6E FE            464 	ld	l,-2(ix)
   016E DD 66 FF            465 	ld	h,-1(ix)
                            466 ;	genLabel
   0171                     467 00107$:
                            468 ;	genEndFunction
   0171 DD F9               469 	ld	sp,ix
   0173 DD E1               470 	pop	ix
   0175 C9                  471 	ret
   0176                     472 _strcat_end::
                            473 ;string.c:89: strcmp (char *s1, char *s2)
                            474 ;	genLabel
                            475 ;	genFunction
                            476 ;	---------------------------------
                            477 ; Function strcmp
                            478 ; ---------------------------------
   0176                     479 _strcmp_start::
   0176                     480 _strcmp:
   0176 DD E5               481 	push	ix
   0178 DD 21 00 00         482 	ld	ix,#0
   017C DD 39               483 	add	ix,sp
   017E 21 FE FF            484 	ld	hl,#-2
   0181 39                  485 	add	hl,sp
   0182 F9                  486 	ld	sp,hl
                            487 ;string.c:93: while (1) {
                            488 ;	genAssign
                            489 ;	AOP_STK for 
   0183 DD 4E 04            490 	ld	c,4(ix)
   0186 DD 46 05            491 	ld	b,5(ix)
                            492 ;	genAssign
                            493 ;	AOP_STK for 
                            494 ;	AOP_STK for _strcmp_sloc0_1_0
   0189 DD 7E 06            495 	ld	a,6(ix)
   018C DD 77 FE            496 	ld	-2(ix),a
   018F DD 7E 07            497 	ld	a,7(ix)
   0192 DD 77 FF            498 	ld	-1(ix),a
                            499 ;	genLabel
   0195                     500 00106$:
                            501 ;string.c:95: r = *s2 - *s1;
                            502 ;	genPointerGet
                            503 ;	AOP_STK for _strcmp_sloc0_1_0
   0195 DD 6E FE            504 	ld	l,-2(ix)
   0198 DD 66 FF            505 	ld	h,-1(ix)
   019B 5E                  506 	ld	e,(hl)
                            507 ;	genPointerGet
   019C 0A                  508 	ld	a,(bc)
   019D 57                  509 	ld	d,a
                            510 ;	genMinus
   019E 7B                  511 	ld	a,e
   019F 92                  512 	sub	a,d
                            513 ;	genAssign
                            514 ;	(registers are the same)
                            515 ;string.c:98: if (r != 0)
                            516 ;	genCmpEq
                            517 ; genCmpEq: left 1, right 1, result 0
   01A0 5F                  518 	ld	e,a
   01A1 B7                  519 	or	a,a
   01A2 CArADs01            520 	jp	z,00102$
   01A5                     521 00113$:
                            522 ;string.c:99: return r;
                            523 ;	genCast
   01A5 6B                  524 	ld	l,e
   01A6 7D                  525 	ld	a,l
   01A7 17                  526 	rla	
   01A8 9F                  527 	sbc	a,a
   01A9 67                  528 	ld	h,a
                            529 ;	genRet
                            530 ; Dump of IC_LEFT: type AOP_STR size 2
   01AA C3rC2s01            531 	jp	00108$
                            532 ;	genLabel
   01AD                     533 00102$:
                            534 ;string.c:102: if (*s1 == 0)
                            535 ;	genIfx
   01AD AF                  536 	xor	a,a
   01AE B2                  537 	or	a,d
   01AF CArBFs01            538 	jp	z,00107$
                            539 ;string.c:106: s1++;
                            540 ;	genPlus
                            541 ;	genPlusIncr
   01B2 03                  542 	inc	bc
                            543 ;string.c:107: s2++;
                            544 ;	genPlus
                            545 ;	AOP_STK for _strcmp_sloc0_1_0
                            546 ;	genPlusIncr
   01B3 DD 34 FE            547 	inc	-2(ix)
   01B6 C2rBCs01            548 	jp	nz,00114$
   01B9 DD 34 FF            549 	inc	-1(ix)
   01BC                     550 00114$:
                            551 ;	genGoto
   01BC C3r95s01            552 	jp	00106$
                            553 ;	genLabel
   01BF                     554 00107$:
                            555 ;string.c:110: return 0; /* Strings matched. */
                            556 ;	genRet
                            557 ; Dump of IC_LEFT: type AOP_LIT size 2
   01BF 21 00 00            558 	ld	hl,#0x0000
                            559 ;	genLabel
   01C2                     560 00108$:
                            561 ;	genEndFunction
   01C2 DD F9               562 	ld	sp,ix
   01C4 DD E1               563 	pop	ix
   01C6 C9                  564 	ret
   01C7                     565 _strcmp_end::
                            566 ;string.c:114: strncmp (char *s1, char *s2, size_t len)
                            567 ;	genLabel
                            568 ;	genFunction
                            569 ;	---------------------------------
                            570 ; Function strncmp
                            571 ; ---------------------------------
   01C7                     572 _strncmp_start::
   01C7                     573 _strncmp:
   01C7 DD E5               574 	push	ix
   01C9 DD 21 00 00         575 	ld	ix,#0
   01CD DD 39               576 	add	ix,sp
   01CF 21 FC FF            577 	ld	hl,#-4
   01D2 39                  578 	add	hl,sp
   01D3 F9                  579 	ld	sp,hl
                            580 ;string.c:118: while (len--) {
                            581 ;	genAssign
                            582 ;	AOP_STK for 
   01D4 DD 4E 04            583 	ld	c,4(ix)
   01D7 DD 46 05            584 	ld	b,5(ix)
                            585 ;	genAssign
                            586 ;	AOP_STK for 
                            587 ;	AOP_STK for _strncmp_sloc1_1_0
   01DA DD 7E 06            588 	ld	a,6(ix)
   01DD DD 77 FC            589 	ld	-4(ix),a
   01E0 DD 7E 07            590 	ld	a,7(ix)
   01E3 DD 77 FD            591 	ld	-3(ix),a
                            592 ;	genAssign
                            593 ;	AOP_STK for 
                            594 ;	AOP_STK for _strncmp_sloc0_1_0
   01E6 DD 7E 08            595 	ld	a,8(ix)
   01E9 DD 77 FE            596 	ld	-2(ix),a
   01EC DD 7E 09            597 	ld	a,9(ix)
   01EF DD 77 FF            598 	ld	-1(ix),a
                            599 ;	genLabel
   01F2                     600 00105$:
                            601 ;	genAssign
                            602 ;	AOP_STK for _strncmp_sloc0_1_0
   01F2 DD 5E FE            603 	ld	e,-2(ix)
   01F5 DD 56 FF            604 	ld	d,-1(ix)
                            605 ;	genMinus
                            606 ;	AOP_STK for _strncmp_sloc0_1_0
   01F8 DD 6E FE            607 	ld	l,-2(ix)
   01FB DD 66 FF            608 	ld	h,-1(ix)
   01FE 2B                  609 	dec	hl
   01FF DD 75 FE            610 	ld	-2(ix),l
   0202 DD 74 FF            611 	ld	-1(ix),h
                            612 ;	genIfx
   0205 7B                  613 	ld	a,e
   0206 B2                  614 	or	a,d
   0207 CAr34s02            615 	jp	z,00107$
                            616 ;string.c:120: r = *s2 - *s1;
                            617 ;	genPointerGet
                            618 ;	AOP_STK for _strncmp_sloc1_1_0
   020A DD 6E FC            619 	ld	l,-4(ix)
   020D DD 66 FD            620 	ld	h,-3(ix)
   0210 5E                  621 	ld	e,(hl)
                            622 ;	genPointerGet
   0211 0A                  623 	ld	a,(bc)
   0212 57                  624 	ld	d,a
                            625 ;	genMinus
   0213 7B                  626 	ld	a,e
   0214 92                  627 	sub	a,d
                            628 ;	genAssign
                            629 ;	(registers are the same)
                            630 ;string.c:123: if (r != 0)
                            631 ;	genCmpEq
                            632 ; genCmpEq: left 1, right 1, result 0
   0215 5F                  633 	ld	e,a
   0216 B7                  634 	or	a,a
   0217 CAr22s02            635 	jp	z,00102$
   021A                     636 00114$:
                            637 ;string.c:124: return r;
                            638 ;	genCast
   021A 6B                  639 	ld	l,e
   021B 7D                  640 	ld	a,l
   021C 17                  641 	rla	
   021D 9F                  642 	sbc	a,a
   021E 67                  643 	ld	h,a
                            644 ;	genRet
                            645 ; Dump of IC_LEFT: type AOP_STR size 2
   021F C3r37s02            646 	jp	00108$
                            647 ;	genLabel
   0222                     648 00102$:
                            649 ;string.c:127: if (*s1 == 0)
                            650 ;	genIfx
   0222 AF                  651 	xor	a,a
   0223 B2                  652 	or	a,d
   0224 CAr34s02            653 	jp	z,00107$
                            654 ;string.c:131: s1++;
                            655 ;	genPlus
                            656 ;	genPlusIncr
   0227 03                  657 	inc	bc
                            658 ;string.c:132: s2++;
                            659 ;	genPlus
                            660 ;	AOP_STK for _strncmp_sloc1_1_0
                            661 ;	genPlusIncr
   0228 DD 34 FC            662 	inc	-4(ix)
   022B C2r31s02            663 	jp	nz,00115$
   022E DD 34 FD            664 	inc	-3(ix)
   0231                     665 00115$:
                            666 ;	genGoto
   0231 C3rF2s01            667 	jp	00105$
                            668 ;	genLabel
   0234                     669 00107$:
                            670 ;string.c:135: return 0; /* Strings matched. */
                            671 ;	genRet
                            672 ; Dump of IC_LEFT: type AOP_LIT size 2
   0234 21 00 00            673 	ld	hl,#0x0000
                            674 ;	genLabel
   0237                     675 00108$:
                            676 ;	genEndFunction
   0237 DD F9               677 	ld	sp,ix
   0239 DD E1               678 	pop	ix
   023B C9                  679 	ret
   023C                     680 _strncmp_end::
                            681 	.area _CODE
