                              1 ;--------------------------------------------------------
                              2 ; File Created by SDCC : FreeWare ANSI-C Compiler
                              3 ; Version 2.6.0 #4309 (Oct 17 2006)
                              4 ; This file generated Thu Oct 19 04:08:16 2006
                              5 ;--------------------------------------------------------
                              6 	.module mem
                              7 	.optsdcc -mz80
                              8 	
                              9 ;--------------------------------------------------------
                             10 ; Public variables in this module
                             11 ;--------------------------------------------------------
                             12 	.globl _pmalloc2
                             13 	.globl _mem_frag_free
                             14 	.globl _mem_frag_alloc
                             15 	.globl _mem_frag_add_page
                             16 	.globl _mem_frag_clean_stack
                             17 	.globl _mem_frag_sort
                             18 	.globl _mem_page_free
                             19 	.globl _mem_pages_alloc
                             20 	.globl _mem_page_alloc
                             21 	.globl _mem_pages_lock
                             22 	.globl _mem_pages_unref
                             23 	.globl _mem_pages_ref
                             24 	.globl _ram
                             25 	.globl _mem_num_pages_locked
                             26 	.globl _mem_num_pages_free
                             27 	.globl _page_list
                             28 	.globl _page_map
                             29 	.globl _fragment_stacks
                             30 	.globl _page_alloc
                             31 	.globl _mem_init
                             32 	.globl _mem_init_proc
                             33 	.globl _mem_kill_proc
                             34 	.globl _pmalloc
                             35 	.globl _kmalloc
                             36 	.globl _freep
                             37 	.globl _malloc
                             38 	.globl _free
                             39 ;--------------------------------------------------------
                             40 ; special function registers
                             41 ;--------------------------------------------------------
                             42 ;--------------------------------------------------------
                             43 ;  ram data
                             44 ;--------------------------------------------------------
                             45 	.area _DATA
   0000                      46 _fragment_stacks::
   0000                      47 	.ds 6
   0006                      48 _page_map::
   0006                      49 	.ds 2
   0008                      50 _page_list::
   0008                      51 	.ds 2
   000A                      52 _mem_num_pages_free::
   000A                      53 	.ds 2
   000C                      54 _mem_num_pages_locked::
   000C                      55 	.ds 2
   000E                      56 _ram::
   000E                      57 	.ds 0
                             58 ;--------------------------------------------------------
                             59 ; overlayable items in  ram 
                             60 ;--------------------------------------------------------
                             61 	.area _OVERLAY
                             62 ;--------------------------------------------------------
                             63 ; external initialized ram data
                             64 ;--------------------------------------------------------
                             65 ;--------------------------------------------------------
                             66 ; global & static initialisations
                             67 ;--------------------------------------------------------
                             68 	.area _HOME
                             69 	.area _GSINIT
                             70 	.area _GSFINAL
                             71 	.area _GSINIT
                             72 ;--------------------------------------------------------
                             73 ; Home
                             74 ;--------------------------------------------------------
                             75 	.area _HOME
                             76 	.area _CODE
                             77 ;--------------------------------------------------------
                             78 ; code
                             79 ;--------------------------------------------------------
                             80 	.area _CODE
                             81 ;mem.c:45: void page_alloc (pagenum_t page, fragsize_t fsize, bool cont, proc_t proc)
                             82 ;	genLabel
                             83 ;	genFunction
                             84 ;	---------------------------------
                             85 ; Function page_alloc
                             86 ; ---------------------------------
   0000                      87 _page_alloc_start::
   0000                      88 _page_alloc:
   0000 DD E5                89 	push	ix
   0002 DD 21 00 00          90 	ld	ix,#0
   0006 DD 39                91 	add	ix,sp
   0008 21 FF FF             92 	ld	hl,#-1
   000B 39                   93 	add	hl,sp
   000C F9                   94 	ld	sp,hl
                             95 ;mem.c:47: mem_num_pages_free--;                      
                             96 ;	genMinus
   000D 2Ar0As00             97 	ld	hl,(_mem_num_pages_free)
   0010 2B                   98 	dec	hl
   0011 22r0As00             99 	ld	(_mem_num_pages_free),hl
                            100 ;mem.c:48: BITMAP_SET(page_map, page, TRUE);         
                            101 ;	genRightShift
                            102 ;	AOP_STK for 
   0014 DD 4E 04            103 	ld	c,4(ix)
   0017 CB 39               104 	srl	c
   0019 CB 39               105 	srl	c
   001B CB 39               106 	srl	c
                            107 ;	genPlus
                            108 ;	Can't optimise plus by inc, falling back to the normal way
   001D FD 21r06s00         109 	ld	iy,#_page_map
   0021 FD 7E 00            110 	ld	a,0(iy)
   0024 81                  111 	add	a,c
   0025 4F                  112 	ld	c,a
   0026 FD 7E 01            113 	ld	a,1(iy)
   0029 CE 00               114 	adc	a,#0x00
   002B 47                  115 	ld	b,a
                            116 ;	genPointerGet
                            117 ;	AOP_STK for _page_alloc_sloc0_1_0
   002C 0A                  118 	ld	a,(bc)
   002D DD 77 FF            119 	ld	-1(ix),a
                            120 ;	genAnd
                            121 ;	AOP_STK for 
   0030 DD 7E 04            122 	ld	a,4(ix)
   0033 E6 07               123 	and	a,#0x07
                            124 ;	genLeftShift
   0035 57                  125 	ld	d,a
   0036 3C                  126 	inc	a
   0037 F5                  127 	push	af
   0038 16 01               128 	ld	d,#0x01
   003A F1                  129 	pop	af
   003B C3r40s00            130 	jp	00107$
   003E                     131 00106$:
   003E CB 22               132 	sla	d
   0040                     133 00107$:
   0040 3D                  134 	dec	a
   0041 C2r3Es00            135 	jp	nz,00106$
                            136 ;	genXor
   0044 7A                  137 	ld	a,d
   0045 EE FF               138 	xor	a,#0xFF
                            139 ;	genAnd
                            140 ;	AOP_STK for _page_alloc_sloc0_1_0
   0047 5F                  141 	ld	e,a
   0048 DD A6 FF            142 	and	a,-1(ix)
                            143 ;	genOr
   004B 5F                  144 	ld	e,a
   004C B2                  145 	or	a,d
                            146 ;	genAssign (pointer)
                            147 ;	isBitvar = 0
   004D 02                  148 	ld	(bc),a
                            149 ;mem.c:49: PAGEINFO_SET(page, fsize, cont, proc);
                            150 ;	genPlus
                            151 ;	AOP_STK for 
                            152 ;	Can't optimise plus by inc, falling back to the normal way
   004E FD 21r08s00         153 	ld	iy,#_page_list
   0052 FD 7E 00            154 	ld	a,0(iy)
   0055 DD 86 04            155 	add	a,4(ix)
   0058 4F                  156 	ld	c,a
   0059 FD 7E 01            157 	ld	a,1(iy)
   005C CE 00               158 	adc	a,#0x00
   005E 47                  159 	ld	b,a
                            160 ;	genIfx
                            161 ;	AOP_STK for 
   005F AF                  162 	xor	a,a
   0060 DD B6 06            163 	or	a,6(ix)
   0063 CAr6Bs00            164 	jp	z,00103$
                            165 ;	genAssign
   0066 1E 04               166 	ld	e,#0x04
                            167 ;	genGoto
   0068 C3r6Ds00            168 	jp	00104$
                            169 ;	genLabel
   006B                     170 00103$:
                            171 ;	genAssign
   006B 1E 00               172 	ld	e,#0x00
                            173 ;	genLabel
   006D                     174 00104$:
                            175 ;	genOr
                            176 ;	AOP_STK for 
   006D 7B                  177 	ld	a,e
   006E DD B6 05            178 	or	a,5(ix)
   0071 5F                  179 	ld	e,a
                            180 ;	genLeftShift
                            181 ;	AOP_STK for 
   0072 DD 7E 07            182 	ld	a,7(ix)
   0075 07                  183 	rlca
   0076 07                  184 	rlca
   0077 07                  185 	rlca
   0078 E6 F8               186 	and	a,#0xF8
   007A 57                  187 	ld	d,a
                            188 ;	genOr
   007B 7B                  189 	ld	a,e
   007C B2                  190 	or	a,d
                            191 ;	genAssign (pointer)
                            192 ;	isBitvar = 0
   007D 02                  193 	ld	(bc),a
                            194 ;	genLabel
   007E                     195 00101$:
                            196 ;	genEndFunction
   007E DD F9               197 	ld	sp,ix
   0080 DD E1               198 	pop	ix
   0082 C9                  199 	ret
   0083                     200 _page_alloc_end::
                            201 ;mem.c:54: mem_pages_ref (pagenum_t p, u16_t num, fragsize_t fsize, proc_t proc)
                            202 ;	genLabel
                            203 ;	genFunction
                            204 ;	---------------------------------
                            205 ; Function mem_pages_ref
                            206 ; ---------------------------------
   0083                     207 _mem_pages_ref_start::
   0083                     208 _mem_pages_ref:
   0083 DD E5               209 	push	ix
   0085 DD 21 00 00         210 	ld	ix,#0
   0089 DD 39               211 	add	ix,sp
   008B 21 FD FF            212 	ld	hl,#-3
   008E 39                  213 	add	hl,sp
   008F F9                  214 	ld	sp,hl
                            215 ;mem.c:57: while (num--) {
                            216 ;	genAssign
                            217 ;	AOP_STK for 
                            218 ;	AOP_STK for _mem_pages_ref_sloc0_1_0
   0090 DD 7E 04            219 	ld	a,4(ix)
   0093 DD 77 FF            220 	ld	-1(ix),a
                            221 ;	genAssign
                            222 ;	AOP_STK for 
   0096 DD 5E 05            223 	ld	e,5(ix)
   0099 DD 56 06            224 	ld	d,6(ix)
                            225 ;	genLabel
   009C                     226 00101$:
                            227 ;	genAssign
   009C 43                  228 	ld	b,e
   009D 4A                  229 	ld	c,d
                            230 ;	genMinus
   009E 1B                  231 	dec	de
                            232 ;	genIfx
   009F 78                  233 	ld	a,b
   00A0 B1                  234 	or	a,c
   00A1 CArFDs00            235 	jp	z,00104$
                            236 ;mem.c:59: PAGE_ALLOC(p, fsize, num != 0, proc); /* Don't set PCONT of last. */
                            237 ;	genCmpEq
                            238 ; genCmpEq: left 2, right 2, result 1
                            239 ;4
   00A4 7B                  240 	ld	a,e
   00A5 B2                  241 	or	a,d
   00A6 C2rAEs00            242 	jp	nz,00109$
   00A9 3E 01               243 	ld	a,#0x01
   00AB C3rAFs00            244 	jp	00110$
   00AE                     245 00109$:
   00AE AF                  246 	xor	a,a
   00AF                     247 00110$:
                            248 ;6
   00AF 4F                  249 	ld	c,a
                            250 ;	genNot
   00B0 AF                  251 	xor	a,a
   00B1 B1                  252 	or	a,c
   00B2 D6 01               253 	sub	a,#0x01
   00B4 3E 00               254 	ld	a,#0x00
   00B6 17                  255 	rla
   00B7 4F                  256 	ld	c,a
                            257 ;	genIpush
                            258 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   00B8 D5                  259 	push	de
                            260 ;	AOP_STK for 
   00B9 DD 7E 08            261 	ld	a,8(ix)
   00BC F5                  262 	push	af
   00BD 33                  263 	inc	sp
                            264 ;	genIpush
   00BE 79                  265 	ld	a,c
   00BF F5                  266 	push	af
   00C0 33                  267 	inc	sp
                            268 ;	genIpush
                            269 ;	AOP_STK for 
   00C1 DD 7E 07            270 	ld	a,7(ix)
   00C4 F5                  271 	push	af
   00C5 33                  272 	inc	sp
                            273 ;	genIpush
                            274 ;	AOP_STK for _mem_pages_ref_sloc0_1_0
   00C6 DD 7E FF            275 	ld	a,-1(ix)
   00C9 F5                  276 	push	af
   00CA 33                  277 	inc	sp
                            278 ;	genCall
   00CB CDr00s00            279 	call	_page_alloc
   00CE F1                  280 	pop	af
   00CF F1                  281 	pop	af
   00D0 D1                  282 	pop	de
                            283 ;mem.c:63: bzero (PAGE2ADDR(p), PAGESIZE);
                            284 ;	genCast
                            285 ;	AOP_STK for _mem_pages_ref_sloc0_1_0
   00D1 DD 4E FF            286 	ld	c,-1(ix)
   00D4 06 00               287 	ld	b,#0x00
                            288 ;	genLeftShift
                            289 ;	AOP_STK for _mem_pages_ref_sloc1_1_0
   00D6 DD 71 FE            290 	ld	-2(ix),c
   00D9 DD 36 FD 00         291 	ld	-3(ix),#0x00
                            292 ;	genCast
   00DD 0Er0E               293 	ld	c,#<_ram
   00DF 06s00               294 	ld	b,#>_ram
                            295 ;	genPlus
                            296 ;	AOP_STK for _mem_pages_ref_sloc1_1_0
                            297 ;	Can't optimise plus by inc, falling back to the normal way
   00E1 DD 7E FD            298 	ld	a,-3(ix)
   00E4 81                  299 	add	a,c
   00E5 4F                  300 	ld	c,a
   00E6 DD 7E FE            301 	ld	a,-2(ix)
   00E9 88                  302 	adc	a,b
   00EA 47                  303 	ld	b,a
                            304 ;	genCast
                            305 ;	genIpush
                            306 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   00EB D5                  307 	push	de
   00EC 21 00 01            308 	ld	hl,#0x0100
   00EF E5                  309 	push	hl
                            310 ;	genIpush
   00F0 C5                  311 	push	bc
                            312 ;	genCall
   00F1 CDr00s00            313 	call	_bzero
   00F4 F1                  314 	pop	af
   00F5 F1                  315 	pop	af
   00F6 D1                  316 	pop	de
                            317 ;mem.c:66: p++; /* Next page. */
                            318 ;	genPlus
                            319 ;	AOP_STK for _mem_pages_ref_sloc0_1_0
                            320 ;	genPlusIncr
   00F7 DD 34 FF            321 	inc	-1(ix)
                            322 ;	genGoto
   00FA C3r9Cs00            323 	jp	00101$
                            324 ;	genLabel
   00FD                     325 00104$:
                            326 ;	genEndFunction
   00FD DD F9               327 	ld	sp,ix
   00FF DD E1               328 	pop	ix
   0101 C9                  329 	ret
   0102                     330 _mem_pages_ref_end::
                            331 ;mem.c:72: mem_pages_unref (pagenum_t p)
                            332 ;	genLabel
                            333 ;	genFunction
                            334 ;	---------------------------------
                            335 ; Function mem_pages_unref
                            336 ; ---------------------------------
   0102                     337 _mem_pages_unref_start::
   0102                     338 _mem_pages_unref:
   0102 DD E5               339 	push	ix
   0104 DD 21 00 00         340 	ld	ix,#0
   0108 DD 39               341 	add	ix,sp
   010A 21 FC FF            342 	ld	hl,#-4
   010D 39                  343 	add	hl,sp
   010E F9                  344 	ld	sp,hl
                            345 ;mem.c:82: if (PAGE_LOCKED(p - 1) == 0 && PAGE_CONT(p - 1) != 0)
                            346 ;	genCast
                            347 ;	AOP_STK for 
   010F DD 4E 04            348 	ld	c,4(ix)
   0112 06 00               349 	ld	b,#0x00
                            350 ;	genMinus
   0114 0B                  351 	dec	bc
                            352 ;	genPlus
                            353 ;	Can't optimise plus by inc, falling back to the normal way
   0115 FD 21r08s00         354 	ld	iy,#_page_list
   0119 FD 7E 00            355 	ld	a,0(iy)
   011C 81                  356 	add	a,c
   011D 4F                  357 	ld	c,a
   011E FD 7E 01            358 	ld	a,1(iy)
   0121 88                  359 	adc	a,b
   0122 47                  360 	ld	b,a
                            361 ;	genPointerGet
   0123 0A                  362 	ld	a,(bc)
                            363 ;	genAnd
   0124 4F                  364 	ld	c,a
   0125 E6 04               365 	and	a,#0x04
                            366 ;	genIfx
   0127 47                  367 	ld	b,a
   0128 B7                  368 	or	a,a
   0129 CAr35s01            369 	jp	z,00103$
                            370 ;	genAnd
   012C 79                  371 	ld	a,c
   012D E6 03               372 	and	a,#0x03
   012F CAr35s01            373 	jp	z,00120$
   0132                     374 00119$:
   0132 C3r3Ds01            375 	jp	00117$
   0135                     376 00120$:
                            377 ;	genLabel
   0135                     378 00103$:
                            379 ;	genCmpEq
                            380 ; genCmpEq: left 1, right 1, result 0
   0135 78                  381 	ld	a,b
   0136 B7                  382 	or	a,a
                            383 ;mem.c:83: return; /* Yes, do nothing. */
                            384 ;	genRet
                            385 ;mem.c:86: do {
                            386 ;	genLabel
   0137 CAr3Ds01            387 	jp	z,00117$
   013A                     388 00121$:
   013A C3rDCs01            389 	jp	00111$
   013D                     390 00117$:
                            391 ;	genAssign
                            392 ;	AOP_STK for 
   013D DD 4E 04            393 	ld	c,4(ix)
                            394 ;	genLabel
   0140                     395 00107$:
                            396 ;mem.c:87: ASSERT(PAGE_LOCKED(p), "mem_pages_unref(): Shouldn't unlock.\n");
                            397 ;	genPlus
                            398 ;	Can't optimise plus by inc, falling back to the normal way
   0140 FD 21r08s00         399 	ld	iy,#_page_list
   0144 FD 7E 00            400 	ld	a,0(iy)
   0147 81                  401 	add	a,c
   0148 5F                  402 	ld	e,a
   0149 FD 7E 01            403 	ld	a,1(iy)
   014C CE 00               404 	adc	a,#0x00
   014E 57                  405 	ld	d,a
                            406 ;	genPointerGet
   014F 1A                  407 	ld	a,(de)
                            408 ;	genAnd
   0150 47                  409 	ld	b,a
   0151 E6 04               410 	and	a,#0x04
   0153 CAr66s01            411 	jp	z,00105$
   0156                     412 00122$:
                            413 ;	genAnd
   0156 78                  414 	ld	a,b
   0157 E6 03               415 	and	a,#0x03
   0159 CAr66s01            416 	jp	z,00105$
   015C                     417 00123$:
                            418 ;	genIpush
                            419 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   015C C5                  420 	push	bc
   015D 21rE1s01            421 	ld	hl,#__str_0
   0160 E5                  422 	push	hl
                            423 ;	genCall
   0161 CDr00s00            424 	call	_panic
   0164 F1                  425 	pop	af
   0165 C1                  426 	pop	bc
                            427 ;	genLabel
   0166                     428 00105$:
                            429 ;mem.c:90: cont = PAGE_CONT(p);
                            430 ;	genPlus
                            431 ;	AOP_STK for _mem_pages_unref_sloc0_1_0
                            432 ;	Can't optimise plus by inc, falling back to the normal way
   0166 FD 21r08s00         433 	ld	iy,#_page_list
   016A FD 7E 00            434 	ld	a,0(iy)
   016D 81                  435 	add	a,c
   016E DD 77 FD            436 	ld	-3(ix),a
   0171 FD 7E 01            437 	ld	a,1(iy)
   0174 CE 00               438 	adc	a,#0x00
   0176 DD 77 FE            439 	ld	-2(ix),a
                            440 ;	genPointerGet
                            441 ;	AOP_STK for _mem_pages_unref_sloc0_1_0
   0179 DD 6E FD            442 	ld	l,-3(ix)
   017C DD 66 FE            443 	ld	h,-2(ix)
   017F 46                  444 	ld	b,(hl)
                            445 ;	genAnd
                            446 ;	AOP_STK for _mem_pages_unref_cont_1_1
   0180 78                  447 	ld	a,b
   0181 E6 04               448 	and	a,#0x04
   0183 DD 77 FF            449 	ld	-1(ix),a
                            450 ;mem.c:93: PAGE_FREE(p);
                            451 ;	genRightShift
   0186 41                  452 	ld	b,c
   0187 CB 38               453 	srl	b
   0189 CB 38               454 	srl	b
   018B CB 38               455 	srl	b
                            456 ;	genPlus
                            457 ;	Can't optimise plus by inc, falling back to the normal way
   018D FD 21r06s00         458 	ld	iy,#_page_map
   0191 FD 7E 00            459 	ld	a,0(iy)
   0194 80                  460 	add	a,b
   0195 47                  461 	ld	b,a
   0196 FD 7E 01            462 	ld	a,1(iy)
   0199 CE 00               463 	adc	a,#0x00
   019B 5F                  464 	ld	e,a
                            465 ;	genPointerGet
                            466 ;	AOP_STK for _mem_pages_unref_sloc1_1_0
   019C 68                  467 	ld	l,b
   019D 63                  468 	ld	h,e
   019E 7E                  469 	ld	a,(hl)
   019F DD 77 FC            470 	ld	-4(ix),a
                            471 ;	genAnd
   01A2 79                  472 	ld	a,c
   01A3 E6 07               473 	and	a,#0x07
                            474 ;	genLeftShift
   01A5 57                  475 	ld	d,a
   01A6 3C                  476 	inc	a
   01A7 F5                  477 	push	af
   01A8 16 01               478 	ld	d,#0x01
   01AA F1                  479 	pop	af
   01AB C3rB0s01            480 	jp	00125$
   01AE                     481 00124$:
   01AE CB 22               482 	sla	d
   01B0                     483 00125$:
   01B0 3D                  484 	dec	a
   01B1 C2rAEs01            485 	jp	nz,00124$
                            486 ;	genXor
   01B4 7A                  487 	ld	a,d
   01B5 EE FF               488 	xor	a,#0xFF
   01B7 57                  489 	ld	d,a
                            490 ;	genAnd
                            491 ;	AOP_STK for _mem_pages_unref_sloc1_1_0
   01B8 DD 7E FC            492 	ld	a,-4(ix)
   01BB A2                  493 	and	a,d
                            494 ;	genAssign (pointer)
                            495 ;	isBitvar = 0
   01BC 68                  496 	ld	l,b
   01BD 63                  497 	ld	h,e
   01BE 77                  498 	ld	(hl),a
                            499 ;	genAssign (pointer)
                            500 ;	AOP_STK for _mem_pages_unref_sloc0_1_0
                            501 ;	isBitvar = 0
   01BF DD 6E FD            502 	ld	l,-3(ix)
   01C2 DD 66 FE            503 	ld	h,-2(ix)
   01C5 36 00               504 	ld	(hl),#0x00
                            505 ;	genPlus
                            506 ;	genPlusIncr
   01C7 FD 21r0As00         507 	ld	iy,#_mem_num_pages_free
   01CB FD 34 00            508 	inc	0(iy)
   01CE C2rD4s01            509 	jp	nz,00126$
   01D1 FD 34 01            510 	inc	1(iy)
   01D4                     511 00126$:
                            512 ;mem.c:95: p++; /* Next page. */
                            513 ;	genPlus
                            514 ;	genPlusIncr
                            515 ; Removed redundent load
   01D4 0C                  516 	inc	c
                            517 ;mem.c:96: } while (cont); /* Continued by next. */
                            518 ;	genIfx
                            519 ;	AOP_STK for _mem_pages_unref_cont_1_1
   01D5 AF                  520 	xor	a,a
   01D6 DD B6 FF            521 	or	a,-1(ix)
   01D9 C2r40s01            522 	jp	nz,00107$
                            523 ;	genLabel
   01DC                     524 00111$:
                            525 ;	genEndFunction
   01DC DD F9               526 	ld	sp,ix
   01DE DD E1               527 	pop	ix
   01E0 C9                  528 	ret
   01E1                     529 _mem_pages_unref_end::
   01E1                     530 __str_0:
   01E1 6D 65 6D 5F 70 61   531 	.ascii "mem_pages_unref(): Shouldn't unlock."
        67 65 73 5F 75 6E
        72 65 66 28 29 3A
        20 53 68 6F 75 6C
        64 6E 27 74 20 75
        6E 6C 6F 63 6B 2E
   0205 0A                  532 	.db 0x0A
   0206 00                  533 	.db 0x00
                            534 ;mem.c:107: mem_pages_lock (pagenum_t p, u16_t num)
                            535 ;	genLabel
                            536 ;	genFunction
                            537 ;	---------------------------------
                            538 ; Function mem_pages_lock
                            539 ; ---------------------------------
   0207                     540 _mem_pages_lock_start::
   0207                     541 _mem_pages_lock:
   0207 DD E5               542 	push	ix
   0209 DD 21 00 00         543 	ld	ix,#0
   020D DD 39               544 	add	ix,sp
   020F 21 FC FF            545 	ld	hl,#-4
   0212 39                  546 	add	hl,sp
   0213 F9                  547 	ld	sp,hl
                            548 ;mem.c:109: while (num--) {
                            549 ;	genAssign
                            550 ;	AOP_STK for 
   0214 DD 4E 04            551 	ld	c,4(ix)
                            552 ;	genAssign
                            553 ;	AOP_STK for 
                            554 ;	AOP_STK for _mem_pages_lock_sloc0_1_0
   0217 DD 7E 05            555 	ld	a,5(ix)
   021A DD 77 FE            556 	ld	-2(ix),a
   021D DD 7E 06            557 	ld	a,6(ix)
   0220 DD 77 FF            558 	ld	-1(ix),a
                            559 ;	genLabel
   0223                     560 00105$:
                            561 ;	genAssign
                            562 ;	AOP_STK for _mem_pages_lock_sloc0_1_0
   0223 DD 46 FE            563 	ld	b,-2(ix)
   0226 DD 5E FF            564 	ld	e,-1(ix)
                            565 ;	genMinus
                            566 ;	AOP_STK for _mem_pages_lock_sloc0_1_0
   0229 DD 6E FE            567 	ld	l,-2(ix)
   022C DD 66 FF            568 	ld	h,-1(ix)
   022F 2B                  569 	dec	hl
   0230 DD 75 FE            570 	ld	-2(ix),l
   0233 DD 74 FF            571 	ld	-1(ix),h
                            572 ;	genIfx
   0236 78                  573 	ld	a,b
   0237 B3                  574 	or	a,e
   0238 CArDEs02            575 	jp	z,00110$
                            576 ;mem.c:110: if (PAGE_LOCKED(p) == FALSE) {
                            577 ;	genPlus
                            578 ;	Can't optimise plus by inc, falling back to the normal way
   023B FD 21r08s00         579 	ld	iy,#_page_list
   023F FD 7E 00            580 	ld	a,0(iy)
   0242 81                  581 	add	a,c
   0243 5F                  582 	ld	e,a
   0244 FD 7E 01            583 	ld	a,1(iy)
   0247 CE 00               584 	adc	a,#0x00
   0249 57                  585 	ld	d,a
                            586 ;	genPointerGet
   024A 1A                  587 	ld	a,(de)
                            588 ;	genAnd
   024B 47                  589 	ld	b,a
   024C E6 04               590 	and	a,#0x04
   024E CAr5As02            591 	jp	z,00103$
   0251                     592 00117$:
                            593 ;	genAnd
   0251 78                  594 	ld	a,b
   0252 E6 03               595 	and	a,#0x03
   0254 CAr5As02            596 	jp	z,00119$
   0257                     597 00118$:
   0257 C3rDAs02            598 	jp	00104$
   025A                     599 00119$:
                            600 ;	genLabel
   025A                     601 00103$:
                            602 ;mem.c:111: PAGE_LOCK(p);
                            603 ;	genPlus
                            604 ;	Can't optimise plus by inc, falling back to the normal way
   025A FD 21r08s00         605 	ld	iy,#_page_list
   025E FD 7E 00            606 	ld	a,0(iy)
   0261 81                  607 	add	a,c
   0262 5F                  608 	ld	e,a
   0263 FD 7E 01            609 	ld	a,1(iy)
   0266 CE 00               610 	adc	a,#0x00
   0268 57                  611 	ld	d,a
                            612 ;	genPointerGet
   0269 1A                  613 	ld	a,(de)
                            614 ;	genAnd
   026A 47                  615 	ld	b,a
   026B E6 04               616 	and	a,#0x04
   026D CAr79s02            617 	jp	z,00101$
   0270                     618 00120$:
                            619 ;	genAnd
   0270 78                  620 	ld	a,b
   0271 E6 03               621 	and	a,#0x03
   0273 CAr79s02            622 	jp	z,00122$
   0276                     623 00121$:
   0276 C3rDAs02            624 	jp	00104$
   0279                     625 00122$:
                            626 ;	genLabel
   0279                     627 00101$:
                            628 ;	genRightShift
   0279 41                  629 	ld	b,c
   027A CB 38               630 	srl	b
   027C CB 38               631 	srl	b
   027E CB 38               632 	srl	b
                            633 ;	genPlus
                            634 ;	Can't optimise plus by inc, falling back to the normal way
   0280 FD 21r06s00         635 	ld	iy,#_page_map
   0284 FD 7E 00            636 	ld	a,0(iy)
   0287 80                  637 	add	a,b
   0288 47                  638 	ld	b,a
   0289 FD 7E 01            639 	ld	a,1(iy)
   028C CE 00               640 	adc	a,#0x00
   028E 5F                  641 	ld	e,a
                            642 ;	genPointerGet
                            643 ;	AOP_STK for _mem_pages_lock_sloc1_1_0
   028F 68                  644 	ld	l,b
   0290 63                  645 	ld	h,e
   0291 7E                  646 	ld	a,(hl)
   0292 DD 77 FD            647 	ld	-3(ix),a
                            648 ;	genAnd
   0295 79                  649 	ld	a,c
   0296 E6 07               650 	and	a,#0x07
                            651 ;	genLeftShift
   0298 57                  652 	ld	d,a
   0299 3C                  653 	inc	a
                            654 ;	AOP_STK for _mem_pages_lock_sloc2_1_0
   029A F5                  655 	push	af
   029B DD 36 FC 01         656 	ld	-4(ix),#0x01
   029F F1                  657 	pop	af
   02A0 C3rA7s02            658 	jp	00124$
   02A3                     659 00123$:
   02A3 DD CB FC 26         660 	sla	-4(ix)
   02A7                     661 00124$:
   02A7 3D                  662 	dec	a
   02A8 C2rA3s02            663 	jp	nz,00123$
                            664 ;	genXor
                            665 ;	AOP_STK for _mem_pages_lock_sloc2_1_0
   02AB DD 7E FC            666 	ld	a,-4(ix)
   02AE EE FF               667 	xor	a,#0xFF
                            668 ;	genAnd
                            669 ;	AOP_STK for _mem_pages_lock_sloc1_1_0
   02B0 57                  670 	ld	d,a
   02B1 DD A6 FD            671 	and	a,-3(ix)
                            672 ;	genOr
                            673 ;	AOP_STK for _mem_pages_lock_sloc2_1_0
   02B4 57                  674 	ld	d,a
   02B5 DD B6 FC            675 	or	a,-4(ix)
                            676 ;	genAssign (pointer)
                            677 ;	isBitvar = 0
   02B8 68                  678 	ld	l,b
   02B9 63                  679 	ld	h,e
   02BA 77                  680 	ld	(hl),a
                            681 ;	genIpush
                            682 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   02BB C5                  683 	push	bc
   02BC 21 01 00            684 	ld	hl,#0x0001
   02BF E5                  685 	push	hl
                            686 ;	genIpush
   02C0 3E 01               687 	ld	a,#0x01
   02C2 F5                  688 	push	af
   02C3 33                  689 	inc	sp
                            690 ;	genIpush
   02C4 79                  691 	ld	a,c
   02C5 F5                  692 	push	af
   02C6 33                  693 	inc	sp
                            694 ;	genCall
   02C7 CDr00s00            695 	call	_page_alloc
   02CA F1                  696 	pop	af
   02CB F1                  697 	pop	af
   02CC C1                  698 	pop	bc
                            699 ;	genPlus
                            700 ;	genPlusIncr
   02CD FD 21r0Cs00         701 	ld	iy,#_mem_num_pages_locked
   02D1 FD 34 00            702 	inc	0(iy)
   02D4 C2rDAs02            703 	jp	nz,00125$
   02D7 FD 34 01            704 	inc	1(iy)
   02DA                     705 00125$:
                            706 ;	genLabel
   02DA                     707 00104$:
                            708 ;mem.c:118: p++; /* Next page. */
                            709 ;	genPlus
                            710 ;	genPlusIncr
                            711 ; Removed redundent load
   02DA 0C                  712 	inc	c
                            713 ;	genGoto
   02DB C3r23s02            714 	jp	00105$
                            715 ;	genLabel
   02DE                     716 00110$:
                            717 ;	genEndFunction
   02DE DD F9               718 	ld	sp,ix
   02E0 DD E1               719 	pop	ix
   02E2 C9                  720 	ret
   02E3                     721 _mem_pages_lock_end::
                            722 ;mem.c:125: mem_page_alloc (fragsize_t fsize, proc_t proc)
                            723 ;	genLabel
                            724 ;	genFunction
                            725 ;	---------------------------------
                            726 ; Function mem_page_alloc
                            727 ; ---------------------------------
   02E3                     728 _mem_page_alloc_start::
   02E3                     729 _mem_page_alloc:
   02E3 DD E5               730 	push	ix
   02E5 DD 21 00 00         731 	ld	ix,#0
   02E9 DD 39               732 	add	ix,sp
   02EB 21 FC FF            733 	ld	hl,#-4
   02EE 39                  734 	add	hl,sp
   02EF F9                  735 	ld	sp,hl
                            736 ;mem.c:127: pagenum_t  page = 0;
                            737 ;	genAssign
                            738 ;	AOP_STK for _mem_page_alloc_page_1_1
   02F0 DD 36 FF 00         739 	ld	-1(ix),#0x00
                            740 ;mem.c:139: for (i = (first >> 3); i >= 0; i--) {
                            741 ;	genAssign
   02F4 11 1F 00            742 	ld	de,#0x001F
                            743 ;	genAssign
                            744 ;	AOP_STK for _mem_page_alloc_i_1_1
   02F7 DD 36 FC 1F         745 	ld	-4(ix),#0x1F
   02FB DD 36 FD 00         746 	ld	-3(ix),#0x00
                            747 ;	genLabel
   02FF                     748 00103$:
                            749 ;	genCmpLt
                            750 ;	AOP_STK for _mem_page_alloc_i_1_1
   02FF DD 7E FD            751 	ld	a,-3(ix)
   0302 CB 7F               752 	bit	7,a
   0304 C2r78s03            753 	jp	nz,00106$
                            754 ;mem.c:141: if (page_map[i] == 0xff)
                            755 ;	genPlus
                            756 ;	AOP_STK for _mem_page_alloc_i_1_1
                            757 ;	Can't optimise plus by inc, falling back to the normal way
   0307 FD 21r06s00         758 	ld	iy,#_page_map
   030B FD 7E 00            759 	ld	a,0(iy)
   030E DD 86 FC            760 	add	a,-4(ix)
   0311 4F                  761 	ld	c,a
   0312 FD 7E 01            762 	ld	a,1(iy)
   0315 DD 8E FD            763 	adc	a,-3(ix)
   0318 47                  764 	ld	b,a
                            765 ;	genPointerGet
   0319 0A                  766 	ld	a,(bc)
                            767 ;	genCmpEq
                            768 ; genCmpEq: left 1, right 1, result 0
   031A 4F                  769 	ld	c,a
   031B FE FF               770 	cp	a,#0xFF
   031D CAr62s03            771 	jp	z,00105$
   0320                     772 00122$:
                            773 ;mem.c:145: for (page = 7, m = 128; page_map[i] & m; m >>= 1, page--);
                            774 ;	genAssign
                            775 ;	AOP_STK for _mem_page_alloc_m_1_1
   0320 DD 36 FE 80         776 	ld	-2(ix),#0x80
                            777 ;	genAssign
                            778 ;	AOP_STK for _mem_page_alloc_page_1_1
   0324 DD 36 FF 07         779 	ld	-1(ix),#0x07
                            780 ;	genLabel
   0328                     781 00109$:
                            782 ;	genPlus
                            783 ;	Can't optimise plus by inc, falling back to the normal way
   0328 FD 21r06s00         784 	ld	iy,#_page_map
   032C FD 7E 00            785 	ld	a,0(iy)
   032F 83                  786 	add	a,e
   0330 47                  787 	ld	b,a
   0331 FD 7E 01            788 	ld	a,1(iy)
   0334 8A                  789 	adc	a,d
   0335 4F                  790 	ld	c,a
                            791 ;	genPointerGet
   0336 68                  792 	ld	l,b
   0337 61                  793 	ld	h,c
   0338 46                  794 	ld	b,(hl)
                            795 ;	genAnd
                            796 ;	AOP_STK for _mem_page_alloc_m_1_1
   0339 78                  797 	ld	a,b
   033A DD A6 FE            798 	and	a,-2(ix)
                            799 ;	genIfx
   033D B7                  800 	or	a,a
   033E CAr4Fs03            801 	jp	z,00112$
                            802 ;	genRightShift
                            803 ;	AOP_STK for _mem_page_alloc_m_1_1
   0341 DD 7E FE            804 	ld	a,-2(ix)
   0344 CB 3F               805 	srl	a
   0346 DD 77 FE            806 	ld	-2(ix),a
                            807 ;	genMinus
                            808 ;	AOP_STK for _mem_page_alloc_page_1_1
   0349 DD 35 FF            809 	dec	-1(ix)
                            810 ;	genGoto
   034C C3r28s03            811 	jp	00109$
                            812 ;	genLabel
   034F                     813 00112$:
                            814 ;mem.c:148: page += i << 3;
                            815 ;	genCast
   034F 4B                  816 	ld	c,e
                            817 ;	genLeftShift
   0350 79                  818 	ld	a,c
   0351 07                  819 	rlca
   0352 07                  820 	rlca
   0353 07                  821 	rlca
   0354 E6 F8               822 	and	a,#0xF8
   0356 4F                  823 	ld	c,a
                            824 ;	genPlus
                            825 ;	AOP_STK for _mem_page_alloc_page_1_1
                            826 ;	Can't optimise plus by inc, falling back to the normal way
   0357 DD 7E FF            827 	ld	a,-1(ix)
   035A 81                  828 	add	a,c
   035B 4F                  829 	ld	c,a
                            830 ;	genAssign
                            831 ;	AOP_STK for _mem_page_alloc_page_1_1
   035C DD 71 FF            832 	ld	-1(ix),c
                            833 ;mem.c:149: break;
                            834 ;	genGoto
   035F C3r78s03            835 	jp	00106$
                            836 ;	genLabel
   0362                     837 00105$:
                            838 ;mem.c:139: for (i = (first >> 3); i >= 0; i--) {
                            839 ;	genMinus
                            840 ;	AOP_STK for _mem_page_alloc_i_1_1
   0362 DD 6E FC            841 	ld	l,-4(ix)
   0365 DD 66 FD            842 	ld	h,-3(ix)
   0368 2B                  843 	dec	hl
   0369 DD 75 FC            844 	ld	-4(ix),l
   036C DD 74 FD            845 	ld	-3(ix),h
                            846 ;	genAssign
                            847 ;	AOP_STK for _mem_page_alloc_i_1_1
   036F DD 5E FC            848 	ld	e,-4(ix)
   0372 DD 56 FD            849 	ld	d,-3(ix)
                            850 ;	genGoto
   0375 C3rFFs02            851 	jp	00103$
                            852 ;	genLabel
   0378                     853 00106$:
                            854 ;mem.c:153: if (page != 0)
                            855 ;	genCmpEq
                            856 ;	AOP_STK for _mem_page_alloc_page_1_1
                            857 ; genCmpEq: left 1, right 1, result 0
   0378 DD 7E FF            858 	ld	a,-1(ix)
   037B B7                  859 	or	a,a
   037C CAr98s03            860 	jp	z,00108$
   037F                     861 00123$:
                            862 ;mem.c:154: mem_pages_ref (page, 1, fsize, proc);
                            863 ;	genIpush
                            864 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            865 ;	AOP_STK for 
   037F DD 7E 05            866 	ld	a,5(ix)
   0382 F5                  867 	push	af
   0383 33                  868 	inc	sp
                            869 ;	genIpush
                            870 ;	AOP_STK for 
   0384 DD 7E 04            871 	ld	a,4(ix)
   0387 F5                  872 	push	af
   0388 33                  873 	inc	sp
                            874 ;	genIpush
   0389 21 01 00            875 	ld	hl,#0x0001
   038C E5                  876 	push	hl
                            877 ;	genIpush
                            878 ;	AOP_STK for _mem_page_alloc_page_1_1
   038D DD 7E FF            879 	ld	a,-1(ix)
   0390 F5                  880 	push	af
   0391 33                  881 	inc	sp
                            882 ;	genCall
   0392 CDr83s00            883 	call	_mem_pages_ref
   0395 F1                  884 	pop	af
   0396 F1                  885 	pop	af
   0397 33                  886 	inc	sp
                            887 ;	genLabel
   0398                     888 00108$:
                            889 ;mem.c:158: return page;
                            890 ;	genRet
                            891 ;	AOP_STK for _mem_page_alloc_page_1_1
                            892 ; Dump of IC_LEFT: type AOP_STK size 1
                            893 ;	 aop_stk -1
   0398 DD 6E FF            894 	ld	l,-1(ix)
                            895 ;	genLabel
   039B                     896 00113$:
                            897 ;	genEndFunction
   039B DD F9               898 	ld	sp,ix
   039D DD E1               899 	pop	ix
   039F C9                  900 	ret
   03A0                     901 _mem_page_alloc_end::
                            902 ;mem.c:164: mem_pages_alloc (pagenum_t num, fragsize_t fsize, proc_t proc)
                            903 ;	genLabel
                            904 ;	genFunction
                            905 ;	---------------------------------
                            906 ; Function mem_pages_alloc
                            907 ; ---------------------------------
   03A0                     908 _mem_pages_alloc_start::
   03A0                     909 _mem_pages_alloc:
   03A0 DD E5               910 	push	ix
   03A2 DD 21 00 00         911 	ld	ix,#0
   03A6 DD 39               912 	add	ix,sp
                            913 ;mem.c:176: if (num == 1)
                            914 ;	genCmpEq
                            915 ;	AOP_STK for 
                            916 ; genCmpEq: left 1, right 1, result 0
   03A8 DD 7E 04            917 	ld	a,4(ix)
   03AB FE 01               918 	cp	a,#0x01
   03AD CArB3s03            919 	jp	z,00110$
   03B0                     920 00109$:
   03B0 C3rC4s03            921 	jp	00102$
   03B3                     922 00110$:
                            923 ;mem.c:177: return mem_page_alloc (fsize, proc);
                            924 ;	genIpush
                            925 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                            926 ;	AOP_STK for 
   03B3 DD 7E 06            927 	ld	a,6(ix)
   03B6 F5                  928 	push	af
   03B7 33                  929 	inc	sp
                            930 ;	genIpush
                            931 ;	AOP_STK for 
   03B8 DD 7E 05            932 	ld	a,5(ix)
   03BB F5                  933 	push	af
   03BC 33                  934 	inc	sp
                            935 ;	genCall
   03BD CDrE3s02            936 	call	_mem_page_alloc
   03C0 F1                  937 	pop	af
                            938 ;	genRet
                            939 ; Dump of IC_LEFT: type AOP_STR size 1
   03C1 C3rFEs03            940 	jp	00105$
                            941 ;	genLabel
   03C4                     942 00102$:
                            943 ;mem.c:183: ret = bitmap_seek (page_map, NUM_PAGES, first, num);
                            944 ;	genCast
                            945 ;	AOP_STK for 
   03C4 DD 4E 04            946 	ld	c,4(ix)
   03C7 06 00               947 	ld	b,#0x00
                            948 ;	genAssign
   03C9 ED 5Br06s00         949 	ld	de,(_page_map)
                            950 ;	genIpush
                            951 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   03CD C5                  952 	push	bc
   03CE C5                  953 	push	bc
                            954 ;	genIpush
   03CF 21 00 00            955 	ld	hl,#0x0000
   03D2 E5                  956 	push	hl
                            957 ;	genIpush
   03D3 21 00 01            958 	ld	hl,#0x0100
   03D6 E5                  959 	push	hl
                            960 ;	genIpush
   03D7 D5                  961 	push	de
                            962 ;	genCall
   03D8 CDr00s00            963 	call	_bitmap_seek
   03DB 54                  964 	ld	d,h
   03DC 5D                  965 	ld	e,l
   03DD F1                  966 	pop	af
   03DE F1                  967 	pop	af
   03DF F1                  968 	pop	af
   03E0 F1                  969 	pop	af
   03E1 C1                  970 	pop	bc
                            971 ;	genCast
                            972 ; Removed redundent load
                            973 ;mem.c:185: if (ret != 0)
                            974 ;	genCmpEq
                            975 ; genCmpEq: left 1, right 1, result 0
   03E2 7B                  976 	ld	a,e
   03E3 B7                  977 	or	a,a
   03E4 CArFDs03            978 	jp	z,00104$
   03E7                     979 00111$:
                            980 ;mem.c:187: mem_pages_ref (ret, num, fsize, proc);
                            981 ;	genIpush
                            982 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   03E7 D5                  983 	push	de
                            984 ;	AOP_STK for 
   03E8 DD 7E 06            985 	ld	a,6(ix)
   03EB F5                  986 	push	af
   03EC 33                  987 	inc	sp
                            988 ;	genIpush
                            989 ;	AOP_STK for 
   03ED DD 7E 05            990 	ld	a,5(ix)
   03F0 F5                  991 	push	af
   03F1 33                  992 	inc	sp
                            993 ;	genIpush
   03F2 C5                  994 	push	bc
                            995 ;	genIpush
   03F3 7B                  996 	ld	a,e
   03F4 F5                  997 	push	af
   03F5 33                  998 	inc	sp
                            999 ;	genCall
   03F6 CDr83s00           1000 	call	_mem_pages_ref
   03F9 F1                 1001 	pop	af
   03FA F1                 1002 	pop	af
   03FB 33                 1003 	inc	sp
   03FC D1                 1004 	pop	de
                           1005 ;	genLabel
   03FD                    1006 00104$:
                           1007 ;mem.c:191: return ret;
                           1008 ;	genRet
                           1009 ; Dump of IC_LEFT: type AOP_REG size 1
                           1010 ;	 reg = e
   03FD 6B                 1011 	ld	l,e
                           1012 ;	genLabel
   03FE                    1013 00105$:
                           1014 ;	genEndFunction
   03FE DD E1              1015 	pop	ix
   0400 C9                 1016 	ret
   0401                    1017 _mem_pages_alloc_end::
                           1018 ;mem.c:196: mem_page_free (void *pos)
                           1019 ;	genLabel
                           1020 ;	genFunction
                           1021 ;	---------------------------------
                           1022 ; Function mem_page_free
                           1023 ; ---------------------------------
   0401                    1024 _mem_page_free_start::
   0401                    1025 _mem_page_free:
   0401 DD E5              1026 	push	ix
   0403 DD 21 00 00        1027 	ld	ix,#0
   0407 DD 39              1028 	add	ix,sp
                           1029 ;mem.c:198: pagenum_t        p = ADDR2PAGE(pos);
                           1030 ;	genCast
                           1031 ;	AOP_STK for 
   0409 DD 4E 04           1032 	ld	c,4(ix)
   040C DD 46 05           1033 	ld	b,5(ix)
                           1034 ;	genCast
   040F 1Er0E              1035 	ld	e,#<_ram
   0411 16s00              1036 	ld	d,#>_ram
                           1037 ;	genMinus
   0413 79                 1038 	ld	a,c
   0414 93                 1039 	sub	a,e
   0415 4F                 1040 	ld	c,a
   0416 78                 1041 	ld	a,b
   0417 9A                 1042 	sbc	a,d
   0418 47                 1043 	ld	b,a
                           1044 ;	genCast
                           1045 ;	genCast
                           1046 ;	genRightShift
   0419 48                 1047 	ld	c,b
   041A 06 00              1048 	ld	b,#0x00
                           1049 ;	genCast
                           1050 ; Removed redundent load
                           1051 ;mem.c:202: if (!PAGE_USED(p))
                           1052 ;	genRightShift
   041C 41                 1053 	ld	b,c
   041D CB 38              1054 	srl	b
   041F CB 38              1055 	srl	b
   0421 CB 38              1056 	srl	b
                           1057 ;	genPlus
                           1058 ;	Can't optimise plus by inc, falling back to the normal way
   0423 FD 21r06s00        1059 	ld	iy,#_page_map
   0427 FD 7E 00           1060 	ld	a,0(iy)
   042A 80                 1061 	add	a,b
   042B 47                 1062 	ld	b,a
   042C FD 7E 01           1063 	ld	a,1(iy)
   042F CE 00              1064 	adc	a,#0x00
   0431 5F                 1065 	ld	e,a
                           1066 ;	genPointerGet
   0432 68                 1067 	ld	l,b
   0433 63                 1068 	ld	h,e
   0434 46                 1069 	ld	b,(hl)
                           1070 ;	genAnd
   0435 79                 1071 	ld	a,c
   0436 E6 07              1072 	and	a,#0x07
                           1073 ;	genLeftShift
   0438 5F                 1074 	ld	e,a
   0439 3C                 1075 	inc	a
   043A F5                 1076 	push	af
   043B 1E 01              1077 	ld	e,#0x01
   043D F1                 1078 	pop	af
   043E C3r43s04           1079 	jp	00107$
   0441                    1080 00106$:
   0441 CB 23              1081 	sla	e
   0443                    1082 00107$:
   0443 3D                 1083 	dec	a
   0444 C2r41s04           1084 	jp	nz,00106$
                           1085 ;	genAnd
   0447 78                 1086 	ld	a,b
   0448 A3                 1087 	and	a,e
                           1088 ;	genIfx
   0449 B7                 1089 	or	a,a
                           1090 ;mem.c:203: return;
                           1091 ;	genRet
                           1092 ;	genLabel
   044A CAr54s04           1093 	jp	z,00103$
   044D                    1094 00102$:
                           1095 ;mem.c:207: mem_pages_unref (p);
                           1096 ;	genIpush
                           1097 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   044D 79                 1098 	ld	a,c
   044E F5                 1099 	push	af
   044F 33                 1100 	inc	sp
                           1101 ;	genCall
   0450 CDr02s01           1102 	call	_mem_pages_unref
   0453 33                 1103 	inc	sp
                           1104 ;	genLabel
   0454                    1105 00103$:
                           1106 ;	genEndFunction
   0454 DD E1              1107 	pop	ix
   0456 C9                 1108 	ret
   0457                    1109 _mem_page_free_end::
                           1110 ;mem.c:216: mem_frag_sort (struct stack_hdr *stack)
                           1111 ;	genLabel
                           1112 ;	genFunction
                           1113 ;	---------------------------------
                           1114 ; Function mem_frag_sort
                           1115 ; ---------------------------------
   0457                    1116 _mem_frag_sort_start::
   0457                    1117 _mem_frag_sort:
   0457 DD E5              1118 	push	ix
   0459 DD 21 00 00        1119 	ld	ix,#0
   045D DD 39              1120 	add	ix,sp
   045F 21 EB FF           1121 	ld	hl,#-21
   0462 39                 1122 	add	hl,sp
   0463 F9                 1123 	ld	sp,hl
                           1124 ;mem.c:221: u16_t       num = stack->index; /* Number of elements on stack. */
                           1125 ;	genAssign
                           1126 ;	AOP_STK for 
   0464 DD 4E 04           1127 	ld	c,4(ix)
   0467 DD 46 05           1128 	ld	b,5(ix)
   046A C5                 1129 	push	bc
   046B FD E1              1130 	pop	iy
                           1131 ;	genPointerGet
   046D FD 4E 00           1132 	ld	c,0(iy)
   0470 FD 46 01           1133 	ld	b,1(iy)
                           1134 ;	genAssign
                           1135 ;	AOP_STK for _mem_frag_sort_num_1_1
   0473 DD 71 FA           1136 	ld	-6(ix),c
   0476 DD 70 FB           1137 	ld	-5(ix),b
                           1138 ;mem.c:222: struct fragment  *st = STACK_START(stack, struct fragment);
                           1139 ;	genCast
                           1140 ;	AOP_STK for 
   0479 DD 5E 04           1141 	ld	e,4(ix)
   047C DD 56 05           1142 	ld	d,5(ix)
                           1143 ;	genPlus
                           1144 ;	genPlusIncr
   047F 13                 1145 	inc	de
   0480 13                 1146 	inc	de
                           1147 ;	genCast
                           1148 ;	AOP_STK for _mem_frag_sort_st_1_1
   0481 DD 73 F8           1149 	ld	-8(ix),e
   0484 DD 72 F9           1150 	ld	-7(ix),d
                           1151 ;mem.c:224: for (i = 0; i < num - 1; i++) {
                           1152 ;	genMinus
                           1153 ;	AOP_STK for _mem_frag_sort_num_1_1
                           1154 ;	AOP_STK for _mem_frag_sort_sloc4_1_0
   0487 DD 7E FA           1155 	ld	a,-6(ix)
   048A C6 FF              1156 	add	a,#0xFF
   048C DD 77 EF           1157 	ld	-17(ix),a
   048F DD 7E FB           1158 	ld	a,-5(ix)
   0492 CE FF              1159 	adc	a,#0xFF
   0494 DD 77 F0           1160 	ld	-16(ix),a
                           1161 ;	genAssign
                           1162 ;	AOP_STK for _mem_frag_sort_i_1_1
   0497 DD 36 FE 00        1163 	ld	-2(ix),#0x00
   049B DD 36 FF 00        1164 	ld	-1(ix),#0x00
                           1165 ;	genLabel
   049F                    1166 00107$:
                           1167 ;	genCmpLt
                           1168 ;	AOP_STK for _mem_frag_sort_i_1_1
                           1169 ;	AOP_STK for _mem_frag_sort_sloc4_1_0
   049F DD 7E FE           1170 	ld	a,-2(ix)
   04A2 DD 96 EF           1171 	sub	a,-17(ix)
   04A5 DD 7E FF           1172 	ld	a,-1(ix)
   04A8 DD 9E F0           1173 	sbc	a,-16(ix)
   04AB D2r8Cs05           1174 	jp	nc,00111$
                           1175 ;mem.c:225: for (j = i + 1; j < num; j++) {
                           1176 ;	genPlus
                           1177 ;	AOP_STK for _mem_frag_sort_i_1_1
                           1178 ;	genPlusIncr
   04AE DD 5E FE           1179 	ld	e,-2(ix)
   04B1 DD 56 FF           1180 	ld	d,-1(ix)
   04B4 13                 1181 	inc	de
                           1182 ;	genLeftShift
                           1183 ;	AOP_STK for _mem_frag_sort_i_1_1
                           1184 ;	AOP_STK for _mem_frag_sort_sloc0_1_0
   04B5 DD 7E FE           1185 	ld	a,-2(ix)
   04B8 DD 77 F6           1186 	ld	-10(ix),a
   04BB DD 7E FF           1187 	ld	a,-1(ix)
   04BE DD 77 F7           1188 	ld	-9(ix),a
   04C1 DD CB F6 26        1189 	sla	-10(ix)
   04C5 DD CB F7 16        1190 	rl	-9(ix)
                           1191 ;	genPlus
                           1192 ;	AOP_STK for _mem_frag_sort_st_1_1
                           1193 ;	AOP_STK for _mem_frag_sort_sloc0_1_0
                           1194 ;	AOP_STK for _mem_frag_sort_sloc1_1_0
                           1195 ;	Can't optimise plus by inc, falling back to the normal way
   04C9 DD 7E F8           1196 	ld	a,-8(ix)
   04CC DD 86 F6           1197 	add	a,-10(ix)
   04CF DD 77 F4           1198 	ld	-12(ix),a
   04D2 DD 7E F9           1199 	ld	a,-7(ix)
   04D5 DD 8E F7           1200 	adc	a,-9(ix)
   04D8 DD 77 F5           1201 	ld	-11(ix),a
                           1202 ;	genAssign
                           1203 ;	(registers are the same)
                           1204 ;	genLabel
   04DB                    1205 00103$:
                           1206 ;	genCmpLt
                           1207 ;	AOP_STK for _mem_frag_sort_num_1_1
   04DB 7B                 1208 	ld	a,e
   04DC DD 96 FA           1209 	sub	a,-6(ix)
   04DF 7A                 1210 	ld	a,d
   04E0 DD 9E FB           1211 	sbc	a,-5(ix)
   04E3 D2r80s05           1212 	jp	nc,00109$
                           1213 ;mem.c:226: if (st[i].page > st[j].page) {
                           1214 ;	genPointerGet
                           1215 ;	AOP_STK for _mem_frag_sort_sloc1_1_0
                           1216 ;	AOP_STK for _mem_frag_sort_sloc2_1_0
   04E6 DD 6E F4           1217 	ld	l,-12(ix)
   04E9 DD 66 F5           1218 	ld	h,-11(ix)
   04EC 7E                 1219 	ld	a,(hl)
   04ED DD 77 F3           1220 	ld	-13(ix),a
                           1221 ;	genLeftShift
                           1222 ;	AOP_STK for _mem_frag_sort_sloc3_1_0
   04F0 DD 73 F1           1223 	ld	-15(ix),e
   04F3 DD 72 F2           1224 	ld	-14(ix),d
   04F6 DD CB F1 26        1225 	sla	-15(ix)
   04FA DD CB F2 16        1226 	rl	-14(ix)
                           1227 ;	genPlus
                           1228 ;	AOP_STK for _mem_frag_sort_st_1_1
                           1229 ;	AOP_STK for _mem_frag_sort_sloc3_1_0
                           1230 ;	Can't optimise plus by inc, falling back to the normal way
   04FE DD 7E F8           1231 	ld	a,-8(ix)
   0501 DD 86 F1           1232 	add	a,-15(ix)
   0504 4F                 1233 	ld	c,a
   0505 DD 7E F9           1234 	ld	a,-7(ix)
   0508 DD 8E F2           1235 	adc	a,-14(ix)
   050B 47                 1236 	ld	b,a
                           1237 ;	genPointerGet
   050C 0A                 1238 	ld	a,(bc)
                           1239 ;	genCmpGt
                           1240 ;	AOP_STK for _mem_frag_sort_sloc2_1_0
   050D 4F                 1241 	ld	c,a
   050E DD 96 F3           1242 	sub	a,-13(ix)
   0511 D2r7Cs05           1243 	jp	nc,00105$
                           1244 ;mem.c:227: pg = st[i].page;
                           1245 ;	genAssign
                           1246 ;	AOP_STK for _mem_frag_sort_sloc2_1_0
   0514 DD 46 F3           1247 	ld	b,-13(ix)
                           1248 ;	genAssign
                           1249 ;	AOP_STK for _mem_frag_sort_pg_1_1
   0517 DD 70 FD           1250 	ld	-3(ix),b
                           1251 ;mem.c:228: id = st[i].idx;
                           1252 ;	genPlus
                           1253 ;	AOP_STK for _mem_frag_sort_st_1_1
                           1254 ;	AOP_STK for _mem_frag_sort_sloc0_1_0
                           1255 ;	AOP_STK for _mem_frag_sort_sloc6_1_0
                           1256 ;	Can't optimise plus by inc, falling back to the normal way
   051A DD 7E F8           1257 	ld	a,-8(ix)
   051D DD 86 F6           1258 	add	a,-10(ix)
   0520 DD 77 ED           1259 	ld	-19(ix),a
   0523 DD 7E F9           1260 	ld	a,-7(ix)
   0526 DD 8E F7           1261 	adc	a,-9(ix)
   0529 DD 77 EE           1262 	ld	-18(ix),a
                           1263 ;	genPlus
                           1264 ;	AOP_STK for _mem_frag_sort_sloc6_1_0
                           1265 ;	AOP_STK for _mem_frag_sort_sloc7_1_0
                           1266 ;	genPlusIncr
                           1267 ;	Can't optimise plus by inc, falling back to the normal way
   052C DD 7E ED           1268 	ld	a,-19(ix)
   052F C6 01              1269 	add	a,#0x01
   0531 DD 77 EB           1270 	ld	-21(ix),a
   0534 DD 7E EE           1271 	ld	a,-18(ix)
   0537 CE 00              1272 	adc	a,#0x00
   0539 DD 77 EC           1273 	ld	-20(ix),a
                           1274 ;	genPointerGet
                           1275 ;	AOP_STK for _mem_frag_sort_sloc7_1_0
   053C DD 6E EB           1276 	ld	l,-21(ix)
   053F DD 66 EC           1277 	ld	h,-20(ix)
   0542 46                 1278 	ld	b,(hl)
                           1279 ;	genAssign
                           1280 ;	AOP_STK for _mem_frag_sort_id_1_1
   0543 DD 70 FC           1281 	ld	-4(ix),b
                           1282 ;mem.c:229: st[i].page = st[j].page;
                           1283 ;	genAssign (pointer)
                           1284 ;	AOP_STK for _mem_frag_sort_sloc6_1_0
                           1285 ;	isBitvar = 0
   0546 DD 6E ED           1286 	ld	l,-19(ix)
   0549 DD 66 EE           1287 	ld	h,-18(ix)
   054C 71                 1288 	ld	(hl),c
                           1289 ;mem.c:230: st[i].idx = st[j].idx;
                           1290 ;	genPlus
                           1291 ;	AOP_STK for _mem_frag_sort_st_1_1
                           1292 ;	AOP_STK for _mem_frag_sort_sloc3_1_0
                           1293 ;	AOP_STK for _mem_frag_sort_sloc6_1_0
                           1294 ;	Can't optimise plus by inc, falling back to the normal way
   054D DD 7E F8           1295 	ld	a,-8(ix)
   0550 DD 86 F1           1296 	add	a,-15(ix)
   0553 DD 77 ED           1297 	ld	-19(ix),a
   0556 DD 7E F9           1298 	ld	a,-7(ix)
   0559 DD 8E F2           1299 	adc	a,-14(ix)
   055C DD 77 EE           1300 	ld	-18(ix),a
                           1301 ;	genPlus
                           1302 ;	AOP_STK for _mem_frag_sort_sloc6_1_0
                           1303 ;	genPlusIncr
   055F DD 4E ED           1304 	ld	c,-19(ix)
   0562 DD 46 EE           1305 	ld	b,-18(ix)
   0565 03                 1306 	inc	bc
                           1307 ;	genPointerGet
   0566 0A                 1308 	ld	a,(bc)
                           1309 ;	genAssign (pointer)
                           1310 ;	AOP_STK for _mem_frag_sort_sloc7_1_0
                           1311 ;	isBitvar = 0
   0567 DD 6E EB           1312 	ld	l,-21(ix)
   056A DD 66 EC           1313 	ld	h,-20(ix)
   056D 77                 1314 	ld	(hl),a
                           1315 ;mem.c:231: st[j].page = pg;
                           1316 ;	genAssign (pointer)
                           1317 ;	AOP_STK for _mem_frag_sort_sloc6_1_0
                           1318 ;	AOP_STK for _mem_frag_sort_pg_1_1
                           1319 ;	isBitvar = 0
   056E DD 6E ED           1320 	ld	l,-19(ix)
   0571 DD 66 EE           1321 	ld	h,-18(ix)
   0574 DD 7E FD           1322 	ld	a,-3(ix)
   0577 77                 1323 	ld	(hl),a
                           1324 ;mem.c:232: st[j].idx = id;
                           1325 ;	genAssign (pointer)
                           1326 ;	AOP_STK for _mem_frag_sort_id_1_1
                           1327 ;	isBitvar = 0
   0578 DD 7E FC           1328 	ld	a,-4(ix)
   057B 02                 1329 	ld	(bc),a
                           1330 ;	genLabel
   057C                    1331 00105$:
                           1332 ;mem.c:225: for (j = i + 1; j < num; j++) {
                           1333 ;	genPlus
                           1334 ;	genPlusIncr
   057C 13                 1335 	inc	de
                           1336 ;	genGoto
   057D C3rDBs04           1337 	jp	00103$
                           1338 ;	genLabel
   0580                    1339 00109$:
                           1340 ;mem.c:224: for (i = 0; i < num - 1; i++) {
                           1341 ;	genPlus
                           1342 ;	AOP_STK for _mem_frag_sort_i_1_1
                           1343 ;	genPlusIncr
   0580 DD 34 FE           1344 	inc	-2(ix)
   0583 C2r89s05           1345 	jp	nz,00124$
   0586 DD 34 FF           1346 	inc	-1(ix)
   0589                    1347 00124$:
                           1348 ;	genGoto
   0589 C3r9Fs04           1349 	jp	00107$
                           1350 ;	genLabel
   058C                    1351 00111$:
                           1352 ;	genEndFunction
   058C DD F9              1353 	ld	sp,ix
   058E DD E1              1354 	pop	ix
   0590 C9                 1355 	ret
   0591                    1356 _mem_frag_sort_end::
                           1357 ;mem.c:251: mem_frag_clean_stack (struct stack_hdr *stack, int frags)
                           1358 ;	genLabel
                           1359 ;	genFunction
                           1360 ;	---------------------------------
                           1361 ; Function mem_frag_clean_stack
                           1362 ; ---------------------------------
   0591                    1363 _mem_frag_clean_stack_start::
   0591                    1364 _mem_frag_clean_stack:
   0591 DD E5              1365 	push	ix
   0593 DD 21 00 00        1366 	ld	ix,#0
   0597 DD 39              1367 	add	ix,sp
   0599 21 ED FF           1368 	ld	hl,#-19
   059C 39                 1369 	add	hl,sp
   059D F9                 1370 	ld	sp,hl
                           1371 ;mem.c:256: u16_t       num = stack->index; /* Number of elements on stack. */
                           1372 ;	genAssign
                           1373 ;	AOP_STK for 
                           1374 ;	AOP_STK for _mem_frag_clean_stack_sloc1_1_0
   059E DD 7E 04           1375 	ld	a,4(ix)
   05A1 DD 77 F3           1376 	ld	-13(ix),a
   05A4 DD 7E 05           1377 	ld	a,5(ix)
   05A7 DD 77 F4           1378 	ld	-12(ix),a
                           1379 ;	genPointerGet
                           1380 ;	AOP_STK for _mem_frag_clean_stack_sloc1_1_0
   05AA DD 6E F3           1381 	ld	l,-13(ix)
   05AD DD 66 F4           1382 	ld	h,-12(ix)
   05B0 5E                 1383 	ld	e,(hl)
   05B1 23                 1384 	inc	hl
   05B2 56                 1385 	ld	d,(hl)
                           1386 ;	genAssign
                           1387 ;	AOP_STK for _mem_frag_clean_stack_num_1_1
   05B3 DD 73 F9           1388 	ld	-7(ix),e
   05B6 DD 72 FA           1389 	ld	-6(ix),d
                           1390 ;mem.c:257: struct fragment  *st = STACK_START(stack, struct fragment);
                           1391 ;	genCast
                           1392 ;	AOP_STK for 
   05B9 DD 5E 04           1393 	ld	e,4(ix)
   05BC DD 56 05           1394 	ld	d,5(ix)
                           1395 ;	genPlus
                           1396 ;	genPlusIncr
   05BF 13                 1397 	inc	de
   05C0 13                 1398 	inc	de
                           1399 ;	genCast
                           1400 ;	AOP_STK for _mem_frag_clean_stack_st_1_1
   05C1 DD 73 F7           1401 	ld	-9(ix),e
   05C4 DD 72 F8           1402 	ld	-8(ix),d
                           1403 ;mem.c:260: if (num < frags)
                           1404 ;	genAssign
                           1405 ;	(operands are equal 3)
                           1406 ;	genCmpLt
                           1407 ;	AOP_STK for _mem_frag_clean_stack_num_1_1
                           1408 ;	AOP_STK for 
   05C7 DD 7E F9           1409 	ld	a,-7(ix)
   05CA DD 96 06           1410 	sub	a,6(ix)
   05CD DD 7E FA           1411 	ld	a,-6(ix)
   05D0 DD 9E 07           1412 	sbc	a,7(ix)
   05D3 D2rD9s05           1413 	jp	nc,00102$
                           1414 ;mem.c:261: return;
                           1415 ;	genRet
   05D6 C3r78s07           1416 	jp	00117$
                           1417 ;	genLabel
   05D9                    1418 00102$:
                           1419 ;mem.c:263: mem_frag_sort (stack);
                           1420 ;	genIpush
                           1421 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1422 ;	AOP_STK for _mem_frag_clean_stack_sloc1_1_0
   05D9 DD 6E F3           1423 	ld	l,-13(ix)
   05DC DD 66 F4           1424 	ld	h,-12(ix)
   05DF E5                 1425 	push	hl
                           1426 ;	genCall
   05E0 CDr57s04           1427 	call	_mem_frag_sort
   05E3 F1                 1428 	pop	af
                           1429 ;mem.c:266: src = 0;
                           1430 ;	genAssign
                           1431 ;	AOP_STK for _mem_frag_clean_stack_src_1_1
   05E4 DD 36 FE 00        1432 	ld	-2(ix),#0x00
   05E8 DD 36 FF 00        1433 	ld	-1(ix),#0x00
                           1434 ;mem.c:267: dst = 0;
                           1435 ;	genAssign
                           1436 ;	AOP_STK for _mem_frag_clean_stack_dst_1_1
   05EC DD 36 FC 00        1437 	ld	-4(ix),#0x00
   05F0 DD 36 FD 00        1438 	ld	-3(ix),#0x00
                           1439 ;mem.c:268: while (src < num) {
                           1440 ;	genLabel
   05F4                    1441 00114$:
                           1442 ;	genCmpLt
                           1443 ;	AOP_STK for _mem_frag_clean_stack_src_1_1
                           1444 ;	AOP_STK for _mem_frag_clean_stack_num_1_1
   05F4 DD 7E FE           1445 	ld	a,-2(ix)
   05F7 DD 96 F9           1446 	sub	a,-7(ix)
   05FA DD 7E FF           1447 	ld	a,-1(ix)
   05FD DD 9E FA           1448 	sbc	a,-6(ix)
   0600 D2r69s07           1449 	jp	nc,00116$
                           1450 ;mem.c:271: pg = st[src].page;
                           1451 ;	genLeftShift
                           1452 ;	AOP_STK for _mem_frag_clean_stack_src_1_1
   0603 DD 5E FE           1453 	ld	e,-2(ix)
   0606 DD 56 FF           1454 	ld	d,-1(ix)
   0609 CB 23              1455 	sla	e
   060B CB 12              1456 	rl	d
                           1457 ;	genPlus
                           1458 ;	AOP_STK for _mem_frag_clean_stack_st_1_1
                           1459 ;	Can't optimise plus by inc, falling back to the normal way
   060D DD 7E F7           1460 	ld	a,-9(ix)
   0610 83                 1461 	add	a,e
   0611 5F                 1462 	ld	e,a
   0612 DD 7E F8           1463 	ld	a,-8(ix)
   0615 8A                 1464 	adc	a,d
   0616 57                 1465 	ld	d,a
                           1466 ;	genPointerGet
   0617 1A                 1467 	ld	a,(de)
   0618 5F                 1468 	ld	e,a
                           1469 ;	genAssign
   0619 4B                 1470 	ld	c,e
                           1471 ;mem.c:273: while ((src + id) < num && st[src + id].page == pg)
                           1472 ;	genAssign
   061A 06 01              1473 	ld	b,#0x01
                           1474 ;	genLabel
   061C                    1475 00104$:
                           1476 ;	genCast
   061C 58                 1477 	ld	e,b
   061D 16 00              1478 	ld	d,#0x00
                           1479 ;	genPlus
                           1480 ;	AOP_STK for _mem_frag_clean_stack_src_1_1
                           1481 ;	Can't optimise plus by inc, falling back to the normal way
   061F DD 7E FE           1482 	ld	a,-2(ix)
   0622 83                 1483 	add	a,e
   0623 5F                 1484 	ld	e,a
   0624 DD 7E FF           1485 	ld	a,-1(ix)
   0627 8A                 1486 	adc	a,d
   0628 57                 1487 	ld	d,a
                           1488 ;	genCmpLt
                           1489 ;	AOP_STK for _mem_frag_clean_stack_num_1_1
   0629 7B                 1490 	ld	a,e
   062A DD 96 F9           1491 	sub	a,-7(ix)
   062D 7A                 1492 	ld	a,d
   062E DD 9E FA           1493 	sbc	a,-6(ix)
   0631 D2r4Fs06           1494 	jp	nc,00106$
                           1495 ;	genLeftShift
   0634 CB 23              1496 	sla	e
   0636 CB 12              1497 	rl	d
                           1498 ;	genPlus
                           1499 ;	AOP_STK for _mem_frag_clean_stack_st_1_1
                           1500 ;	Can't optimise plus by inc, falling back to the normal way
   0638 DD 7E F7           1501 	ld	a,-9(ix)
   063B 83                 1502 	add	a,e
   063C 5F                 1503 	ld	e,a
   063D DD 7E F8           1504 	ld	a,-8(ix)
   0640 8A                 1505 	adc	a,d
   0641 57                 1506 	ld	d,a
                           1507 ;	genPointerGet
   0642 1A                 1508 	ld	a,(de)
                           1509 ;	genCmpEq
                           1510 ; genCmpEq: left 1, right 1, result 0
   0643 5F                 1511 	ld	e,a
   0644 B9                 1512 	cp	c
   0645 CAr4Bs06           1513 	jp	z,00135$
   0648                    1514 00134$:
   0648 C3r4Fs06           1515 	jp	00106$
   064B                    1516 00135$:
                           1517 ;mem.c:274: id++;
                           1518 ;	genPlus
                           1519 ;	genPlusIncr
                           1520 ; Removed redundent load
   064B 04                 1521 	inc	b
                           1522 ;	genGoto
   064C C3r1Cs06           1523 	jp	00104$
                           1524 ;	genLabel
   064F                    1525 00106$:
                           1526 ;mem.c:277: if (id == frags) {
                           1527 ;	genCast
   064F 58                 1528 	ld	e,b
   0650 16 00              1529 	ld	d,#0x00
                           1530 ;	genCmpEq
                           1531 ;	AOP_STK for 
                           1532 ; genCmpEq: left 2, right 2, result 0
   0652 DD 7E 06           1533 	ld	a,6(ix)
   0655 BB                 1534 	cp	e
   0656 C2r60s06           1535 	jp	nz,00136$
   0659 DD 7E 07           1536 	ld	a,7(ix)
   065C BA                 1537 	cp	d
   065D CAr63s06           1538 	jp	z,00137$
   0660                    1539 00136$:
   0660 C3r7Ds06           1540 	jp	00108$
   0663                    1541 00137$:
                           1542 ;mem.c:279: mem_pages_unref (pg);
                           1543 ;	genIpush
                           1544 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0663 D5                 1545 	push	de
   0664 79                 1546 	ld	a,c
   0665 F5                 1547 	push	af
   0666 33                 1548 	inc	sp
                           1549 ;	genCall
   0667 CDr02s01           1550 	call	_mem_pages_unref
   066A 33                 1551 	inc	sp
   066B D1                 1552 	pop	de
                           1553 ;mem.c:282: src += id;
                           1554 ;	genPlus
                           1555 ;	AOP_STK for _mem_frag_clean_stack_src_1_1
                           1556 ;	Can't optimise plus by inc, falling back to the normal way
   066C DD 7E FE           1557 	ld	a,-2(ix)
   066F 83                 1558 	add	a,e
   0670 DD 77 FE           1559 	ld	-2(ix),a
   0673 DD 7E FF           1560 	ld	a,-1(ix)
   0676 8A                 1561 	adc	a,d
   0677 DD 77 FF           1562 	ld	-1(ix),a
                           1563 ;mem.c:286: continue;
                           1564 ;	genGoto
   067A C3rF4s05           1565 	jp	00114$
                           1566 ;	genLabel
   067D                    1567 00108$:
                           1568 ;mem.c:290: if (src == dst) {
                           1569 ;	genCmpEq
                           1570 ;	AOP_STK for _mem_frag_clean_stack_src_1_1
                           1571 ;	AOP_STK for _mem_frag_clean_stack_dst_1_1
                           1572 ; genCmpEq: left 2, right 2, result 0
   067D DD 7E FC           1573 	ld	a,-4(ix)
   0680 DD BE FE           1574 	cp	-2(ix)
   0683 C2r8Fs06           1575 	jp	nz,00138$
   0686 DD 7E FD           1576 	ld	a,-3(ix)
   0689 DD BE FF           1577 	cp	-1(ix)
   068C CAr92s06           1578 	jp	z,00139$
   068F                    1579 00138$:
   068F C3rAFs06           1580 	jp	00128$
   0692                    1581 00139$:
                           1582 ;mem.c:291: src += id;
                           1583 ;	genPlus
                           1584 ;	AOP_STK for _mem_frag_clean_stack_src_1_1
                           1585 ;	Can't optimise plus by inc, falling back to the normal way
   0692 DD 7E FE           1586 	ld	a,-2(ix)
   0695 83                 1587 	add	a,e
   0696 DD 77 FE           1588 	ld	-2(ix),a
   0699 DD 7E FF           1589 	ld	a,-1(ix)
   069C 8A                 1590 	adc	a,d
   069D DD 77 FF           1591 	ld	-1(ix),a
                           1592 ;mem.c:292: dst = src;
                           1593 ;	genAssign
                           1594 ;	AOP_STK for _mem_frag_clean_stack_src_1_1
                           1595 ;	AOP_STK for _mem_frag_clean_stack_dst_1_1
   06A0 DD 7E FE           1596 	ld	a,-2(ix)
   06A3 DD 77 FC           1597 	ld	-4(ix),a
   06A6 DD 7E FF           1598 	ld	a,-1(ix)
   06A9 DD 77 FD           1599 	ld	-3(ix),a
                           1600 ;mem.c:293: continue;
                           1601 ;	genGoto
   06AC C3rF4s05           1602 	jp	00114$
                           1603 ;mem.c:297: while (id--) {
                           1604 ;	genLabel
   06AF                    1605 00128$:
                           1606 ;	genAssign
                           1607 ;	AOP_STK for _mem_frag_clean_stack_src_1_1
   06AF DD 5E FE           1608 	ld	e,-2(ix)
   06B2 DD 56 FF           1609 	ld	d,-1(ix)
                           1610 ;	genAssign
                           1611 ;	AOP_STK for _mem_frag_clean_stack_dst_1_1
                           1612 ;	AOP_STK for _mem_frag_clean_stack_sloc0_1_0
   06B5 DD 7E FC           1613 	ld	a,-4(ix)
   06B8 DD 77 F5           1614 	ld	-11(ix),a
   06BB DD 7E FD           1615 	ld	a,-3(ix)
   06BE DD 77 F6           1616 	ld	-10(ix),a
                           1617 ;	genAssign
                           1618 ;	AOP_STK for _mem_frag_clean_stack_id_1_1
   06C1 DD 70 FB           1619 	ld	-5(ix),b
                           1620 ;	genLabel
   06C4                    1621 00111$:
                           1622 ;	genAssign
                           1623 ;	AOP_STK for _mem_frag_clean_stack_id_1_1
   06C4 DD 46 FB           1624 	ld	b,-5(ix)
                           1625 ;	genMinus
                           1626 ;	AOP_STK for _mem_frag_clean_stack_id_1_1
   06C7 DD 35 FB           1627 	dec	-5(ix)
                           1628 ;	genIfx
   06CA AF                 1629 	xor	a,a
   06CB B0                 1630 	or	a,b
   06CC CArF4s05           1631 	jp	z,00114$
                           1632 ;mem.c:298: st[dst].page = st[src].page;
                           1633 ;	genLeftShift
                           1634 ;	AOP_STK for _mem_frag_clean_stack_sloc0_1_0
                           1635 ;	AOP_STK for _mem_frag_clean_stack_sloc2_1_0
   06CF DD 7E F5           1636 	ld	a,-11(ix)
   06D2 DD 77 F1           1637 	ld	-15(ix),a
   06D5 DD 7E F6           1638 	ld	a,-10(ix)
   06D8 DD 77 F2           1639 	ld	-14(ix),a
   06DB DD CB F1 26        1640 	sla	-15(ix)
   06DF DD CB F2 16        1641 	rl	-14(ix)
                           1642 ;	genPlus
                           1643 ;	AOP_STK for _mem_frag_clean_stack_st_1_1
                           1644 ;	AOP_STK for _mem_frag_clean_stack_sloc2_1_0
                           1645 ;	AOP_STK for _mem_frag_clean_stack_sloc3_1_0
                           1646 ;	Can't optimise plus by inc, falling back to the normal way
   06E3 DD 7E F7           1647 	ld	a,-9(ix)
   06E6 DD 86 F1           1648 	add	a,-15(ix)
   06E9 DD 77 EF           1649 	ld	-17(ix),a
   06EC DD 7E F8           1650 	ld	a,-8(ix)
   06EF DD 8E F2           1651 	adc	a,-14(ix)
   06F2 DD 77 F0           1652 	ld	-16(ix),a
                           1653 ;	genLeftShift
                           1654 ;	AOP_STK for _mem_frag_clean_stack_sloc4_1_0
   06F5 DD 73 ED           1655 	ld	-19(ix),e
   06F8 DD 72 EE           1656 	ld	-18(ix),d
   06FB DD CB ED 26        1657 	sla	-19(ix)
   06FF DD CB EE 16        1658 	rl	-18(ix)
                           1659 ;	genPlus
                           1660 ;	AOP_STK for _mem_frag_clean_stack_st_1_1
                           1661 ;	AOP_STK for _mem_frag_clean_stack_sloc4_1_0
                           1662 ;	Can't optimise plus by inc, falling back to the normal way
   0703 DD 7E F7           1663 	ld	a,-9(ix)
   0706 DD 86 ED           1664 	add	a,-19(ix)
   0709 4F                 1665 	ld	c,a
   070A DD 7E F8           1666 	ld	a,-8(ix)
   070D DD 8E EE           1667 	adc	a,-18(ix)
   0710 47                 1668 	ld	b,a
                           1669 ;	genPointerGet
   0711 0A                 1670 	ld	a,(bc)
                           1671 ;	genAssign (pointer)
                           1672 ;	AOP_STK for _mem_frag_clean_stack_sloc3_1_0
                           1673 ;	isBitvar = 0
   0712 DD 6E EF           1674 	ld	l,-17(ix)
   0715 DD 66 F0           1675 	ld	h,-16(ix)
   0718 77                 1676 	ld	(hl),a
                           1677 ;mem.c:299: st[dst].idx = st[src].idx;
                           1678 ;	genPlus
                           1679 ;	AOP_STK for _mem_frag_clean_stack_st_1_1
                           1680 ;	AOP_STK for _mem_frag_clean_stack_sloc2_1_0
                           1681 ;	Can't optimise plus by inc, falling back to the normal way
   0719 DD 7E F7           1682 	ld	a,-9(ix)
   071C DD 86 F1           1683 	add	a,-15(ix)
   071F 4F                 1684 	ld	c,a
   0720 DD 7E F8           1685 	ld	a,-8(ix)
   0723 DD 8E F2           1686 	adc	a,-14(ix)
   0726 47                 1687 	ld	b,a
                           1688 ;	genPlus
                           1689 ;	AOP_STK for _mem_frag_clean_stack_sloc3_1_0
                           1690 ;	genPlusIncr
                           1691 ;	Can't optimise plus by inc, falling back to the normal way
   0727 79                 1692 	ld	a,c
   0728 C6 01              1693 	add	a,#0x01
   072A DD 77 EF           1694 	ld	-17(ix),a
   072D 78                 1695 	ld	a,b
   072E CE 00              1696 	adc	a,#0x00
   0730 DD 77 F0           1697 	ld	-16(ix),a
                           1698 ;	genPlus
                           1699 ;	AOP_STK for _mem_frag_clean_stack_st_1_1
                           1700 ;	AOP_STK for _mem_frag_clean_stack_sloc4_1_0
                           1701 ;	Can't optimise plus by inc, falling back to the normal way
   0733 DD 7E F7           1702 	ld	a,-9(ix)
   0736 DD 86 ED           1703 	add	a,-19(ix)
   0739 4F                 1704 	ld	c,a
   073A DD 7E F8           1705 	ld	a,-8(ix)
   073D DD 8E EE           1706 	adc	a,-18(ix)
   0740 47                 1707 	ld	b,a
                           1708 ;	genPlus
                           1709 ;	genPlusIncr
   0741 03                 1710 	inc	bc
                           1711 ;	genPointerGet
   0742 0A                 1712 	ld	a,(bc)
                           1713 ;	genAssign (pointer)
                           1714 ;	AOP_STK for _mem_frag_clean_stack_sloc3_1_0
                           1715 ;	isBitvar = 0
   0743 DD 6E EF           1716 	ld	l,-17(ix)
   0746 DD 66 F0           1717 	ld	h,-16(ix)
   0749 77                 1718 	ld	(hl),a
                           1719 ;mem.c:300: src++;
                           1720 ;	genPlus
                           1721 ;	genPlusIncr
   074A 13                 1722 	inc	de
                           1723 ;	genAssign
                           1724 ;	AOP_STK for _mem_frag_clean_stack_src_1_1
   074B DD 73 FE           1725 	ld	-2(ix),e
   074E DD 72 FF           1726 	ld	-1(ix),d
                           1727 ;mem.c:301: dst++;
                           1728 ;	genPlus
                           1729 ;	AOP_STK for _mem_frag_clean_stack_sloc0_1_0
                           1730 ;	genPlusIncr
   0751 DD 34 F5           1731 	inc	-11(ix)
   0754 C2r5As07           1732 	jp	nz,00144$
   0757 DD 34 F6           1733 	inc	-10(ix)
   075A                    1734 00144$:
                           1735 ;	genAssign
                           1736 ;	AOP_STK for _mem_frag_clean_stack_sloc0_1_0
                           1737 ;	AOP_STK for _mem_frag_clean_stack_dst_1_1
   075A DD 7E F5           1738 	ld	a,-11(ix)
   075D DD 77 FC           1739 	ld	-4(ix),a
   0760 DD 7E F6           1740 	ld	a,-10(ix)
   0763 DD 77 FD           1741 	ld	-3(ix),a
                           1742 ;	genGoto
   0766 C3rC4s06           1743 	jp	00111$
                           1744 ;	genLabel
   0769                    1745 00116$:
                           1746 ;mem.c:306: stack->index = dst;
                           1747 ;	genAssign (pointer)
                           1748 ;	AOP_STK for _mem_frag_clean_stack_sloc1_1_0
                           1749 ;	AOP_STK for _mem_frag_clean_stack_dst_1_1
                           1750 ;	isBitvar = 0
   0769 DD 6E F3           1751 	ld	l,-13(ix)
   076C DD 66 F4           1752 	ld	h,-12(ix)
   076F DD 7E FC           1753 	ld	a,-4(ix)
   0772 77                 1754 	ld	(hl),a
   0773 23                 1755 	inc	hl
   0774 DD 7E FD           1756 	ld	a,-3(ix)
   0777 77                 1757 	ld	(hl),a
                           1758 ;	genLabel
   0778                    1759 00117$:
                           1760 ;	genEndFunction
   0778 DD F9              1761 	ld	sp,ix
   077A DD E1              1762 	pop	ix
   077C C9                 1763 	ret
   077D                    1764 _mem_frag_clean_stack_end::
                           1765 ;mem.c:326: mem_frag_add_page (struct stack_hdr *stack, fragsize_t fs, struct proc *proc)
                           1766 ;	genLabel
                           1767 ;	genFunction
                           1768 ;	---------------------------------
                           1769 ; Function mem_frag_add_page
                           1770 ; ---------------------------------
   077D                    1771 _mem_frag_add_page_start::
   077D                    1772 _mem_frag_add_page:
   077D DD E5              1773 	push	ix
   077F DD 21 00 00        1774 	ld	ix,#0
   0783 DD 39              1775 	add	ix,sp
   0785 21 F3 FF           1776 	ld	hl,#-13
   0788 39                 1777 	add	hl,sp
   0789 F9                 1778 	ld	sp,hl
                           1779 ;mem.c:329: fragsize_t	num = FRAGLOG2NUM(fs);
                           1780 ;	genLeftShift
                           1781 ;	AOP_STK for 
   078A DD 7E 06           1782 	ld	a,6(ix)
   078D 3C                 1783 	inc	a
                           1784 ;	AOP_STK for _mem_frag_add_page_num_1_1
   078E F5                 1785 	push	af
   078F DD 36 FF 01        1786 	ld	-1(ix),#0x01
   0793 F1                 1787 	pop	af
   0794 C3r9Bs07           1788 	jp	00130$
   0797                    1789 00129$:
   0797 DD CB FF 26        1790 	sla	-1(ix)
   079B                    1791 00130$:
   079B 3D                 1792 	dec	a
   079C C2r97s07           1793 	jp	nz,00129$
                           1794 ;mem.c:330: proc_t    procid = proc->id;
                           1795 ;	genAssign
                           1796 ;	AOP_STK for 
   079F DD 5E 07           1797 	ld	e,7(ix)
   07A2 DD 56 08           1798 	ld	d,8(ix)
                           1799 ;	genPlus
                           1800 ;	genPlusIncr
                           1801 ;	Can't optimise plus by inc, falling back to the normal way
   07A5 7B                 1802 	ld	a,e
   07A6 C6 25              1803 	add	a,#0x25
   07A8 47                 1804 	ld	b,a
   07A9 7A                 1805 	ld	a,d
   07AA CE 00              1806 	adc	a,#0x00
   07AC 4F                 1807 	ld	c,a
                           1808 ;	genPointerGet
   07AD 68                 1809 	ld	l,b
   07AE 61                 1810 	ld	h,c
   07AF 46                 1811 	ld	b,(hl)
                           1812 ;	genAssign
                           1813 ;	AOP_STK for _mem_frag_add_page_procid_1_1
   07B0 DD 70 FE           1814 	ld	-2(ix),b
                           1815 ;mem.c:335: ERRCHK(FRAGSPACE(proc, fs) < (sizeof (struct fragment) * num), ENOMEM);
                           1816 ;	genPlus
                           1817 ;	genPlusIncr
                           1818 ;	Can't optimise plus by inc, falling back to the normal way
   07B3 7B                 1819 	ld	a,e
   07B4 C6 18              1820 	add	a,#0x18
   07B6 5F                 1821 	ld	e,a
   07B7 7A                 1822 	ld	a,d
   07B8 CE 00              1823 	adc	a,#0x00
   07BA 57                 1824 	ld	d,a
                           1825 ;	genMinus
                           1826 ;	AOP_STK for 
   07BB DD 7E 06           1827 	ld	a,6(ix)
   07BE C6 FF              1828 	add	a,#0xFF
                           1829 ;	genLeftShift
   07C0 47                 1830 	ld	b,a
   07C1 87                 1831 	add	a,a
   07C2 47                 1832 	ld	b,a
                           1833 ;	genPlus
                           1834 ;	Can't optimise plus by inc, falling back to the normal way
   07C3 7B                 1835 	ld	a,e
   07C4 80                 1836 	add	a,b
   07C5 47                 1837 	ld	b,a
   07C6 7A                 1838 	ld	a,d
   07C7 CE 00              1839 	adc	a,#0x00
   07C9 5F                 1840 	ld	e,a
                           1841 ;	genPointerGet
   07CA 68                 1842 	ld	l,b
   07CB 63                 1843 	ld	h,e
   07CC 46                 1844 	ld	b,(hl)
   07CD 23                 1845 	inc	hl
   07CE 5E                 1846 	ld	e,(hl)
                           1847 ;	genPointerGet
   07CF 68                 1848 	ld	l,b
   07D0 63                 1849 	ld	h,e
   07D1 46                 1850 	ld	b,(hl)
   07D2 23                 1851 	inc	hl
   07D3 5E                 1852 	ld	e,(hl)
                           1853 ;	genLeftShift
   07D4 CB 20              1854 	sla	b
   07D6 CB 13              1855 	rl	e
                           1856 ;	genPlus
                           1857 ;	genPlusIncr
                           1858 ;	Can't optimise plus by inc, falling back to the normal way
   07D8 78                 1859 	ld	a,b
   07D9 C6 02              1860 	add	a,#0x02
   07DB 47                 1861 	ld	b,a
   07DC 7B                 1862 	ld	a,e
   07DD CE 00              1863 	adc	a,#0x00
   07DF 5F                 1864 	ld	e,a
                           1865 ;	genMinus
   07E0 3E 00              1866 	ld	a,#0x00
   07E2 90                 1867 	sub	a,b
   07E3 47                 1868 	ld	b,a
   07E4 3E 01              1869 	ld	a,#0x01
   07E6 9B                 1870 	sbc	a,e
   07E7 5F                 1871 	ld	e,a
                           1872 ;	genCast
                           1873 ;	AOP_STK for _mem_frag_add_page_num_1_1
   07E8 DD 56 FF           1874 	ld	d,-1(ix)
   07EB 0E 00              1875 	ld	c,#0x00
                           1876 ;	genLeftShift
   07ED CB 22              1877 	sla	d
   07EF CB 11              1878 	rl	c
                           1879 ;	genCmpLt
   07F1 78                 1880 	ld	a,b
   07F2 92                 1881 	sub	a,d
   07F3 7B                 1882 	ld	a,e
   07F4 99                 1883 	sbc	a,c
   07F5 F2rFEs07           1884 	jp	p,00102$
                           1885 ;	genRet
                           1886 ; Dump of IC_LEFT: type AOP_LIT size 2
   07F8 21 01 00           1887 	ld	hl,#0x0001
   07FB C3r95s09           1888 	jp	00114$
                           1889 ;	genLabel
   07FE                    1890 00102$:
                           1891 ;mem.c:339: p = mem_page_alloc (fs, procid);
                           1892 ;	genIpush
                           1893 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           1894 ;	AOP_STK for _mem_frag_add_page_procid_1_1
   07FE DD 7E FE           1895 	ld	a,-2(ix)
   0801 F5                 1896 	push	af
   0802 33                 1897 	inc	sp
                           1898 ;	genIpush
                           1899 ;	AOP_STK for 
   0803 DD 7E 06           1900 	ld	a,6(ix)
   0806 F5                 1901 	push	af
   0807 33                 1902 	inc	sp
                           1903 ;	genCall
   0808 CDrE3s02           1904 	call	_mem_page_alloc
   080B 4D                 1905 	ld	c,l
   080C F1                 1906 	pop	af
                           1907 ;	genAssign
                           1908 ;	AOP_STK for _mem_frag_add_page_p_1_1
   080D DD 71 FD           1909 	ld	-3(ix),c
                           1910 ;mem.c:343: ERRCHK(p == 0, ENOMEM); /* Out of memory. */
                           1911 ;	genIfx
                           1912 ;	AOP_STK for _mem_frag_add_page_p_1_1
   0810 AF                 1913 	xor	a,a
   0811 DD B6 FD           1914 	or	a,-3(ix)
   0814 C2r1Ds08           1915 	jp	nz,00104$
                           1916 ;	genRet
                           1917 ; Dump of IC_LEFT: type AOP_LIT size 2
   0817 21 01 00           1918 	ld	hl,#0x0001
   081A C3r95s09           1919 	jp	00114$
                           1920 ;	genLabel
   081D                    1921 00104$:
                           1922 ;mem.c:346: for (i = 0; i < num; i++) {
                           1923 ;	genAssign
                           1924 ;	AOP_STK for _mem_frag_add_page_sloc4_1_0
   081D DD 36 F3 00        1925 	ld	-13(ix),#0x00
                           1926 ;	genAssign
                           1927 ;	AOP_STK for _mem_frag_add_page_i_1_1
   0821 DD 36 FC 00        1928 	ld	-4(ix),#0x00
                           1929 ;	genLabel
   0825                    1930 00110$:
                           1931 ;	genCmpLt
                           1932 ;	AOP_STK for _mem_frag_add_page_i_1_1
                           1933 ;	AOP_STK for _mem_frag_add_page_num_1_1
   0825 DD 7E FC           1934 	ld	a,-4(ix)
   0828 DD 96 FF           1935 	sub	a,-1(ix)
   082B D2r92s09           1936 	jp	nc,00113$
                           1937 ;mem.c:348: nfrag = FRAG_PUSH(stack);
                           1938 ;	genAssign
                           1939 ;	AOP_STK for 
                           1940 ;	AOP_STK for _mem_frag_add_page_sloc0_1_0
   082E DD 7E 04           1941 	ld	a,4(ix)
   0831 DD 77 FA           1942 	ld	-6(ix),a
   0834 DD 7E 05           1943 	ld	a,5(ix)
   0837 DD 77 FB           1944 	ld	-5(ix),a
                           1945 ;	genPointerGet
                           1946 ;	AOP_STK for _mem_frag_add_page_sloc0_1_0
                           1947 ;	AOP_STK for _mem_frag_add_page_sloc1_1_0
   083A DD 6E FA           1948 	ld	l,-6(ix)
   083D DD 66 FB           1949 	ld	h,-5(ix)
   0840 7E                 1950 	ld	a,(hl)
   0841 DD 77 F8           1951 	ld	-8(ix),a
   0844 23                 1952 	inc	hl
   0845 7E                 1953 	ld	a,(hl)
   0846 DD 77 F9           1954 	ld	-7(ix),a
                           1955 ;	genLeftShift
                           1956 ;	AOP_STK for _mem_frag_add_page_sloc1_1_0
                           1957 ;	AOP_STK for _mem_frag_add_page_sloc2_1_0
   0849 DD 7E F8           1958 	ld	a,-8(ix)
   084C DD 77 F6           1959 	ld	-10(ix),a
   084F DD 7E F9           1960 	ld	a,-7(ix)
   0852 DD 77 F7           1961 	ld	-9(ix),a
   0855 DD CB F6 26        1962 	sla	-10(ix)
   0859 DD CB F7 16        1963 	rl	-9(ix)
                           1964 ;	genPlus
                           1965 ;	AOP_STK for _mem_frag_add_page_sloc2_1_0
                           1966 ;	genPlusIncr
                           1967 ;	Can't optimise plus by inc, falling back to the normal way
   085D DD 7E F6           1968 	ld	a,-10(ix)
   0860 C6 04              1969 	add	a,#0x04
   0862 57                 1970 	ld	d,a
   0863 DD 7E F7           1971 	ld	a,-9(ix)
   0866 CE 00              1972 	adc	a,#0x00
   0868 4F                 1973 	ld	c,a
                           1974 ;	genCast
                           1975 ;	AOP_STK for 
                           1976 ;	AOP_STK for _mem_frag_add_page_sloc3_1_0
   0869 DD 7E 04           1977 	ld	a,4(ix)
   086C DD 77 F4           1978 	ld	-12(ix),a
   086F DD 7E 05           1979 	ld	a,5(ix)
   0872 DD 77 F5           1980 	ld	-11(ix),a
                           1981 ;	genCast
   0875 1Er0E              1982 	ld	e,#<_ram
   0877 06s00              1983 	ld	b,#>_ram
                           1984 ;	genMinus
                           1985 ;	AOP_STK for _mem_frag_add_page_sloc3_1_0
   0879 DD 7E F4           1986 	ld	a,-12(ix)
   087C 93                 1987 	sub	a,e
   087D 5F                 1988 	ld	e,a
   087E DD 7E F5           1989 	ld	a,-11(ix)
   0881 98                 1990 	sbc	a,b
   0882 47                 1991 	ld	b,a
                           1992 ;	genCast
                           1993 ;	genCast
                           1994 ;	genRightShift
   0883 58                 1995 	ld	e,b
   0884 06 00              1996 	ld	b,#0x00
                           1997 ;	genPlus
                           1998 ;	Can't optimise plus by inc, falling back to the normal way
   0886 FD 21r08s00        1999 	ld	iy,#_page_list
   088A FD 7E 00           2000 	ld	a,0(iy)
   088D 83                 2001 	add	a,e
   088E 5F                 2002 	ld	e,a
   088F FD 7E 01           2003 	ld	a,1(iy)
   0892 88                 2004 	adc	a,b
   0893 47                 2005 	ld	b,a
                           2006 ;	genPointerGet
   0894 6B                 2007 	ld	l,e
   0895 60                 2008 	ld	h,b
   0896 5E                 2009 	ld	e,(hl)
                           2010 ;	genAnd
   0897 7B                 2011 	ld	a,e
   0898 E6 03              2012 	and	a,#0x03
                           2013 ;	genRightShift
   089A 5F                 2014 	ld	e,a
   089B 3C                 2015 	inc	a
   089C F5                 2016 	push	af
   089D 1E 00              2017 	ld	e,#0x00
   089F 06 01              2018 	ld	b,#0x01
   08A1 F1                 2019 	pop	af
   08A2 C3rA9s08           2020 	jp	00138$
   08A5                    2021 00137$:
   08A5 CB 38              2022 	srl	b
   08A7 CB 1B              2023 	rr	e
   08A9                    2024 00138$:
   08A9 3D                 2025 	dec	a
   08AA C2rA5s08           2026 	jp	nz,00137$
                           2027 ;	genCmpGt
   08AD 7B                 2028 	ld	a,e
   08AE 92                 2029 	sub	a,d
   08AF 78                 2030 	ld	a,b
   08B0 99                 2031 	sbc	a,c
   08B1 D2rBAs08           2032 	jp	nc,00116$
                           2033 ;	genAssign
   08B4 01 00 00           2034 	ld	bc,#0x0000
                           2035 ;	genGoto
   08B7 C3rE6s08           2036 	jp	00117$
                           2037 ;	genLabel
   08BA                    2038 00116$:
                           2039 ;	genPlus
                           2040 ;	AOP_STK for _mem_frag_add_page_sloc3_1_0
                           2041 ;	genPlusIncr
   08BA DD 5E F4           2042 	ld	e,-12(ix)
   08BD DD 56 F5           2043 	ld	d,-11(ix)
   08C0 13                 2044 	inc	de
   08C1 13                 2045 	inc	de
                           2046 ;	genCast
                           2047 ;	AOP_STK for _mem_frag_add_page_sloc3_1_0
   08C2 DD 73 F4           2048 	ld	-12(ix),e
   08C5 DD 72 F5           2049 	ld	-11(ix),d
                           2050 ;	genPlus
                           2051 ;	AOP_STK for _mem_frag_add_page_sloc1_1_0
                           2052 ;	genPlusIncr
   08C8 DD 5E F8           2053 	ld	e,-8(ix)
   08CB DD 56 F9           2054 	ld	d,-7(ix)
   08CE 13                 2055 	inc	de
                           2056 ;	genAssign (pointer)
                           2057 ;	AOP_STK for _mem_frag_add_page_sloc0_1_0
                           2058 ;	isBitvar = 0
   08CF DD 6E FA           2059 	ld	l,-6(ix)
   08D2 DD 66 FB           2060 	ld	h,-5(ix)
   08D5 73                 2061 	ld	(hl),e
   08D6 23                 2062 	inc	hl
   08D7 72                 2063 	ld	(hl),d
                           2064 ;	genPlus
                           2065 ;	AOP_STK for _mem_frag_add_page_sloc3_1_0
                           2066 ;	AOP_STK for _mem_frag_add_page_sloc2_1_0
                           2067 ;	Can't optimise plus by inc, falling back to the normal way
   08D8 DD 7E F4           2068 	ld	a,-12(ix)
   08DB DD 86 F6           2069 	add	a,-10(ix)
   08DE 4F                 2070 	ld	c,a
   08DF DD 7E F5           2071 	ld	a,-11(ix)
   08E2 DD 8E F7           2072 	adc	a,-9(ix)
   08E5 47                 2073 	ld	b,a
                           2074 ;	genLabel
   08E6                    2075 00117$:
                           2076 ;	genAssign
                           2077 ;	(registers are the same)
                           2078 ;	genAssign
                           2079 ;	(registers are the same)
                           2080 ;mem.c:354: if (nfrag == 0) {
                           2081 ;	genIfx
   08E6 79                 2082 	ld	a,c
   08E7 B0                 2083 	or	a,b
   08E8 C2r7Ds09           2084 	jp	nz,00109$
                           2085 ;mem.c:355: while (i--)
                           2086 ;	genAssign
                           2087 ;	AOP_STK for _mem_frag_add_page_sloc4_1_0
   08EB DD 4E F3           2088 	ld	c,-13(ix)
                           2089 ;	genLabel
   08EE                    2090 00105$:
                           2091 ;	genAssign
   08EE 51                 2092 	ld	d,c
                           2093 ;	genMinus
   08EF 0D                 2094 	dec	c
                           2095 ;	genIfx
   08F0 AF                 2096 	xor	a,a
   08F1 B2                 2097 	or	a,d
   08F2 CAr21s09           2098 	jp	z,00107$
                           2099 ;mem.c:356: FRAG_POP(stack);
                           2100 ;	genPointerGet
                           2101 ;	AOP_STK for _mem_frag_add_page_sloc0_1_0
   08F5 DD 6E FA           2102 	ld	l,-6(ix)
   08F8 DD 66 FB           2103 	ld	h,-5(ix)
   08FB 56                 2104 	ld	d,(hl)
   08FC 23                 2105 	inc	hl
   08FD 5E                 2106 	ld	e,(hl)
                           2107 ;	genNot
   08FE 7A                 2108 	ld	a,d
   08FF B3                 2109 	or	a,e
   0900 D6 01              2110 	sub	a,#0x01
   0902 3E 00              2111 	ld	a,#0x00
   0904 17                 2112 	rla
   0905 57                 2113 	ld	d,a
                           2114 ;	genIfx
   0906 AF                 2115 	xor	a,a
   0907 B2                 2116 	or	a,d
   0908 C2rEEs08           2117 	jp	nz,00105$
                           2118 ;	genPointerGet
                           2119 ;	AOP_STK for _mem_frag_add_page_sloc0_1_0
   090B DD 6E FA           2120 	ld	l,-6(ix)
   090E DD 66 FB           2121 	ld	h,-5(ix)
   0911 5E                 2122 	ld	e,(hl)
   0912 23                 2123 	inc	hl
   0913 56                 2124 	ld	d,(hl)
                           2125 ;	genMinus
   0914 1B                 2126 	dec	de
                           2127 ;	genAssign (pointer)
                           2128 ;	AOP_STK for _mem_frag_add_page_sloc0_1_0
                           2129 ;	isBitvar = 0
   0915 DD 6E FA           2130 	ld	l,-6(ix)
   0918 DD 66 FB           2131 	ld	h,-5(ix)
   091B 73                 2132 	ld	(hl),e
   091C 23                 2133 	inc	hl
   091D 72                 2134 	ld	(hl),d
                           2135 ;	genGoto
   091E C3rEEs08           2136 	jp	00105$
                           2137 ;	genLabel
   0921                    2138 00107$:
                           2139 ;mem.c:359: PAGE_FREE(p);
                           2140 ;	genRightShift
                           2141 ;	AOP_STK for _mem_frag_add_page_p_1_1
   0921 DD 5E FD           2142 	ld	e,-3(ix)
   0924 CB 3B              2143 	srl	e
   0926 CB 3B              2144 	srl	e
   0928 CB 3B              2145 	srl	e
                           2146 ;	genPlus
                           2147 ;	Can't optimise plus by inc, falling back to the normal way
   092A FD 21r06s00        2148 	ld	iy,#_page_map
   092E FD 7E 00           2149 	ld	a,0(iy)
   0931 83                 2150 	add	a,e
   0932 4F                 2151 	ld	c,a
   0933 FD 7E 01           2152 	ld	a,1(iy)
   0936 CE 00              2153 	adc	a,#0x00
   0938 47                 2154 	ld	b,a
                           2155 ;	genPointerGet
   0939 0A                 2156 	ld	a,(bc)
   093A 5F                 2157 	ld	e,a
                           2158 ;	genAnd
                           2159 ;	AOP_STK for _mem_frag_add_page_p_1_1
   093B DD 7E FD           2160 	ld	a,-3(ix)
   093E E6 07              2161 	and	a,#0x07
                           2162 ;	genLeftShift
   0940 57                 2163 	ld	d,a
   0941 3C                 2164 	inc	a
   0942 F5                 2165 	push	af
   0943 16 01              2166 	ld	d,#0x01
   0945 F1                 2167 	pop	af
   0946 C3r4Bs09           2168 	jp	00140$
   0949                    2169 00139$:
   0949 CB 22              2170 	sla	d
   094B                    2171 00140$:
   094B 3D                 2172 	dec	a
   094C C2r49s09           2173 	jp	nz,00139$
                           2174 ;	genXor
   094F 7A                 2175 	ld	a,d
   0950 EE FF              2176 	xor	a,#0xFF
   0952 57                 2177 	ld	d,a
                           2178 ;	genAnd
   0953 7B                 2179 	ld	a,e
   0954 A2                 2180 	and	a,d
                           2181 ;	genAssign (pointer)
                           2182 ;	isBitvar = 0
   0955 02                 2183 	ld	(bc),a
                           2184 ;	genPlus
                           2185 ;	AOP_STK for _mem_frag_add_page_p_1_1
                           2186 ;	Can't optimise plus by inc, falling back to the normal way
   0956 FD 21r08s00        2187 	ld	iy,#_page_list
   095A FD 7E 00           2188 	ld	a,0(iy)
   095D DD 86 FD           2189 	add	a,-3(ix)
   0960 5F                 2190 	ld	e,a
   0961 FD 7E 01           2191 	ld	a,1(iy)
   0964 CE 00              2192 	adc	a,#0x00
   0966 57                 2193 	ld	d,a
                           2194 ;	genAssign (pointer)
                           2195 ;	isBitvar = 0
   0967 3E 00              2196 	ld	a,#0x00
   0969 12                 2197 	ld	(de),a
                           2198 ;	genPlus
                           2199 ;	genPlusIncr
   096A FD 21r0As00        2200 	ld	iy,#_mem_num_pages_free
   096E FD 34 00           2201 	inc	0(iy)
   0971 C2r77s09           2202 	jp	nz,00141$
   0974 FD 34 01           2203 	inc	1(iy)
   0977                    2204 00141$:
                           2205 ;mem.c:361: return ENOMEM; /* Out of memory. */
                           2206 ;	genRet
                           2207 ; Dump of IC_LEFT: type AOP_LIT size 2
   0977 21 01 00           2208 	ld	hl,#0x0001
   097A C3r95s09           2209 	jp	00114$
                           2210 ;	genLabel
   097D                    2211 00109$:
                           2212 ;mem.c:365: nfrag->page = p; /* Page number. */
                           2213 ;	genAssign (pointer)
                           2214 ;	AOP_STK for _mem_frag_add_page_p_1_1
                           2215 ;	isBitvar = 0
   097D DD 7E FD           2216 	ld	a,-3(ix)
   0980 02                 2217 	ld	(bc),a
                           2218 ;mem.c:366: nfrag->idx = i;  /* Fragment index within the page. */
                           2219 ;	genPlus
                           2220 ;	genPlusIncr
   0981 03                 2221 	inc	bc
                           2222 ;	genAssign (pointer)
                           2223 ;	AOP_STK for _mem_frag_add_page_i_1_1
                           2224 ;	isBitvar = 0
   0982 DD 7E FC           2225 	ld	a,-4(ix)
   0985 02                 2226 	ld	(bc),a
                           2227 ;mem.c:346: for (i = 0; i < num; i++) {
                           2228 ;	genPlus
                           2229 ;	AOP_STK for _mem_frag_add_page_i_1_1
                           2230 ;	genPlusIncr
   0986 DD 34 FC           2231 	inc	-4(ix)
                           2232 ;	genAssign
                           2233 ;	AOP_STK for _mem_frag_add_page_i_1_1
                           2234 ;	AOP_STK for _mem_frag_add_page_sloc4_1_0
   0989 DD 7E FC           2235 	ld	a,-4(ix)
   098C DD 77 F3           2236 	ld	-13(ix),a
                           2237 ;	genGoto
   098F C3r25s08           2238 	jp	00110$
                           2239 ;	genLabel
   0992                    2240 00113$:
                           2241 ;mem.c:369: return ENONE;
                           2242 ;	genRet
                           2243 ; Dump of IC_LEFT: type AOP_LIT size 2
   0992 21 00 00           2244 	ld	hl,#0x0000
                           2245 ;	genLabel
   0995                    2246 00114$:
                           2247 ;	genEndFunction
   0995 DD F9              2248 	ld	sp,ix
   0997 DD E1              2249 	pop	ix
   0999 C9                 2250 	ret
   099A                    2251 _mem_frag_add_page_end::
                           2252 ;mem.c:374: mem_frag_alloc (size_t size, struct proc *proc)
                           2253 ;	genLabel
                           2254 ;	genFunction
                           2255 ;	---------------------------------
                           2256 ; Function mem_frag_alloc
                           2257 ; ---------------------------------
   099A                    2258 _mem_frag_alloc_start::
   099A                    2259 _mem_frag_alloc:
   099A DD E5              2260 	push	ix
   099C DD 21 00 00        2261 	ld	ix,#0
   09A0 DD 39              2262 	add	ix,sp
   09A2 21 F7 FF           2263 	ld	hl,#-9
   09A5 39                 2264 	add	hl,sp
   09A6 F9                 2265 	ld	sp,hl
                           2266 ;mem.c:385: for (fs = 0, i = PAGESIZE / 2; i >= FRAGSIZEMIN; fs++, i >>= 1)
                           2267 ;	genAssign
   09A7 01 80 00           2268 	ld	bc,#0x0080
                           2269 ;	genAssign
                           2270 ;	AOP_STK for _mem_frag_alloc_fs_1_1
   09AA DD 36 FF 00        2271 	ld	-1(ix),#0x00
                           2272 ;	genLabel
   09AE                    2273 00103$:
                           2274 ;	genCmpLt
   09AE 79                 2275 	ld	a,c
   09AF D6 20              2276 	sub	a,#0x20
   09B1 78                 2277 	ld	a,b
   09B2 DE 00              2278 	sbc	a,#0x00
   09B4 DArCCs09           2279 	jp	c,00106$
                           2280 ;mem.c:386: if (i < size)
                           2281 ;	genCmpLt
                           2282 ;	AOP_STK for 
   09B7 79                 2283 	ld	a,c
   09B8 DD 96 04           2284 	sub	a,4(ix)
   09BB 78                 2285 	ld	a,b
   09BC DD 9E 05           2286 	sbc	a,5(ix)
   09BF DArCCs09           2287 	jp	c,00106$
                           2288 ;mem.c:385: for (fs = 0, i = PAGESIZE / 2; i >= FRAGSIZEMIN; fs++, i >>= 1)
                           2289 ;	genPlus
                           2290 ;	AOP_STK for _mem_frag_alloc_fs_1_1
                           2291 ;	genPlusIncr
   09C2 DD 34 FF           2292 	inc	-1(ix)
                           2293 ;	genRightShift
   09C5 CB 38              2294 	srl	b
   09C7 CB 19              2295 	rr	c
                           2296 ;	genGoto
   09C9 C3rAEs09           2297 	jp	00103$
                           2298 ;	genLabel
   09CC                    2299 00106$:
                           2300 ;mem.c:392: s = FRAG_STACK(proc, fs);
                           2301 ;	genAssign
                           2302 ;	AOP_STK for 
   09CC DD 4E 06           2303 	ld	c,6(ix)
   09CF DD 46 07           2304 	ld	b,7(ix)
                           2305 ;	genPlus
                           2306 ;	AOP_STK for _mem_frag_alloc_sloc0_1_0
                           2307 ;	genPlusIncr
                           2308 ;	Can't optimise plus by inc, falling back to the normal way
   09D2 79                 2309 	ld	a,c
   09D3 C6 18              2310 	add	a,#0x18
   09D5 DD 77 F7           2311 	ld	-9(ix),a
   09D8 78                 2312 	ld	a,b
   09D9 CE 00              2313 	adc	a,#0x00
   09DB DD 77 F8           2314 	ld	-8(ix),a
                           2315 ;	genMinus
                           2316 ;	AOP_STK for _mem_frag_alloc_fs_1_1
   09DE DD 7E FF           2317 	ld	a,-1(ix)
   09E1 C6 FF              2318 	add	a,#0xFF
                           2319 ;	genLeftShift
   09E3 5F                 2320 	ld	e,a
   09E4 87                 2321 	add	a,a
   09E5 5F                 2322 	ld	e,a
                           2323 ;	genPlus
                           2324 ;	AOP_STK for _mem_frag_alloc_sloc0_1_0
                           2325 ;	Can't optimise plus by inc, falling back to the normal way
   09E6 DD 7E F7           2326 	ld	a,-9(ix)
   09E9 83                 2327 	add	a,e
   09EA 5F                 2328 	ld	e,a
   09EB DD 7E F8           2329 	ld	a,-8(ix)
   09EE CE 00              2330 	adc	a,#0x00
   09F0 57                 2331 	ld	d,a
                           2332 ;	genPointerGet
   09F1 6B                 2333 	ld	l,e
   09F2 62                 2334 	ld	h,d
   09F3 5E                 2335 	ld	e,(hl)
   09F4 23                 2336 	inc	hl
   09F5 56                 2337 	ld	d,(hl)
                           2338 ;	genAssign
                           2339 ;	AOP_STK for _mem_frag_alloc_s_1_1
   09F6 DD 73 FD           2340 	ld	-3(ix),e
   09F9 DD 72 FE           2341 	ld	-2(ix),d
                           2342 ;mem.c:395: if (FRAG_AVAILABLE(s) == 0) {
                           2343 ;	genPointerGet
                           2344 ;	AOP_STK for _mem_frag_alloc_s_1_1
   09FC DD 6E FD           2345 	ld	l,-3(ix)
   09FF DD 66 FE           2346 	ld	h,-2(ix)
   0A02 5E                 2347 	ld	e,(hl)
   0A03 23                 2348 	inc	hl
   0A04 56                 2349 	ld	d,(hl)
                           2350 ;	genIfx
   0A05 7B                 2351 	ld	a,e
   0A06 B2                 2352 	or	a,d
   0A07 C2r2As0A           2353 	jp	nz,00110$
                           2354 ;mem.c:396: err = mem_frag_add_page (s, fs, proc);
                           2355 ;	genIpush
                           2356 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0A0A C5                 2357 	push	bc
                           2358 ;	genIpush
                           2359 ;	AOP_STK for _mem_frag_alloc_fs_1_1
   0A0B DD 7E FF           2360 	ld	a,-1(ix)
   0A0E F5                 2361 	push	af
   0A0F 33                 2362 	inc	sp
                           2363 ;	genIpush
                           2364 ;	AOP_STK for _mem_frag_alloc_s_1_1
   0A10 DD 6E FD           2365 	ld	l,-3(ix)
   0A13 DD 66 FE           2366 	ld	h,-2(ix)
   0A16 E5                 2367 	push	hl
                           2368 ;	genCall
   0A17 CDr7Ds07           2369 	call	_mem_frag_add_page
   0A1A 44                 2370 	ld	b,h
   0A1B 4D                 2371 	ld	c,l
   0A1C F1                 2372 	pop	af
   0A1D F1                 2373 	pop	af
   0A1E 33                 2374 	inc	sp
                           2375 ;	genAssign
                           2376 ;	(registers are the same)
                           2377 ;mem.c:397: if (err != 0) {
                           2378 ;	genCmpEq
                           2379 ; genCmpEq: left 2, right 2, result 0
   0A1F 79                 2380 	ld	a,c
   0A20 B0                 2381 	or	a,b
   0A21 CAr2As0A           2382 	jp	z,00110$
   0A24                    2383 00124$:
                           2384 ;mem.c:399: return 0; /* Out of memory. */
                           2385 ;	genRet
                           2386 ; Dump of IC_LEFT: type AOP_LIT size 2
   0A24 21 00 00           2387 	ld	hl,#0x0000
   0A27 C3rD9s0A           2388 	jp	00111$
                           2389 ;	genLabel
   0A2A                    2390 00110$:
                           2391 ;mem.c:404: frag = FRAG_POP(s);
                           2392 ;	genPointerGet
                           2393 ;	AOP_STK for _mem_frag_alloc_s_1_1
   0A2A DD 6E FD           2394 	ld	l,-3(ix)
   0A2D DD 66 FE           2395 	ld	h,-2(ix)
   0A30 4E                 2396 	ld	c,(hl)
   0A31 23                 2397 	inc	hl
   0A32 46                 2398 	ld	b,(hl)
                           2399 ;	genNot
   0A33 79                 2400 	ld	a,c
   0A34 B0                 2401 	or	a,b
   0A35 D6 01              2402 	sub	a,#0x01
   0A37 3E 00              2403 	ld	a,#0x00
   0A39 17                 2404 	rla
                           2405 ;	genIfx
   0A3A 4F                 2406 	ld	c,a
   0A3B B7                 2407 	or	a,a
   0A3C CAr45s0A           2408 	jp	z,00113$
                           2409 ;	genAssign
   0A3F 01 00 00           2410 	ld	bc,#0x0000
                           2411 ;	genGoto
   0A42 C3r74s0A           2412 	jp	00114$
                           2413 ;	genLabel
   0A45                    2414 00113$:
                           2415 ;	genCast
                           2416 ;	AOP_STK for _mem_frag_alloc_s_1_1
   0A45 DD 5E FD           2417 	ld	e,-3(ix)
   0A48 DD 56 FE           2418 	ld	d,-2(ix)
                           2419 ;	genPlus
                           2420 ;	genPlusIncr
   0A4B 13                 2421 	inc	de
   0A4C 13                 2422 	inc	de
                           2423 ;	genCast
                           2424 ;	AOP_STK for _mem_frag_alloc_sloc0_1_0
   0A4D DD 73 F7           2425 	ld	-9(ix),e
   0A50 DD 72 F8           2426 	ld	-8(ix),d
                           2427 ;	genPointerGet
                           2428 ;	AOP_STK for _mem_frag_alloc_s_1_1
   0A53 DD 6E FD           2429 	ld	l,-3(ix)
   0A56 DD 66 FE           2430 	ld	h,-2(ix)
   0A59 5E                 2431 	ld	e,(hl)
   0A5A 23                 2432 	inc	hl
   0A5B 56                 2433 	ld	d,(hl)
                           2434 ;	genMinus
   0A5C 1B                 2435 	dec	de
                           2436 ;	genAssign (pointer)
                           2437 ;	AOP_STK for _mem_frag_alloc_s_1_1
                           2438 ;	isBitvar = 0
   0A5D DD 6E FD           2439 	ld	l,-3(ix)
   0A60 DD 66 FE           2440 	ld	h,-2(ix)
   0A63 73                 2441 	ld	(hl),e
   0A64 23                 2442 	inc	hl
   0A65 72                 2443 	ld	(hl),d
                           2444 ;	genLeftShift
   0A66 CB 23              2445 	sla	e
   0A68 CB 12              2446 	rl	d
                           2447 ;	genPlus
                           2448 ;	AOP_STK for _mem_frag_alloc_sloc0_1_0
                           2449 ;	Can't optimise plus by inc, falling back to the normal way
   0A6A DD 7E F7           2450 	ld	a,-9(ix)
   0A6D 83                 2451 	add	a,e
   0A6E 4F                 2452 	ld	c,a
   0A6F DD 7E F8           2453 	ld	a,-8(ix)
   0A72 8A                 2454 	adc	a,d
   0A73 47                 2455 	ld	b,a
                           2456 ;	genLabel
   0A74                    2457 00114$:
                           2458 ;	genAssign
                           2459 ;	(registers are the same)
                           2460 ;	genAssign
                           2461 ;	AOP_STK for _mem_frag_alloc_frag_1_1
   0A74 DD 71 FB           2462 	ld	-5(ix),c
   0A77 DD 70 FC           2463 	ld	-4(ix),b
                           2464 ;mem.c:407: pagebase = frag->page * PAGESIZE;
                           2465 ;	genPointerGet
                           2466 ;	AOP_STK for _mem_frag_alloc_frag_1_1
   0A7A DD 6E FB           2467 	ld	l,-5(ix)
   0A7D DD 66 FC           2468 	ld	h,-4(ix)
   0A80 5E                 2469 	ld	e,(hl)
                           2470 ;	genCast
   0A81 53                 2471 	ld	d,e
   0A82 0E 00              2472 	ld	c,#0x00
                           2473 ;	genLeftShift
                           2474 ;	AOP_STK for _mem_frag_alloc_pagebase_1_1
   0A84 DD 72 FA           2475 	ld	-6(ix),d
   0A87 DD 36 F9 00        2476 	ld	-7(ix),#0x00
                           2477 ;mem.c:410: idxofs = frag->idx << FRAGSIZELOG(frag->page);
                           2478 ;	genPlus
                           2479 ;	AOP_STK for _mem_frag_alloc_frag_1_1
                           2480 ;	genPlusIncr
                           2481 ;	Can't optimise plus by inc, falling back to the normal way
   0A8B DD 7E FB           2482 	ld	a,-5(ix)
   0A8E C6 01              2483 	add	a,#0x01
   0A90 47                 2484 	ld	b,a
   0A91 DD 7E FC           2485 	ld	a,-4(ix)
   0A94 CE 00              2486 	adc	a,#0x00
   0A96 4F                 2487 	ld	c,a
                           2488 ;	genPointerGet
   0A97 68                 2489 	ld	l,b
   0A98 61                 2490 	ld	h,c
   0A99 46                 2491 	ld	b,(hl)
                           2492 ;	genCast
                           2493 ; Removed redundent load
   0A9A 0E 00              2494 	ld	c,#0x00
                           2495 ;	genPlus
                           2496 ;	Can't optimise plus by inc, falling back to the normal way
   0A9C FD 21r08s00        2497 	ld	iy,#_page_list
   0AA0 FD 7E 00           2498 	ld	a,0(iy)
   0AA3 83                 2499 	add	a,e
   0AA4 5F                 2500 	ld	e,a
   0AA5 FD 7E 01           2501 	ld	a,1(iy)
   0AA8 CE 00              2502 	adc	a,#0x00
   0AAA 57                 2503 	ld	d,a
                           2504 ;	genPointerGet
   0AAB 1A                 2505 	ld	a,(de)
                           2506 ;	genAnd
   0AAC 5F                 2507 	ld	e,a
   0AAD E6 03              2508 	and	a,#0x03
   0AAF 5F                 2509 	ld	e,a
                           2510 ;	genCast
                           2511 ; Removed redundent load
   0AB0 16 00              2512 	ld	d,#0x00
                           2513 ;	genMinus
   0AB2 3E 08              2514 	ld	a,#0x08
   0AB4 93                 2515 	sub	a,e
   0AB5 5F                 2516 	ld	e,a
   0AB6 3E 00              2517 	ld	a,#0x00
   0AB8 9A                 2518 	sbc	a,d
   0AB9 57                 2519 	ld	d,a
                           2520 ;	genLeftShift
   0ABA 7B                 2521 	ld	a,e
   0ABB 3C                 2522 	inc	a
   0ABC C3rC3s0A           2523 	jp	00128$
   0ABF                    2524 00127$:
   0ABF CB 20              2525 	sla	b
   0AC1 CB 11              2526 	rl	c
   0AC3                    2527 00128$:
   0AC3 3D                 2528 	dec	a
   0AC4 C2rBFs0A           2529 	jp	nz,00127$
                           2530 ;	genAssign
                           2531 ;	(registers are the same)
                           2532 ;mem.c:415: return (void*) (pagebase + idxofs + ram);
                           2533 ;	genPlus
                           2534 ;	AOP_STK for _mem_frag_alloc_pagebase_1_1
                           2535 ;	Can't optimise plus by inc, falling back to the normal way
   0AC7 DD 7E F9           2536 	ld	a,-7(ix)
   0ACA 80                 2537 	add	a,b
   0ACB 47                 2538 	ld	b,a
   0ACC DD 7E FA           2539 	ld	a,-6(ix)
   0ACF 89                 2540 	adc	a,c
   0AD0 4F                 2541 	ld	c,a
                           2542 ;	genPlus
                           2543 ;	Can't optimise plus by inc, falling back to the normal way
   0AD1 3Er0E              2544 	ld	a,#<_ram
   0AD3 80                 2545 	add	a,b
   0AD4 6F                 2546 	ld	l,a
   0AD5 3Es00              2547 	ld	a,#>_ram
   0AD7 89                 2548 	adc	a,c
   0AD8 67                 2549 	ld	h,a
                           2550 ;	genRet
                           2551 ; Dump of IC_LEFT: type AOP_STR size 2
                           2552 ;	genLabel
   0AD9                    2553 00111$:
                           2554 ;	genEndFunction
   0AD9 DD F9              2555 	ld	sp,ix
   0ADB DD E1              2556 	pop	ix
   0ADD C9                 2557 	ret
   0ADE                    2558 _mem_frag_alloc_end::
                           2559 ;mem.c:420: mem_frag_free (void *pos, struct proc *proc)
                           2560 ;	genLabel
                           2561 ;	genFunction
                           2562 ;	---------------------------------
                           2563 ; Function mem_frag_free
                           2564 ; ---------------------------------
   0ADE                    2565 _mem_frag_free_start::
   0ADE                    2566 _mem_frag_free:
   0ADE DD E5              2567 	push	ix
   0AE0 DD 21 00 00        2568 	ld	ix,#0
   0AE4 DD 39              2569 	add	ix,sp
   0AE6 21 F5 FF           2570 	ld	hl,#-11
   0AE9 39                 2571 	add	hl,sp
   0AEA F9                 2572 	ld	sp,hl
                           2573 ;mem.c:429: if (IS_ILLEGAL_FRAG(pos)) {
                           2574 ;	genCast
                           2575 ;	AOP_STK for 
                           2576 ;	AOP_STK for _mem_frag_free_sloc2_1_0
   0AEB DD 7E 04           2577 	ld	a,4(ix)
   0AEE DD 77 F5           2578 	ld	-11(ix),a
   0AF1 DD 7E 05           2579 	ld	a,5(ix)
   0AF4 DD 77 F6           2580 	ld	-10(ix),a
                           2581 ;	genCast
   0AF7 1Er0E              2582 	ld	e,#<_ram
   0AF9 16s00              2583 	ld	d,#>_ram
                           2584 ;	genMinus
                           2585 ;	AOP_STK for _mem_frag_free_sloc2_1_0
   0AFB DD 7E F5           2586 	ld	a,-11(ix)
   0AFE 93                 2587 	sub	a,e
   0AFF 5F                 2588 	ld	e,a
   0B00 DD 7E F6           2589 	ld	a,-10(ix)
   0B03 9A                 2590 	sbc	a,d
   0B04 57                 2591 	ld	d,a
                           2592 ;	genCast
                           2593 ;	genCast
   0B05 4B                 2594 	ld	c,e
   0B06 42                 2595 	ld	b,d
                           2596 ;	genCast
   0B07 1Er0E              2597 	ld	e,#<_ram
   0B09 16s00              2598 	ld	d,#>_ram
                           2599 ;	genMinus
                           2600 ;	AOP_STK for _mem_frag_free_sloc2_1_0
   0B0B DD 7E F5           2601 	ld	a,-11(ix)
   0B0E 93                 2602 	sub	a,e
   0B0F 5F                 2603 	ld	e,a
   0B10 DD 7E F6           2604 	ld	a,-10(ix)
   0B13 9A                 2605 	sbc	a,d
   0B14 57                 2606 	ld	d,a
                           2607 ;	genCast
                           2608 ;	genCast
                           2609 ;	genRightShift
   0B15 5A                 2610 	ld	e,d
   0B16 16 00              2611 	ld	d,#0x00
                           2612 ;	genPlus
                           2613 ;	Can't optimise plus by inc, falling back to the normal way
   0B18 FD 21r08s00        2614 	ld	iy,#_page_list
   0B1C FD 7E 00           2615 	ld	a,0(iy)
   0B1F 83                 2616 	add	a,e
   0B20 5F                 2617 	ld	e,a
   0B21 FD 7E 01           2618 	ld	a,1(iy)
   0B24 8A                 2619 	adc	a,d
   0B25 57                 2620 	ld	d,a
                           2621 ;	genPointerGet
   0B26 1A                 2622 	ld	a,(de)
                           2623 ;	genAnd
   0B27 5F                 2624 	ld	e,a
   0B28 E6 03              2625 	and	a,#0x03
                           2626 ;	genRightShift
   0B2A 5F                 2627 	ld	e,a
   0B2B 3C                 2628 	inc	a
   0B2C F5                 2629 	push	af
   0B2D 1E 00              2630 	ld	e,#0x00
   0B2F 16 01              2631 	ld	d,#0x01
   0B31 F1                 2632 	pop	af
   0B32 C3r39s0B           2633 	jp	00113$
   0B35                    2634 00112$:
   0B35 CB 2A              2635 	sra	d
   0B37 CB 1B              2636 	rr	e
   0B39                    2637 00113$:
   0B39 3D                 2638 	dec	a
   0B3A C2r35s0B           2639 	jp	nz,00112$
                           2640 ;	genMinus
   0B3D 1B                 2641 	dec	de
                           2642 ;	genAnd
   0B3E 7B                 2643 	ld	a,e
   0B3F A1                 2644 	and	a,c
   0B40 5F                 2645 	ld	e,a
   0B41 7A                 2646 	ld	a,d
   0B42 A0                 2647 	and	a,b
   0B43 57                 2648 	ld	d,a
                           2649 ;	genIfx
   0B44 7B                 2650 	ld	a,e
   0B45 B2                 2651 	or	a,d
   0B46 CAr7Cs0B           2652 	jp	z,00102$
                           2653 ;mem.c:431: printk ("mem_frag_free: Illegal fragment boundary ", 0);
                           2654 ;	genIpush
                           2655 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B49 21 00 00           2656 	ld	hl,#0x0000
   0B4C E5                 2657 	push	hl
                           2658 ;	genIpush
   0B4D 21r71s0D           2659 	ld	hl,#__str_1
   0B50 E5                 2660 	push	hl
                           2661 ;	genCall
   0B51 CDr00s00           2662 	call	_printk
   0B54 F1                 2663 	pop	af
   0B55 F1                 2664 	pop	af
                           2665 ;mem.c:432: printnhex (pos - (void*) ram, 4);
                           2666 ;	genMinus
                           2667 ;	AOP_STK for 
   0B56 DD 7E 04           2668 	ld	a,4(ix)
   0B59 D6r0E              2669 	sub	a,#<_ram
   0B5B 5F                 2670 	ld	e,a
   0B5C DD 7E 05           2671 	ld	a,5(ix)
   0B5F DEs00              2672 	sbc	a,#>_ram
   0B61 57                 2673 	ld	d,a
                           2674 ;	genIpush
                           2675 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B62 21 04 00           2676 	ld	hl,#0x0004
   0B65 E5                 2677 	push	hl
                           2678 ;	genIpush
   0B66 D5                 2679 	push	de
                           2680 ;	genCall
   0B67 CDr00s00           2681 	call	_printnhex
   0B6A F1                 2682 	pop	af
   0B6B F1                 2683 	pop	af
                           2684 ;mem.c:433: printk (" \n", 0);
                           2685 ;	genIpush
                           2686 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0B6C 21 00 00           2687 	ld	hl,#0x0000
   0B6F E5                 2688 	push	hl
                           2689 ;	genIpush
   0B70 21r9Bs0D           2690 	ld	hl,#__str_2
   0B73 E5                 2691 	push	hl
                           2692 ;	genCall
   0B74 CDr00s00           2693 	call	_printk
   0B77 F1                 2694 	pop	af
   0B78 F1                 2695 	pop	af
                           2696 ;mem.c:435: return;
                           2697 ;	genRet
   0B79 C3r6Cs0D           2698 	jp	00105$
                           2699 ;	genLabel
   0B7C                    2700 00102$:
                           2701 ;mem.c:440: p = ADDR2PAGE(pos);
                           2702 ;	genCast
   0B7C 1Er0E              2703 	ld	e,#<_ram
   0B7E 16s00              2704 	ld	d,#>_ram
                           2705 ;	genMinus
                           2706 ;	AOP_STK for _mem_frag_free_sloc2_1_0
   0B80 DD 7E F5           2707 	ld	a,-11(ix)
   0B83 93                 2708 	sub	a,e
   0B84 5F                 2709 	ld	e,a
   0B85 DD 7E F6           2710 	ld	a,-10(ix)
   0B88 9A                 2711 	sbc	a,d
   0B89 57                 2712 	ld	d,a
                           2713 ;	genCast
                           2714 ;	genCast
                           2715 ;	genRightShift
   0B8A 5A                 2716 	ld	e,d
   0B8B 16 00              2717 	ld	d,#0x00
                           2718 ;	genCast
                           2719 ;	AOP_STK for _mem_frag_free_p_1_1
   0B8D DD 73 FF           2720 	ld	-1(ix),e
                           2721 ;mem.c:441: fs = FRAGLOG(p);
                           2722 ;	genPlus
                           2723 ;	AOP_STK for _mem_frag_free_p_1_1
                           2724 ;	Can't optimise plus by inc, falling back to the normal way
   0B90 FD 21r08s00        2725 	ld	iy,#_page_list
   0B94 FD 7E 00           2726 	ld	a,0(iy)
   0B97 DD 86 FF           2727 	add	a,-1(ix)
   0B9A 57                 2728 	ld	d,a
   0B9B FD 7E 01           2729 	ld	a,1(iy)
   0B9E CE 00              2730 	adc	a,#0x00
   0BA0 5F                 2731 	ld	e,a
                           2732 ;	genPointerGet
   0BA1 6A                 2733 	ld	l,d
   0BA2 63                 2734 	ld	h,e
   0BA3 56                 2735 	ld	d,(hl)
                           2736 ;	genAnd
   0BA4 7A                 2737 	ld	a,d
   0BA5 E6 03              2738 	and	a,#0x03
   0BA7 57                 2739 	ld	d,a
                           2740 ;	genAssign
                           2741 ;mem.c:443: bzero (pos, FRAGSIZE(p));
                           2742 ;	genRightShift
   0BA8 4A                 2743 	ld	c,d
   0BA9 79                 2744 	ld	a,c
   0BAA 3C                 2745 	inc	a
   0BAB F5                 2746 	push	af
   0BAC 16 00              2747 	ld	d,#0x00
   0BAE 1E 01              2748 	ld	e,#0x01
   0BB0 F1                 2749 	pop	af
   0BB1 C3rB8s0B           2750 	jp	00115$
   0BB4                    2751 00114$:
   0BB4 CB 2B              2752 	sra	e
   0BB6 CB 1A              2753 	rr	d
   0BB8                    2754 00115$:
   0BB8 3D                 2755 	dec	a
   0BB9 C2rB4s0B           2756 	jp	nz,00114$
                           2757 ;	genIpush
                           2758 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0BBC C5                 2759 	push	bc
   0BBD 6A                 2760 	ld	l,d
   0BBE 63                 2761 	ld	h,e
   0BBF E5                 2762 	push	hl
                           2763 ;	genIpush
                           2764 ;	AOP_STK for 
   0BC0 DD 6E 04           2765 	ld	l,4(ix)
   0BC3 DD 66 05           2766 	ld	h,5(ix)
   0BC6 E5                 2767 	push	hl
                           2768 ;	genCall
   0BC7 CDr00s00           2769 	call	_bzero
   0BCA F1                 2770 	pop	af
   0BCB F1                 2771 	pop	af
   0BCC C1                 2772 	pop	bc
                           2773 ;mem.c:446: s = FRAG_STACK(proc, fs);
                           2774 ;	genAssign
                           2775 ;	AOP_STK for 
   0BCD DD 5E 06           2776 	ld	e,6(ix)
   0BD0 DD 56 07           2777 	ld	d,7(ix)
                           2778 ;	genPlus
                           2779 ;	genPlusIncr
                           2780 ;	Can't optimise plus by inc, falling back to the normal way
   0BD3 7B                 2781 	ld	a,e
   0BD4 C6 18              2782 	add	a,#0x18
   0BD6 47                 2783 	ld	b,a
   0BD7 7A                 2784 	ld	a,d
   0BD8 CE 00              2785 	adc	a,#0x00
   0BDA 57                 2786 	ld	d,a
                           2787 ;	genMinus
   0BDB 79                 2788 	ld	a,c
   0BDC C6 FF              2789 	add	a,#0xFF
                           2790 ;	genLeftShift
   0BDE 5F                 2791 	ld	e,a
   0BDF 87                 2792 	add	a,a
   0BE0 5F                 2793 	ld	e,a
                           2794 ;	genPlus
                           2795 ;	Can't optimise plus by inc, falling back to the normal way
   0BE1 78                 2796 	ld	a,b
   0BE2 83                 2797 	add	a,e
   0BE3 5F                 2798 	ld	e,a
   0BE4 7A                 2799 	ld	a,d
   0BE5 CE 00              2800 	adc	a,#0x00
   0BE7 57                 2801 	ld	d,a
                           2802 ;	genPointerGet
   0BE8 6B                 2803 	ld	l,e
   0BE9 62                 2804 	ld	h,d
   0BEA 5E                 2805 	ld	e,(hl)
   0BEB 23                 2806 	inc	hl
   0BEC 56                 2807 	ld	d,(hl)
                           2808 ;	genAssign
                           2809 ;	AOP_STK for _mem_frag_free_s_1_1
   0BED DD 73 FB           2810 	ld	-5(ix),e
   0BF0 DD 72 FC           2811 	ld	-4(ix),d
                           2812 ;mem.c:450: mem_frag_clean_stack (s, FRAGLOG2NUM(FRAGLOG(p)));
                           2813 ;	genPlus
                           2814 ;	AOP_STK for _mem_frag_free_p_1_1
                           2815 ;	Can't optimise plus by inc, falling back to the normal way
   0BF3 FD 21r08s00        2816 	ld	iy,#_page_list
   0BF7 FD 7E 00           2817 	ld	a,0(iy)
   0BFA DD 86 FF           2818 	add	a,-1(ix)
   0BFD 5F                 2819 	ld	e,a
   0BFE FD 7E 01           2820 	ld	a,1(iy)
   0C01 CE 00              2821 	adc	a,#0x00
   0C03 57                 2822 	ld	d,a
                           2823 ;	genPointerGet
   0C04 1A                 2824 	ld	a,(de)
                           2825 ;	genAnd
   0C05 5F                 2826 	ld	e,a
   0C06 E6 03              2827 	and	a,#0x03
                           2828 ;	genLeftShift
   0C08 5F                 2829 	ld	e,a
   0C09 3C                 2830 	inc	a
   0C0A F5                 2831 	push	af
   0C0B 1E 01              2832 	ld	e,#0x01
   0C0D 16 00              2833 	ld	d,#0x00
   0C0F F1                 2834 	pop	af
   0C10 C3r17s0C           2835 	jp	00117$
   0C13                    2836 00116$:
   0C13 CB 23              2837 	sla	e
   0C15 CB 12              2838 	rl	d
   0C17                    2839 00117$:
   0C17 3D                 2840 	dec	a
   0C18 C2r13s0C           2841 	jp	nz,00116$
                           2842 ;	genIpush
                           2843 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0C1B D5                 2844 	push	de
                           2845 ;	genIpush
                           2846 ;	AOP_STK for _mem_frag_free_s_1_1
   0C1C DD 6E FB           2847 	ld	l,-5(ix)
   0C1F DD 66 FC           2848 	ld	h,-4(ix)
   0C22 E5                 2849 	push	hl
                           2850 ;	genCall
   0C23 CDr91s05           2851 	call	_mem_frag_clean_stack
   0C26 F1                 2852 	pop	af
   0C27 F1                 2853 	pop	af
                           2854 ;mem.c:453: frag = FRAG_PUSH(s);
                           2855 ;	genPointerGet
                           2856 ;	AOP_STK for _mem_frag_free_s_1_1
   0C28 DD 6E FB           2857 	ld	l,-5(ix)
   0C2B DD 66 FC           2858 	ld	h,-4(ix)
   0C2E 5E                 2859 	ld	e,(hl)
   0C2F 23                 2860 	inc	hl
   0C30 56                 2861 	ld	d,(hl)
                           2862 ;	genLeftShift
   0C31 CB 23              2863 	sla	e
   0C33 CB 12              2864 	rl	d
                           2865 ;	genPlus
                           2866 ;	AOP_STK for _mem_frag_free_sloc0_1_0
                           2867 ;	genPlusIncr
                           2868 ;	Can't optimise plus by inc, falling back to the normal way
   0C35 7B                 2869 	ld	a,e
   0C36 C6 04              2870 	add	a,#0x04
   0C38 DD 77 F9           2871 	ld	-7(ix),a
   0C3B 7A                 2872 	ld	a,d
   0C3C CE 00              2873 	adc	a,#0x00
   0C3E DD 77 FA           2874 	ld	-6(ix),a
                           2875 ;	genCast
                           2876 ;	AOP_STK for _mem_frag_free_s_1_1
   0C41 DD 4E FB           2877 	ld	c,-5(ix)
   0C44 DD 46 FC           2878 	ld	b,-4(ix)
                           2879 ;	genCast
   0C47 1Er0E              2880 	ld	e,#<_ram
   0C49 16s00              2881 	ld	d,#>_ram
                           2882 ;	genMinus
   0C4B 79                 2883 	ld	a,c
   0C4C 93                 2884 	sub	a,e
   0C4D 5F                 2885 	ld	e,a
   0C4E 78                 2886 	ld	a,b
   0C4F 9A                 2887 	sbc	a,d
   0C50 57                 2888 	ld	d,a
                           2889 ;	genCast
                           2890 ;	genCast
                           2891 ;	genRightShift
   0C51 5A                 2892 	ld	e,d
   0C52 16 00              2893 	ld	d,#0x00
                           2894 ;	genPlus
                           2895 ;	Can't optimise plus by inc, falling back to the normal way
   0C54 FD 21r08s00        2896 	ld	iy,#_page_list
   0C58 FD 7E 00           2897 	ld	a,0(iy)
   0C5B 83                 2898 	add	a,e
   0C5C 5F                 2899 	ld	e,a
   0C5D FD 7E 01           2900 	ld	a,1(iy)
   0C60 8A                 2901 	adc	a,d
   0C61 57                 2902 	ld	d,a
                           2903 ;	genPointerGet
   0C62 1A                 2904 	ld	a,(de)
                           2905 ;	genAnd
   0C63 5F                 2906 	ld	e,a
   0C64 E6 03              2907 	and	a,#0x03
                           2908 ;	genRightShift
   0C66 5F                 2909 	ld	e,a
   0C67 3C                 2910 	inc	a
   0C68 F5                 2911 	push	af
   0C69 1E 00              2912 	ld	e,#0x00
   0C6B 16 01              2913 	ld	d,#0x01
   0C6D F1                 2914 	pop	af
   0C6E C3r75s0C           2915 	jp	00121$
   0C71                    2916 00120$:
   0C71 CB 3A              2917 	srl	d
   0C73 CB 1B              2918 	rr	e
   0C75                    2919 00121$:
   0C75 3D                 2920 	dec	a
   0C76 C2r71s0C           2921 	jp	nz,00120$
                           2922 ;	genCmpGt
                           2923 ;	AOP_STK for _mem_frag_free_sloc0_1_0
   0C79 7B                 2924 	ld	a,e
   0C7A DD 96 F9           2925 	sub	a,-7(ix)
   0C7D 7A                 2926 	ld	a,d
   0C7E DD 9E FA           2927 	sbc	a,-6(ix)
   0C81 D2r8As0C           2928 	jp	nc,00107$
                           2929 ;	genAssign
   0C84 11 00 00           2930 	ld	de,#0x0000
                           2931 ;	genGoto
   0C87 C3rB7s0C           2932 	jp	00108$
                           2933 ;	genLabel
   0C8A                    2934 00107$:
                           2935 ;	genPlus
                           2936 ;	genPlusIncr
   0C8A 03                 2937 	inc	bc
   0C8B 03                 2938 	inc	bc
                           2939 ;	genCast
                           2940 ;	AOP_STK for _mem_frag_free_sloc1_1_0
   0C8C DD 71 F7           2941 	ld	-9(ix),c
   0C8F DD 70 F8           2942 	ld	-8(ix),b
                           2943 ;	genPointerGet
                           2944 ;	AOP_STK for _mem_frag_free_s_1_1
   0C92 DD 6E FB           2945 	ld	l,-5(ix)
   0C95 DD 66 FC           2946 	ld	h,-4(ix)
   0C98 5E                 2947 	ld	e,(hl)
   0C99 23                 2948 	inc	hl
   0C9A 56                 2949 	ld	d,(hl)
                           2950 ;	genPlus
                           2951 ;	genPlusIncr
   0C9B 4B                 2952 	ld	c,e
   0C9C 42                 2953 	ld	b,d
   0C9D 03                 2954 	inc	bc
                           2955 ;	genAssign (pointer)
                           2956 ;	AOP_STK for _mem_frag_free_s_1_1
                           2957 ;	isBitvar = 0
   0C9E DD 6E FB           2958 	ld	l,-5(ix)
   0CA1 DD 66 FC           2959 	ld	h,-4(ix)
   0CA4 71                 2960 	ld	(hl),c
   0CA5 23                 2961 	inc	hl
   0CA6 70                 2962 	ld	(hl),b
                           2963 ;	genLeftShift
   0CA7 4B                 2964 	ld	c,e
   0CA8 42                 2965 	ld	b,d
   0CA9 CB 21              2966 	sla	c
   0CAB CB 10              2967 	rl	b
                           2968 ;	genPlus
                           2969 ;	AOP_STK for _mem_frag_free_sloc1_1_0
                           2970 ;	Can't optimise plus by inc, falling back to the normal way
   0CAD DD 7E F7           2971 	ld	a,-9(ix)
   0CB0 81                 2972 	add	a,c
   0CB1 5F                 2973 	ld	e,a
   0CB2 DD 7E F8           2974 	ld	a,-8(ix)
   0CB5 88                 2975 	adc	a,b
   0CB6 57                 2976 	ld	d,a
                           2977 ;	genLabel
   0CB7                    2978 00108$:
                           2979 ;	genAssign
   0CB7 4B                 2980 	ld	c,e
   0CB8 42                 2981 	ld	b,d
                           2982 ;	genAssign
                           2983 ;	AOP_STK for _mem_frag_free_frag_1_1
   0CB9 DD 71 FD           2984 	ld	-3(ix),c
   0CBC DD 70 FE           2985 	ld	-2(ix),b
                           2986 ;mem.c:454: if (frag == NULL) {
                           2987 ;	genCmpEq
                           2988 ;	AOP_STK for _mem_frag_free_frag_1_1
                           2989 ; genCmpEq: left 2, right 2, result 0
   0CBF DD 7E FD           2990 	ld	a,-3(ix)
   0CC2 DD B6 FE           2991 	or	a,-2(ix)
   0CC5 CArCBs0C           2992 	jp	z,00125$
   0CC8                    2993 00124$:
   0CC8 C3rF0s0C           2994 	jp	00104$
   0CCB                    2995 00125$:
                           2996 ;mem.c:456: VERBOSE_PRINTK("mem_frag_free: stack %d full.\n", FRAGLOG(p));
                           2997 ;	genPlus
                           2998 ;	AOP_STK for _mem_frag_free_p_1_1
                           2999 ;	Can't optimise plus by inc, falling back to the normal way
   0CCB FD 21r08s00        3000 	ld	iy,#_page_list
   0CCF FD 7E 00           3001 	ld	a,0(iy)
   0CD2 DD 86 FF           3002 	add	a,-1(ix)
   0CD5 5F                 3003 	ld	e,a
   0CD6 FD 7E 01           3004 	ld	a,1(iy)
   0CD9 CE 00              3005 	adc	a,#0x00
   0CDB 57                 3006 	ld	d,a
                           3007 ;	genPointerGet
   0CDC 1A                 3008 	ld	a,(de)
                           3009 ;	genAnd
   0CDD 5F                 3010 	ld	e,a
   0CDE E6 03              3011 	and	a,#0x03
   0CE0 5F                 3012 	ld	e,a
                           3013 ;	genCast
                           3014 ; Removed redundent load
   0CE1 16 00              3015 	ld	d,#0x00
                           3016 ;	genIpush
                           3017 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0CE3 D5                 3018 	push	de
                           3019 ;	genIpush
   0CE4 21r9Es0D           3020 	ld	hl,#__str_3
   0CE7 E5                 3021 	push	hl
                           3022 ;	genCall
   0CE8 CDr00s00           3023 	call	_printk
   0CEB F1                 3024 	pop	af
   0CEC F1                 3025 	pop	af
                           3026 ;mem.c:457: return;
                           3027 ;	genRet
   0CED C3r6Cs0D           3028 	jp	00105$
                           3029 ;	genLabel
   0CF0                    3030 00104$:
                           3031 ;mem.c:459: frag->idx = ADDR2FRAGIDX(pos); /* Index within page. */
                           3032 ;	genPlus
                           3033 ;	AOP_STK for _mem_frag_free_frag_1_1
                           3034 ;	genPlusIncr
   0CF0 DD 5E FD           3035 	ld	e,-3(ix)
   0CF3 DD 56 FE           3036 	ld	d,-2(ix)
   0CF6 13                 3037 	inc	de
                           3038 ;	genCast
   0CF7 0Er0E              3039 	ld	c,#<_ram
   0CF9 06s00              3040 	ld	b,#>_ram
                           3041 ;	genMinus
                           3042 ;	AOP_STK for _mem_frag_free_sloc2_1_0
   0CFB DD 7E F5           3043 	ld	a,-11(ix)
   0CFE 91                 3044 	sub	a,c
   0CFF 4F                 3045 	ld	c,a
   0D00 DD 7E F6           3046 	ld	a,-10(ix)
   0D03 98                 3047 	sbc	a,b
   0D04 47                 3048 	ld	b,a
                           3049 ;	genCast
                           3050 ;	genCast
                           3051 ;	genAnd
   0D05 06 00              3052 	ld	b,#0x00
                           3053 ;	genCast
                           3054 ;	AOP_STK for _mem_frag_free_sloc1_1_0
   0D07 DD 71 F7           3055 	ld	-9(ix),c
                           3056 ;	genCast
   0D0A 06r0E              3057 	ld	b,#<_ram
   0D0C 0Es00              3058 	ld	c,#>_ram
                           3059 ;	genMinus
                           3060 ;	AOP_STK for _mem_frag_free_sloc2_1_0
   0D0E DD 7E F5           3061 	ld	a,-11(ix)
   0D11 90                 3062 	sub	a,b
   0D12 47                 3063 	ld	b,a
   0D13 DD 7E F6           3064 	ld	a,-10(ix)
   0D16 99                 3065 	sbc	a,c
   0D17 4F                 3066 	ld	c,a
                           3067 ;	genCast
                           3068 ;	genCast
                           3069 ;	genRightShift
   0D18 41                 3070 	ld	b,c
   0D19 0E 00              3071 	ld	c,#0x00
                           3072 ;	genPlus
                           3073 ;	Can't optimise plus by inc, falling back to the normal way
   0D1B FD 21r08s00        3074 	ld	iy,#_page_list
   0D1F FD 7E 00           3075 	ld	a,0(iy)
   0D22 80                 3076 	add	a,b
   0D23 47                 3077 	ld	b,a
   0D24 FD 7E 01           3078 	ld	a,1(iy)
   0D27 89                 3079 	adc	a,c
   0D28 4F                 3080 	ld	c,a
                           3081 ;	genPointerGet
   0D29 68                 3082 	ld	l,b
   0D2A 61                 3083 	ld	h,c
   0D2B 46                 3084 	ld	b,(hl)
                           3085 ;	genAnd
   0D2C 78                 3086 	ld	a,b
   0D2D E6 03              3087 	and	a,#0x03
                           3088 ;	genRightShift
   0D2F 47                 3089 	ld	b,a
   0D30 3C                 3090 	inc	a
                           3091 ;	AOP_STK for _mem_frag_free_sloc2_1_0
   0D31 F5                 3092 	push	af
   0D32 DD 36 F5 00        3093 	ld	-11(ix),#0x00
   0D36 DD 36 F6 01        3094 	ld	-10(ix),#0x01
   0D3A F1                 3095 	pop	af
   0D3B C3r46s0D           3096 	jp	00127$
   0D3E                    3097 00126$:
   0D3E DD CB F6 2E        3098 	sra	-10(ix)
   0D42 DD CB F5 1E        3099 	rr	-11(ix)
   0D46                    3100 00127$:
   0D46 3D                 3101 	dec	a
   0D47 C2r3Es0D           3102 	jp	nz,00126$
                           3103 ;	genCast
                           3104 ;	AOP_STK for _mem_frag_free_sloc1_1_0
   0D4A DD 4E F7           3105 	ld	c,-9(ix)
   0D4D 06 00              3106 	ld	b,#0x00
                           3107 ;	genIpush
                           3108 ; _saveRegsForCall: sendSetSize: 0 deInUse: 1 bcInUse: 0 deSending: 0
   0D4F D5                 3109 	push	de
                           3110 ;	AOP_STK for _mem_frag_free_sloc2_1_0
   0D50 DD 6E F5           3111 	ld	l,-11(ix)
   0D53 DD 66 F6           3112 	ld	h,-10(ix)
   0D56 E5                 3113 	push	hl
                           3114 ;	genIpush
   0D57 C5                 3115 	push	bc
                           3116 ;	genCall
   0D58 CDr00s00           3117 	call	__divsint_rrx_s
   0D5B 44                 3118 	ld	b,h
   0D5C 4D                 3119 	ld	c,l
   0D5D F1                 3120 	pop	af
   0D5E F1                 3121 	pop	af
   0D5F D1                 3122 	pop	de
                           3123 ;	genCast
   0D60 79                 3124 	ld	a,c
                           3125 ;	genAssign (pointer)
                           3126 ;	isBitvar = 0
   0D61 12                 3127 	ld	(de),a
                           3128 ;mem.c:460: frag->page = p;
                           3129 ;	genAssign (pointer)
                           3130 ;	AOP_STK for _mem_frag_free_frag_1_1
                           3131 ;	AOP_STK for _mem_frag_free_p_1_1
                           3132 ;	isBitvar = 0
   0D62 DD 6E FD           3133 	ld	l,-3(ix)
   0D65 DD 66 FE           3134 	ld	h,-2(ix)
   0D68 DD 7E FF           3135 	ld	a,-1(ix)
   0D6B 77                 3136 	ld	(hl),a
                           3137 ;	genLabel
   0D6C                    3138 00105$:
                           3139 ;	genEndFunction
   0D6C DD F9              3140 	ld	sp,ix
   0D6E DD E1              3141 	pop	ix
   0D70 C9                 3142 	ret
   0D71                    3143 _mem_frag_free_end::
   0D71                    3144 __str_1:
   0D71 6D 65 6D 5F 66 72  3145 	.ascii "mem_frag_free: Illegal fragment boundary "
        61 67 5F 66 72 65
        65 3A 20 49 6C 6C
        65 67 61 6C 20 66
        72 61 67 6D 65 6E
        74 20 62 6F 75 6E
        64 61 72 79 20
   0D9A 00                 3146 	.db 0x00
   0D9B                    3147 __str_2:
   0D9B 20                 3148 	.ascii " "
   0D9C 0A                 3149 	.db 0x0A
   0D9D 00                 3150 	.db 0x00
   0D9E                    3151 __str_3:
   0D9E 6D 65 6D 5F 66 72  3152 	.ascii "mem_frag_free: stack %d full."
        61 67 5F 66 72 65
        65 3A 20 73 74 61
        63 6B 20 25 64 20
        66 75 6C 6C 2E
   0DBB 0A                 3153 	.db 0x0A
   0DBC 00                 3154 	.db 0x00
                           3155 ;mem.c:486: mem_init ()
                           3156 ;	genLabel
                           3157 ;	genFunction
                           3158 ;	---------------------------------
                           3159 ; Function mem_init
                           3160 ; ---------------------------------
   0DBD                    3161 _mem_init_start::
   0DBD                    3162 _mem_init:
   0DBD DD E5              3163 	push	ix
   0DBF DD 21 00 00        3164 	ld	ix,#0
   0DC3 DD 39              3165 	add	ix,sp
   0DC5 21 F8 FF           3166 	ld	hl,#-8
   0DC8 39                 3167 	add	hl,sp
   0DC9 F9                 3168 	ld	sp,hl
                           3169 ;mem.c:497: for (j = 65535; j >= 0; j--)
                           3170 ;	genAssign
                           3171 ;	AOP_STK for _mem_init_j_1_1
   0DCA DD 36 FC FF        3172 	ld	-4(ix),#0xFF
   0DCE DD 36 FD FF        3173 	ld	-3(ix),#0xFF
                           3174 ;	genLabel
   0DD2                    3175 00101$:
                           3176 ;	genCmpLt
                           3177 ;	AOP_STK for _mem_init_j_1_1
   0DD2 DD 7E FD           3178 	ld	a,-3(ix)
   0DD5 CB 7F              3179 	bit	7,a
   0DD7 C2rFDs0D           3180 	jp	nz,00104$
                           3181 ;mem.c:498: ram[j] = j & 255;
                           3182 ;	genPlus
                           3183 ;	AOP_STK for _mem_init_j_1_1
                           3184 ;	Can't optimise plus by inc, falling back to the normal way
   0DDA 3Er0E              3185 	ld	a,#<_ram
   0DDC DD 86 FC           3186 	add	a,-4(ix)
   0DDF 5F                 3187 	ld	e,a
   0DE0 3Es00              3188 	ld	a,#>_ram
   0DE2 DD 8E FD           3189 	adc	a,-3(ix)
   0DE5 57                 3190 	ld	d,a
                           3191 ;	genAnd
                           3192 ;	AOP_STK for _mem_init_j_1_1
   0DE6 DD 4E FC           3193 	ld	c,-4(ix)
   0DE9 06 00              3194 	ld	b,#0x00
                           3195 ;	genCast
   0DEB 79                 3196 	ld	a,c
                           3197 ;	genAssign (pointer)
                           3198 ;	isBitvar = 0
   0DEC 12                 3199 	ld	(de),a
                           3200 ;mem.c:497: for (j = 65535; j >= 0; j--)
                           3201 ;	genMinus
                           3202 ;	AOP_STK for _mem_init_j_1_1
   0DED DD 6E FC           3203 	ld	l,-4(ix)
   0DF0 DD 66 FD           3204 	ld	h,-3(ix)
   0DF3 2B                 3205 	dec	hl
   0DF4 DD 75 FC           3206 	ld	-4(ix),l
   0DF7 DD 74 FD           3207 	ld	-3(ix),h
                           3208 ;	genGoto
   0DFA C3rD2s0D           3209 	jp	00101$
                           3210 ;	genLabel
   0DFD                    3211 00104$:
                           3212 ;mem.c:502: mem_num_pages_free = NUM_PAGES;
                           3213 ;	genAssign
   0DFD FD 21r0As00        3214 	ld	iy,#_mem_num_pages_free
   0E01 FD 36 00 00        3215 	ld	0(iy),#0x00
   0E05 FD 36 01 01        3216 	ld	1(iy),#0x01
                           3217 ;mem.c:503: mem_num_pages_locked = 0;
                           3218 ;	genAssign
   0E09 FD 21r0Cs00        3219 	ld	iy,#_mem_num_pages_locked
   0E0D FD 36 00 00        3220 	ld	0(iy),#0x00
   0E11 FD 36 01 00        3221 	ld	1(iy),#0x00
                           3222 ;mem.c:512: page_map = PAGE2ADDR(p);
                           3223 ;	genCast
   0E15 0Er0E              3224 	ld	c,#<_ram
   0E17 06s00              3225 	ld	b,#>_ram
                           3226 ;	genPlus
                           3227 ;	genPlusIncr
                           3228 ;	Can't optimise plus by inc, falling back to the normal way
   0E19 79                 3229 	ld	a,c
   0E1A C6 00              3230 	add	a,#0x00
   0E1C 4F                 3231 	ld	c,a
   0E1D 78                 3232 	ld	a,b
   0E1E CE 03              3233 	adc	a,#0x03
   0E20 47                 3234 	ld	b,a
                           3235 ;	genCast
   0E21 FD 21r06s00        3236 	ld	iy,#_page_map
   0E25 FD 71 00           3237 	ld	0(iy),c
   0E28 FD 70 01           3238 	ld	1(iy),b
                           3239 ;mem.c:517: page_list = PAGE2ADDR(p);
                           3240 ;	genCast
   0E2B 0Er0E              3241 	ld	c,#<_ram
   0E2D 06s00              3242 	ld	b,#>_ram
                           3243 ;	genPlus
                           3244 ;	genPlusIncr
                           3245 ;	Can't optimise plus by inc, falling back to the normal way
   0E2F 79                 3246 	ld	a,c
   0E30 C6 00              3247 	add	a,#0x00
   0E32 4F                 3248 	ld	c,a
   0E33 78                 3249 	ld	a,b
   0E34 CE 04              3250 	adc	a,#0x04
   0E36 47                 3251 	ld	b,a
                           3252 ;	genCast
   0E37 FD 21r08s00        3253 	ld	iy,#_page_list
   0E3B FD 71 00           3254 	ld	0(iy),c
   0E3E FD 70 01           3255 	ld	1(iy),b
                           3256 ;mem.c:519: p += tmp ? tmp : 1;
                           3257 ;	genAssign
   0E41 0E 05              3258 	ld	c,#0x05
                           3259 ;mem.c:522: bzero (page_map, NUM_PAGES >> 3);
                           3260 ;	genAssign
   0E43 ED 5Br06s00        3261 	ld	de,(_page_map)
                           3262 ;	genIpush
                           3263 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E47 C5                 3264 	push	bc
   0E48 21 20 00           3265 	ld	hl,#0x0020
   0E4B E5                 3266 	push	hl
                           3267 ;	genIpush
   0E4C D5                 3268 	push	de
                           3269 ;	genCall
   0E4D CDr00s00           3270 	call	_bzero
   0E50 F1                 3271 	pop	af
   0E51 F1                 3272 	pop	af
   0E52 C1                 3273 	pop	bc
                           3274 ;mem.c:523: bzero (page_list, sizeof (pageinfo_t) * NUM_PAGES);
                           3275 ;	genAssign
   0E53 ED 5Br08s00        3276 	ld	de,(_page_list)
                           3277 ;	genIpush
                           3278 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E57 C5                 3279 	push	bc
   0E58 21 00 01           3280 	ld	hl,#0x0100
   0E5B E5                 3281 	push	hl
                           3282 ;	genIpush
   0E5C D5                 3283 	push	de
                           3284 ;	genCall
   0E5D CDr00s00           3285 	call	_bzero
   0E60 F1                 3286 	pop	af
   0E61 F1                 3287 	pop	af
   0E62 C1                 3288 	pop	bc
                           3289 ;mem.c:526: mem_pages_lock (MMANAGER_STARTPAGE, p - MMANAGER_STARTPAGE);
                           3290 ;	genIpush
                           3291 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E63 C5                 3292 	push	bc
   0E64 21 02 00           3293 	ld	hl,#0x0002
   0E67 E5                 3294 	push	hl
                           3295 ;	genIpush
   0E68 3E 03              3296 	ld	a,#0x03
   0E6A F5                 3297 	push	af
   0E6B 33                 3298 	inc	sp
                           3299 ;	genCall
   0E6C CDr07s02           3300 	call	_mem_pages_lock
   0E6F F1                 3301 	pop	af
   0E70 33                 3302 	inc	sp
   0E71 C1                 3303 	pop	bc
                           3304 ;mem.c:529: mem_pages_lock (0, 1);
                           3305 ;	genIpush
                           3306 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E72 C5                 3307 	push	bc
   0E73 21 01 00           3308 	ld	hl,#0x0001
   0E76 E5                 3309 	push	hl
                           3310 ;	genIpush
   0E77 3E 00              3311 	ld	a,#0x00
   0E79 F5                 3312 	push	af
   0E7A 33                 3313 	inc	sp
                           3314 ;	genCall
   0E7B CDr07s02           3315 	call	_mem_pages_lock
   0E7E F1                 3316 	pop	af
   0E7F 33                 3317 	inc	sp
   0E80 C1                 3318 	pop	bc
                           3319 ;mem.c:532: mem_pages_lock (KERNEL_STARTPAGE, KERNEL_PAGES);
                           3320 ;	genIpush
                           3321 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E81 C5                 3322 	push	bc
   0E82 21 03 00           3323 	ld	hl,#0x0003
   0E85 E5                 3324 	push	hl
                           3325 ;	genIpush
   0E86 3E 00              3326 	ld	a,#0x00
   0E88 F5                 3327 	push	af
   0E89 33                 3328 	inc	sp
                           3329 ;	genCall
   0E8A CDr07s02           3330 	call	_mem_pages_lock
   0E8D F1                 3331 	pop	af
   0E8E 33                 3332 	inc	sp
   0E8F C1                 3333 	pop	bc
                           3334 ;mem.c:535: MEM_PAGES_REF(KERNEL_STACKPAGE, KERNEL_STACKPAGES, 0);
                           3335 ;	genIpush
                           3336 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0E90 C5                 3337 	push	bc
   0E91 21 00 00           3338 	ld	hl,#0x0000
   0E94 E5                 3339 	push	hl
                           3340 ;	genIpush
   0E95 21 10 00           3341 	ld	hl,#0x0010
   0E98 E5                 3342 	push	hl
                           3343 ;	genIpush
   0E99 3E F0              3344 	ld	a,#0xF0
   0E9B F5                 3345 	push	af
   0E9C 33                 3346 	inc	sp
                           3347 ;	genCall
   0E9D CDr83s00           3348 	call	_mem_pages_ref
   0EA0 F1                 3349 	pop	af
   0EA1 F1                 3350 	pop	af
   0EA2 33                 3351 	inc	sp
   0EA3 C1                 3352 	pop	bc
                           3353 ;mem.c:539: for (i = 0; i < FRAGMENT_SIZES; i++) {
                           3354 ;	genAssign
                           3355 ;	(registers are the same)
                           3356 ;	genAssign
                           3357 ;	AOP_STK for _mem_init_i_1_1
   0EA4 DD 36 FE 00        3358 	ld	-2(ix),#0x00
   0EA8 DD 36 FF 00        3359 	ld	-1(ix),#0x00
                           3360 ;	genLabel
   0EAC                    3361 00105$:
                           3362 ;	genCmpLt
                           3363 ;	AOP_STK for _mem_init_i_1_1
   0EAC DD 7E FE           3364 	ld	a,-2(ix)
   0EAF D6 03              3365 	sub	a,#0x03
   0EB1 DD 7E FF           3366 	ld	a,-1(ix)
   0EB4 DE 00              3367 	sbc	a,#0x00
   0EB6 D2r23s0F           3368 	jp	nc,00108$
                           3369 ;mem.c:541: MEM_PAGES_REF(p, 1, 0);
                           3370 ;	genIpush
                           3371 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0EB9 C5                 3372 	push	bc
   0EBA 21 00 00           3373 	ld	hl,#0x0000
   0EBD E5                 3374 	push	hl
                           3375 ;	genIpush
   0EBE 21 01 00           3376 	ld	hl,#0x0001
   0EC1 E5                 3377 	push	hl
                           3378 ;	genIpush
   0EC2 79                 3379 	ld	a,c
   0EC3 F5                 3380 	push	af
   0EC4 33                 3381 	inc	sp
                           3382 ;	genCall
   0EC5 CDr83s00           3383 	call	_mem_pages_ref
   0EC8 F1                 3384 	pop	af
   0EC9 F1                 3385 	pop	af
   0ECA 33                 3386 	inc	sp
   0ECB C1                 3387 	pop	bc
                           3388 ;mem.c:544: proc_current->fragment_stacks[i] = STACK_PTR(PAGE2ADDR(p));
                           3389 ;	genAssign
   0ECC 2Ar00s00           3390 	ld	hl,(_proc_current)
   0ECF 45                 3391 	ld	b,l
   0ED0 5C                 3392 	ld	e,h
                           3393 ;	genPlus
                           3394 ;	AOP_STK for _mem_init_sloc0_1_0
                           3395 ;	genPlusIncr
                           3396 ;	Can't optimise plus by inc, falling back to the normal way
   0ED1 78                 3397 	ld	a,b
   0ED2 C6 18              3398 	add	a,#0x18
   0ED4 DD 77 FA           3399 	ld	-6(ix),a
   0ED7 7B                 3400 	ld	a,e
   0ED8 CE 00              3401 	adc	a,#0x00
   0EDA DD 77 FB           3402 	ld	-5(ix),a
                           3403 ;	genLeftShift
                           3404 ;	AOP_STK for _mem_init_i_1_1
   0EDD DD 56 FE           3405 	ld	d,-2(ix)
   0EE0 DD 46 FF           3406 	ld	b,-1(ix)
   0EE3 CB 22              3407 	sla	d
   0EE5 CB 10              3408 	rl	b
                           3409 ;	genPlus
                           3410 ;	AOP_STK for _mem_init_sloc0_1_0
                           3411 ;	Can't optimise plus by inc, falling back to the normal way
   0EE7 DD 7E FA           3412 	ld	a,-6(ix)
   0EEA 82                 3413 	add	a,d
   0EEB DD 77 FA           3414 	ld	-6(ix),a
   0EEE DD 7E FB           3415 	ld	a,-5(ix)
   0EF1 88                 3416 	adc	a,b
   0EF2 DD 77 FB           3417 	ld	-5(ix),a
                           3418 ;	genCast
   0EF5 59                 3419 	ld	e,c
   0EF6 06 00              3420 	ld	b,#0x00
                           3421 ;	genLeftShift
                           3422 ;	AOP_STK for _mem_init_sloc1_1_0
   0EF8 DD 73 F9           3423 	ld	-7(ix),e
   0EFB DD 36 F8 00        3424 	ld	-8(ix),#0x00
                           3425 ;	genCast
   0EFF 16r0E              3426 	ld	d,#<_ram
   0F01 06s00              3427 	ld	b,#>_ram
                           3428 ;	genPlus
                           3429 ;	AOP_STK for _mem_init_sloc1_1_0
                           3430 ;	Can't optimise plus by inc, falling back to the normal way
   0F03 DD 7E F8           3431 	ld	a,-8(ix)
   0F06 82                 3432 	add	a,d
   0F07 57                 3433 	ld	d,a
   0F08 DD 7E F9           3434 	ld	a,-7(ix)
   0F0B 88                 3435 	adc	a,b
   0F0C 47                 3436 	ld	b,a
                           3437 ;	genCast
                           3438 ;	genAssign (pointer)
                           3439 ;	AOP_STK for _mem_init_sloc0_1_0
                           3440 ;	isBitvar = 0
   0F0D DD 6E FA           3441 	ld	l,-6(ix)
   0F10 DD 66 FB           3442 	ld	h,-5(ix)
   0F13 72                 3443 	ld	(hl),d
   0F14 23                 3444 	inc	hl
   0F15 70                 3445 	ld	(hl),b
                           3446 ;mem.c:546: p++; /* Next page. */
                           3447 ;	genPlus
                           3448 ;	genPlusIncr
                           3449 ; Removed redundent load
   0F16 0C                 3450 	inc	c
                           3451 ;mem.c:539: for (i = 0; i < FRAGMENT_SIZES; i++) {
                           3452 ;	genPlus
                           3453 ;	AOP_STK for _mem_init_i_1_1
                           3454 ;	genPlusIncr
   0F17 DD 34 FE           3455 	inc	-2(ix)
   0F1A C2r20s0F           3456 	jp	nz,00125$
   0F1D DD 34 FF           3457 	inc	-1(ix)
   0F20                    3458 00125$:
                           3459 ;	genGoto
   0F20 C3rACs0E           3460 	jp	00105$
                           3461 ;	genLabel
   0F23                    3462 00108$:
                           3463 ;mem.c:551: printk ("mem: %d bytes", (int) (PAGESIZE * NUM_PAGES));
                           3464 ;	genIpush
                           3465 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F23 21 00 00           3466 	ld	hl,#0x0000
   0F26 E5                 3467 	push	hl
                           3468 ;	genIpush
   0F27 21r87s0F           3469 	ld	hl,#__str_4
   0F2A E5                 3470 	push	hl
                           3471 ;	genCall
   0F2B CDr00s00           3472 	call	_printk
   0F2E F1                 3473 	pop	af
   0F2F F1                 3474 	pop	af
                           3475 ;mem.c:552: printk (", %d free", (int) (PAGESIZE * (mem_num_pages_free + KERNEL_STACKPAGES)));
                           3476 ;	genPlus
                           3477 ;	genPlusIncr
                           3478 ;	Can't optimise plus by inc, falling back to the normal way
   0F30 FD 21r0As00        3479 	ld	iy,#_mem_num_pages_free
   0F34 FD 7E 00           3480 	ld	a,0(iy)
   0F37 C6 10              3481 	add	a,#0x10
   0F39 4F                 3482 	ld	c,a
   0F3A FD 7E 01           3483 	ld	a,1(iy)
   0F3D CE 00              3484 	adc	a,#0x00
   0F3F 47                 3485 	ld	b,a
                           3486 ;	genLeftShift
   0F40 41                 3487 	ld	b,c
   0F41 0E 00              3488 	ld	c,#0x00
                           3489 ;	genIpush
                           3490 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F43 C5                 3491 	push	bc
                           3492 ;	genIpush
   0F44 21r95s0F           3493 	ld	hl,#__str_5
   0F47 E5                 3494 	push	hl
                           3495 ;	genCall
   0F48 CDr00s00           3496 	call	_printk
   0F4B F1                 3497 	pop	af
   0F4C F1                 3498 	pop	af
                           3499 ;mem.c:553: printk (", %d system.\n", (int) (PAGESIZE * (NUM_PAGES - mem_num_pages_free - KERNEL_STACKPAGES)));
                           3500 ;	genCast
   0F4D FD 21r0As00        3501 	ld	iy,#_mem_num_pages_free
   0F51 FD 4E 00           3502 	ld	c,0(iy)
   0F54 FD 46 01           3503 	ld	b,1(iy)
   0F57 11 00 00           3504 	ld	de,#0x0000
                           3505 ;	genMinus
   0F5A 3E F0              3506 	ld	a,#0xF0
   0F5C 91                 3507 	sub	a,c
   0F5D 4F                 3508 	ld	c,a
   0F5E 3E 00              3509 	ld	a,#0x00
   0F60 98                 3510 	sbc	a,b
   0F61 47                 3511 	ld	b,a
   0F62 3E 00              3512 	ld	a,#0x00
   0F64 9B                 3513 	sbc	a,e
   0F65 5F                 3514 	ld	e,a
   0F66 3E 00              3515 	ld	a,#0x00
   0F68 9A                 3516 	sbc	a,d
   0F69 57                 3517 	ld	d,a
                           3518 ;	genIpush
                           3519 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F6A 3E 08              3520 	ld	a,#0x08
   0F6C F5                 3521 	push	af
   0F6D 33                 3522 	inc	sp
                           3523 ;	genIpush
   0F6E D5                 3524 	push	de
   0F6F C5                 3525 	push	bc
                           3526 ;	genCall
   0F70 CDr00s00           3527 	call	__rlslong_rrx_s
                           3528 ; Removed redundent load
                           3529 ; Removed redundent load
   0F73 44                 3530 	ld	b,h
   0F74 4D                 3531 	ld	c,l
   0F75 F1                 3532 	pop	af
   0F76 F1                 3533 	pop	af
   0F77 33                 3534 	inc	sp
                           3535 ;	genCast
                           3536 ; Removed redundent load
                           3537 ; Removed redundent load
                           3538 ;	genIpush
                           3539 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   0F78 C5                 3540 	push	bc
                           3541 ;	genIpush
   0F79 21r9Fs0F           3542 	ld	hl,#__str_6
   0F7C E5                 3543 	push	hl
                           3544 ;	genCall
   0F7D CDr00s00           3545 	call	_printk
   0F80 F1                 3546 	pop	af
   0F81 F1                 3547 	pop	af
                           3548 ;	genLabel
   0F82                    3549 00109$:
                           3550 ;	genEndFunction
   0F82 DD F9              3551 	ld	sp,ix
   0F84 DD E1              3552 	pop	ix
   0F86 C9                 3553 	ret
   0F87                    3554 _mem_init_end::
   0F87                    3555 __str_4:
   0F87 6D 65 6D 3A 20 25  3556 	.ascii "mem: %d bytes"
        64 20 62 79 74 65
        73
   0F94 00                 3557 	.db 0x00
   0F95                    3558 __str_5:
   0F95 2C 20 25 64 20 66  3559 	.ascii ", %d free"
        72 65 65
   0F9E 00                 3560 	.db 0x00
   0F9F                    3561 __str_6:
   0F9F 2C 20 25 64 20 73  3562 	.ascii ", %d system."
        79 73 74 65 6D 2E
   0FAB 0A                 3563 	.db 0x0A
   0FAC 00                 3564 	.db 0x00
                           3565 ;mem.c:563: mem_init_proc (struct proc *proc)
                           3566 ;	genLabel
                           3567 ;	genFunction
                           3568 ;	---------------------------------
                           3569 ; Function mem_init_proc
                           3570 ; ---------------------------------
   0FAD                    3571 _mem_init_proc_start::
   0FAD                    3572 _mem_init_proc:
   0FAD DD E5              3573 	push	ix
   0FAF DD 21 00 00        3574 	ld	ix,#0
   0FB3 DD 39              3575 	add	ix,sp
   0FB5 21 FC FF           3576 	ld	hl,#-4
   0FB8 39                 3577 	add	hl,sp
   0FB9 F9                 3578 	ld	sp,hl
                           3579 ;mem.c:569: for (p = 0; p < FRAGMENT_SIZES; p++) {
                           3580 ;	genAssign
                           3581 ;	AOP_STK for _mem_init_proc_p_1_1
   0FBA DD 36 FE 00        3582 	ld	-2(ix),#0x00
   0FBE DD 36 FF 00        3583 	ld	-1(ix),#0x00
                           3584 ;	genLabel
   0FC2                    3585 00101$:
                           3586 ;	genCmpLt
                           3587 ;	AOP_STK for _mem_init_proc_p_1_1
   0FC2 DD 7E FE           3588 	ld	a,-2(ix)
   0FC5 D6 03              3589 	sub	a,#0x03
   0FC7 DD 7E FF           3590 	ld	a,-1(ix)
   0FCA DE 00              3591 	sbc	a,#0x00
   0FCC D2r14s10           3592 	jp	nc,00105$
                           3593 ;mem.c:570: proc->fragment_stacks[p] = pmalloc (PAGESIZE, proc);
                           3594 ;	genAssign
                           3595 ;	AOP_STK for 
   0FCF DD 5E 04           3596 	ld	e,4(ix)
   0FD2 DD 56 05           3597 	ld	d,5(ix)
                           3598 ;	genPlus
                           3599 ;	AOP_STK for _mem_init_proc_sloc0_1_0
                           3600 ;	genPlusIncr
                           3601 ;	Can't optimise plus by inc, falling back to the normal way
   0FD5 7B                 3602 	ld	a,e
   0FD6 C6 18              3603 	add	a,#0x18
   0FD8 DD 77 FC           3604 	ld	-4(ix),a
   0FDB 7A                 3605 	ld	a,d
   0FDC CE 00              3606 	adc	a,#0x00
   0FDE DD 77 FD           3607 	ld	-3(ix),a
                           3608 ;	genLeftShift
                           3609 ;	AOP_STK for _mem_init_proc_p_1_1
   0FE1 DD 4E FE           3610 	ld	c,-2(ix)
   0FE4 DD 46 FF           3611 	ld	b,-1(ix)
   0FE7 CB 21              3612 	sla	c
   0FE9 CB 10              3613 	rl	b
                           3614 ;	genPlus
                           3615 ;	AOP_STK for _mem_init_proc_sloc0_1_0
                           3616 ;	Can't optimise plus by inc, falling back to the normal way
   0FEB DD 7E FC           3617 	ld	a,-4(ix)
   0FEE 81                 3618 	add	a,c
   0FEF 4F                 3619 	ld	c,a
   0FF0 DD 7E FD           3620 	ld	a,-3(ix)
   0FF3 88                 3621 	adc	a,b
   0FF4 47                 3622 	ld	b,a
                           3623 ;	genIpush
                           3624 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 1 deSending: 0
   0FF5 C5                 3625 	push	bc
   0FF6 D5                 3626 	push	de
                           3627 ;	genIpush
   0FF7 21 00 01           3628 	ld	hl,#0x0100
   0FFA E5                 3629 	push	hl
                           3630 ;	genCall
   0FFB CDr40s12           3631 	call	_pmalloc
   0FFE 54                 3632 	ld	d,h
   0FFF 5D                 3633 	ld	e,l
   1000 F1                 3634 	pop	af
   1001 F1                 3635 	pop	af
   1002 C1                 3636 	pop	bc
                           3637 ;	genAssign (pointer)
                           3638 ;	isBitvar = 0
   1003 69                 3639 	ld	l,c
   1004 60                 3640 	ld	h,b
   1005 73                 3641 	ld	(hl),e
   1006 23                 3642 	inc	hl
   1007 72                 3643 	ld	(hl),d
                           3644 ;mem.c:569: for (p = 0; p < FRAGMENT_SIZES; p++) {
                           3645 ;	genPlus
                           3646 ;	AOP_STK for _mem_init_proc_p_1_1
                           3647 ;	genPlusIncr
   1008 DD 34 FE           3648 	inc	-2(ix)
   100B C2r11s10           3649 	jp	nz,00112$
   100E DD 34 FF           3650 	inc	-1(ix)
   1011                    3651 00112$:
                           3652 ;	genGoto
   1011 C3rC2s0F           3653 	jp	00101$
                           3654 ;	genLabel
   1014                    3655 00105$:
                           3656 ;	genEndFunction
   1014 DD F9              3657 	ld	sp,ix
   1016 DD E1              3658 	pop	ix
   1018 C9                 3659 	ret
   1019                    3660 _mem_init_proc_end::
                           3661 ;mem.c:580: mem_kill_proc (struct proc *proc)
                           3662 ;	genLabel
                           3663 ;	genFunction
                           3664 ;	---------------------------------
                           3665 ; Function mem_kill_proc
                           3666 ; ---------------------------------
   1019                    3667 _mem_kill_proc_start::
   1019                    3668 _mem_kill_proc:
   1019 DD E5              3669 	push	ix
   101B DD 21 00 00        3670 	ld	ix,#0
   101F DD 39              3671 	add	ix,sp
   1021 21 F7 FF           3672 	ld	hl,#-9
   1024 39                 3673 	add	hl,sp
   1025 F9                 3674 	ld	sp,hl
                           3675 ;mem.c:586: for (p = 0; p < NUM_PAGES; p++) {
                           3676 ;	genAssign
                           3677 ;	AOP_STK for 
   1026 DD 4E 04           3678 	ld	c,4(ix)
   1029 DD 46 05           3679 	ld	b,5(ix)
                           3680 ;	genPlus
                           3681 ;	AOP_STK for _mem_kill_proc_sloc0_1_0
                           3682 ;	genPlusIncr
                           3683 ;	Can't optimise plus by inc, falling back to the normal way
   102C 79                 3684 	ld	a,c
   102D C6 25              3685 	add	a,#0x25
   102F DD 77 FC           3686 	ld	-4(ix),a
   1032 78                 3687 	ld	a,b
   1033 CE 00              3688 	adc	a,#0x00
   1035 DD 77 FD           3689 	ld	-3(ix),a
                           3690 ;	genAssign
                           3691 ;	AOP_STK for _mem_kill_proc_p_1_1
   1038 DD 36 FE 00        3692 	ld	-2(ix),#0x00
   103C DD 36 FF 00        3693 	ld	-1(ix),#0x00
                           3694 ;	genLabel
   1040                    3695 00107$:
                           3696 ;	genCast
                           3697 ;	AOP_STK for _mem_kill_proc_p_1_1
   1040 DD 5E FE           3698 	ld	e,-2(ix)
   1043 DD 56 FF           3699 	ld	d,-1(ix)
   1046 01 00 00           3700 	ld	bc,#0x0000
                           3701 ;	genCmpLt
   1049 7B                 3702 	ld	a,e
   104A D6 00              3703 	sub	a,#0x00
   104C 7A                 3704 	ld	a,d
   104D DE 01              3705 	sbc	a,#0x01
   104F 79                 3706 	ld	a,c
   1050 DE 00              3707 	sbc	a,#0x00
   1052 78                 3708 	ld	a,b
   1053 DE 00              3709 	sbc	a,#0x00
   1055 F2r43s11           3710 	jp	p,00111$
                           3711 ;mem.c:588: if (PAGE_LOCKED(p) != FALSE)
                           3712 ;	genPlus
                           3713 ;	AOP_STK for _mem_kill_proc_p_1_1
                           3714 ;	Can't optimise plus by inc, falling back to the normal way
   1058 FD 21r08s00        3715 	ld	iy,#_page_list
   105C FD 7E 00           3716 	ld	a,0(iy)
   105F DD 86 FE           3717 	add	a,-2(ix)
   1062 4F                 3718 	ld	c,a
   1063 FD 7E 01           3719 	ld	a,1(iy)
   1066 DD 8E FF           3720 	adc	a,-1(ix)
   1069 47                 3721 	ld	b,a
                           3722 ;	genPointerGet
   106A 0A                 3723 	ld	a,(bc)
                           3724 ;	genAnd
   106B 4F                 3725 	ld	c,a
   106C E6 04              3726 	and	a,#0x04
   106E CAr7As10           3727 	jp	z,00113$
   1071                    3728 00123$:
                           3729 ;	genAnd
   1071 79                 3730 	ld	a,c
   1072 E6 03              3731 	and	a,#0x03
   1074 CAr7As10           3732 	jp	z,00125$
   1077                    3733 00124$:
   1077 C3r7Fs10           3734 	jp	00114$
   107A                    3735 00125$:
                           3736 ;	genLabel
   107A                    3737 00113$:
                           3738 ;	genAssign
   107A 0E 00              3739 	ld	c,#0x00
                           3740 ;	genGoto
   107C C3r81s10           3741 	jp	00115$
                           3742 ;	genLabel
   107F                    3743 00114$:
                           3744 ;	genAssign
   107F 0E 01              3745 	ld	c,#0x01
                           3746 ;	genLabel
   1081                    3747 00115$:
                           3748 ;	genCmpEq
                           3749 ; genCmpEq: left 1, right 1, result 0
   1081 79                 3750 	ld	a,c
   1082 B7                 3751 	or	a,a
   1083 CAr89s10           3752 	jp	z,00127$
   1086                    3753 00126$:
   1086 C3r37s11           3754 	jp	00109$
   1089                    3755 00127$:
                           3756 ;mem.c:592: if (PAGE_USED(p) == FALSE)
                           3757 ;	genRightShift
                           3758 ;	AOP_STK for _mem_kill_proc_p_1_1
   1089 DD 4E FE           3759 	ld	c,-2(ix)
   108C DD 46 FF           3760 	ld	b,-1(ix)
   108F CB 38              3761 	srl	b
   1091 CB 19              3762 	rr	c
   1093 CB 38              3763 	srl	b
   1095 CB 19              3764 	rr	c
   1097 CB 38              3765 	srl	b
   1099 CB 19              3766 	rr	c
                           3767 ;	genPlus
                           3768 ;	Can't optimise plus by inc, falling back to the normal way
   109B FD 21r06s00        3769 	ld	iy,#_page_map
   109F FD 7E 00           3770 	ld	a,0(iy)
   10A2 81                 3771 	add	a,c
   10A3 4F                 3772 	ld	c,a
   10A4 FD 7E 01           3773 	ld	a,1(iy)
   10A7 88                 3774 	adc	a,b
   10A8 47                 3775 	ld	b,a
                           3776 ;	genPointerGet
                           3777 ;	AOP_STK for _mem_kill_proc_sloc1_1_0
   10A9 0A                 3778 	ld	a,(bc)
   10AA DD 77 FB           3779 	ld	-5(ix),a
                           3780 ;	genAnd
                           3781 ;	AOP_STK for _mem_kill_proc_p_1_1
   10AD DD 7E FE           3782 	ld	a,-2(ix)
   10B0 E6 07              3783 	and	a,#0x07
   10B2 57                 3784 	ld	d,a
   10B3 1E 00              3785 	ld	e,#0x00
                           3786 ;	genLeftShift
   10B5 7A                 3787 	ld	a,d
   10B6 3C                 3788 	inc	a
                           3789 ;	AOP_STK for _mem_kill_proc_sloc2_1_0
   10B7 F5                 3790 	push	af
   10B8 DD 36 F9 01        3791 	ld	-7(ix),#0x01
   10BC DD 36 FA 00        3792 	ld	-6(ix),#0x00
   10C0 F1                 3793 	pop	af
   10C1 C3rCCs10           3794 	jp	00131$
   10C4                    3795 00130$:
   10C4 DD CB F9 26        3796 	sla	-7(ix)
   10C8 DD CB FA 16        3797 	rl	-6(ix)
   10CC                    3798 00131$:
   10CC 3D                 3799 	dec	a
   10CD C2rC4s10           3800 	jp	nz,00130$
                           3801 ;	genCast
                           3802 ;	AOP_STK for _mem_kill_proc_sloc1_1_0
   10D0 DD 5E FB           3803 	ld	e,-5(ix)
   10D3 16 00              3804 	ld	d,#0x00
                           3805 ;	genAnd
                           3806 ;	AOP_STK for _mem_kill_proc_sloc2_1_0
   10D5 7B                 3807 	ld	a,e
   10D6 DD A6 F9           3808 	and	a,-7(ix)
   10D9 5F                 3809 	ld	e,a
   10DA 7A                 3810 	ld	a,d
   10DB DD A6 FA           3811 	and	a,-6(ix)
   10DE 57                 3812 	ld	d,a
                           3813 ;	genIfx
   10DF 7B                 3814 	ld	a,e
   10E0 B2                 3815 	or	a,d
   10E1 CAr37s11           3816 	jp	z,00109$
                           3817 ;mem.c:596: if (PAGE_PROC(p) != proc->id)
                           3818 ;	genPlus
                           3819 ;	AOP_STK for _mem_kill_proc_p_1_1
                           3820 ;	AOP_STK for _mem_kill_proc_sloc3_1_0
                           3821 ;	Can't optimise plus by inc, falling back to the normal way
   10E4 FD 21r08s00        3822 	ld	iy,#_page_list
   10E8 FD 7E 00           3823 	ld	a,0(iy)
   10EB DD 86 FE           3824 	add	a,-2(ix)
   10EE DD 77 F7           3825 	ld	-9(ix),a
   10F1 FD 7E 01           3826 	ld	a,1(iy)
   10F4 DD 8E FF           3827 	adc	a,-1(ix)
   10F7 DD 77 F8           3828 	ld	-8(ix),a
                           3829 ;	genPointerGet
                           3830 ;	AOP_STK for _mem_kill_proc_sloc3_1_0
   10FA DD 6E F7           3831 	ld	l,-9(ix)
   10FD DD 66 F8           3832 	ld	h,-8(ix)
   1100 5E                 3833 	ld	e,(hl)
                           3834 ;	genRightShift
                           3835 ; Removed redundent load
   1101 CB 3B              3836 	srl	e
   1103 CB 3B              3837 	srl	e
   1105 CB 3B              3838 	srl	e
                           3839 ;	genPointerGet
                           3840 ;	AOP_STK for _mem_kill_proc_sloc0_1_0
   1107 DD 6E FC           3841 	ld	l,-4(ix)
   110A DD 66 FD           3842 	ld	h,-3(ix)
   110D 56                 3843 	ld	d,(hl)
                           3844 ;	genCmpEq
                           3845 ; genCmpEq: left 1, right 1, result 0
   110E 7B                 3846 	ld	a,e
   110F BA                 3847 	cp	d
   1110 CAr16s11           3848 	jp	z,00133$
   1113                    3849 00132$:
   1113 C3r37s11           3850 	jp	00109$
   1116                    3851 00133$:
                           3852 ;mem.c:600: PAGE_FREE(p);
                           3853 ;	genCast
                           3854 ;	AOP_STK for _mem_kill_proc_sloc2_1_0
   1116 DD 5E F9           3855 	ld	e,-7(ix)
                           3856 ;	genXor
   1119 7B                 3857 	ld	a,e
   111A EE FF              3858 	xor	a,#0xFF
   111C 5F                 3859 	ld	e,a
                           3860 ;	genAnd
                           3861 ;	AOP_STK for _mem_kill_proc_sloc1_1_0
   111D DD 7E FB           3862 	ld	a,-5(ix)
   1120 A3                 3863 	and	a,e
                           3864 ;	genAssign (pointer)
                           3865 ;	isBitvar = 0
   1121 02                 3866 	ld	(bc),a
                           3867 ;	genAssign (pointer)
                           3868 ;	AOP_STK for _mem_kill_proc_sloc3_1_0
                           3869 ;	isBitvar = 0
   1122 DD 6E F7           3870 	ld	l,-9(ix)
   1125 DD 66 F8           3871 	ld	h,-8(ix)
   1128 36 00              3872 	ld	(hl),#0x00
                           3873 ;	genPlus
                           3874 ;	genPlusIncr
   112A FD 21r0As00        3875 	ld	iy,#_mem_num_pages_free
   112E FD 34 00           3876 	inc	0(iy)
   1131 C2r37s11           3877 	jp	nz,00134$
   1134 FD 34 01           3878 	inc	1(iy)
   1137                    3879 00134$:
                           3880 ;	genLabel
   1137                    3881 00109$:
                           3882 ;mem.c:586: for (p = 0; p < NUM_PAGES; p++) {
                           3883 ;	genPlus
                           3884 ;	AOP_STK for _mem_kill_proc_p_1_1
                           3885 ;	genPlusIncr
   1137 DD 34 FE           3886 	inc	-2(ix)
   113A C2r40s11           3887 	jp	nz,00135$
   113D DD 34 FF           3888 	inc	-1(ix)
   1140                    3889 00135$:
                           3890 ;	genGoto
   1140 C3r40s10           3891 	jp	00107$
                           3892 ;	genLabel
   1143                    3893 00111$:
                           3894 ;	genEndFunction
   1143 DD F9              3895 	ld	sp,ix
   1145 DD E1              3896 	pop	ix
   1147 C9                 3897 	ret
   1148                    3898 _mem_kill_proc_end::
                           3899 ;mem.c:608: pmalloc2 (size_t size, struct proc *proc)
                           3900 ;	genLabel
                           3901 ;	genFunction
                           3902 ;	---------------------------------
                           3903 ; Function pmalloc2
                           3904 ; ---------------------------------
   1148                    3905 _pmalloc2_start::
   1148                    3906 _pmalloc2:
   1148 DD E5              3907 	push	ix
   114A DD 21 00 00        3908 	ld	ix,#0
   114E DD 39              3909 	add	ix,sp
   1150 21 FE FF           3910 	ld	hl,#-2
   1153 39                 3911 	add	hl,sp
   1154 F9                 3912 	ld	sp,hl
                           3913 ;mem.c:614: if (size == 0)
                           3914 ;	genIfx
                           3915 ;	AOP_STK for 
   1155 DD 7E 04           3916 	ld	a,4(ix)
   1158 DD B6 05           3917 	or	a,5(ix)
   115B C2r64s11           3918 	jp	nz,00102$
                           3919 ;mem.c:615: return NULL;
                           3920 ;	genRet
                           3921 ; Dump of IC_LEFT: type AOP_LIT size 2
   115E 21 00 00           3922 	ld	hl,#0x0000
   1161 C3r22s12           3923 	jp	00111$
                           3924 ;	genLabel
   1164                    3925 00102$:
                           3926 ;mem.c:620: if (size <= (PAGESIZE / 2)) {
                           3927 ;	genCmpGt
                           3928 ;	AOP_STK for 
   1164 3E 80              3929 	ld	a,#0x80
   1166 DD 96 04           3930 	sub	a,4(ix)
   1169 3E 00              3931 	ld	a,#0x00
   116B DD 9E 05           3932 	sbc	a,5(ix)
   116E DAr95s11           3933 	jp	c,00104$
                           3934 ;mem.c:621: ret = mem_frag_alloc (size, proc);
                           3935 ;	genIpush
                           3936 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           3937 ;	AOP_STK for 
   1171 DD 6E 06           3938 	ld	l,6(ix)
   1174 DD 66 07           3939 	ld	h,7(ix)
   1177 E5                 3940 	push	hl
                           3941 ;	genIpush
                           3942 ;	AOP_STK for 
   1178 DD 6E 04           3943 	ld	l,4(ix)
   117B DD 66 05           3944 	ld	h,5(ix)
   117E E5                 3945 	push	hl
                           3946 ;	genCall
   117F CDr9As09           3947 	call	_mem_frag_alloc
   1182 44                 3948 	ld	b,h
   1183 4D                 3949 	ld	c,l
   1184 F1                 3950 	pop	af
   1185 F1                 3951 	pop	af
                           3952 ;	genAssign
                           3953 ;	AOP_STK for _pmalloc2_ret_1_1
   1186 DD 71 FE           3954 	ld	-2(ix),c
   1189 DD 70 FF           3955 	ld	-1(ix),b
                           3956 ;mem.c:623: return ret;
                           3957 ;	genRet
                           3958 ;	AOP_STK for _pmalloc2_ret_1_1
                           3959 ; Dump of IC_LEFT: type AOP_STK size 2
                           3960 ;	 aop_stk -2
   118C DD 6E FE           3961 	ld	l,-2(ix)
   118F DD 66 FF           3962 	ld	h,-1(ix)
   1192 C3r22s12           3963 	jp	00111$
                           3964 ;	genLabel
   1195                    3965 00104$:
                           3966 ;mem.c:628: p = mem_pages_alloc (ROUNDBLEN(size, PAGESIZE), 0, proc->id);
                           3967 ;	genAssign
                           3968 ;	AOP_STK for 
   1195 DD 5E 06           3969 	ld	e,6(ix)
   1198 DD 56 07           3970 	ld	d,7(ix)
                           3971 ;	genPlus
                           3972 ;	genPlusIncr
                           3973 ;	Can't optimise plus by inc, falling back to the normal way
   119B 7B                 3974 	ld	a,e
   119C C6 25              3975 	add	a,#0x25
   119E 5F                 3976 	ld	e,a
   119F 7A                 3977 	ld	a,d
   11A0 CE 00              3978 	adc	a,#0x00
   11A2 57                 3979 	ld	d,a
                           3980 ;	genPointerGet
   11A3 1A                 3981 	ld	a,(de)
   11A4 4F                 3982 	ld	c,a
                           3983 ;	genRightShift
                           3984 ;	AOP_STK for 
   11A5 DD 56 05           3985 	ld	d,5(ix)
   11A8 1E 00              3986 	ld	e,#0x00
                           3987 ;	genCast
   11AA 5A                 3988 	ld	e,d
                           3989 ;	genAnd
                           3990 ;	AOP_STK for 
   11AB DD 7E 04           3991 	ld	a,4(ix)
   11AE B7                 3992 	or	a,a
   11AF CArB7s11           3993 	jp	z,00113$
   11B2                    3994 00121$:
                           3995 ;	genAssign
   11B2 16 01              3996 	ld	d,#0x01
                           3997 ;	genGoto
   11B4 C3rB9s11           3998 	jp	00114$
                           3999 ;	genLabel
   11B7                    4000 00113$:
                           4001 ;	genAssign
   11B7 16 00              4002 	ld	d,#0x00
                           4003 ;	genLabel
   11B9                    4004 00114$:
                           4005 ;	genPlus
                           4006 ;	Can't optimise plus by inc, falling back to the normal way
   11B9 7B                 4007 	ld	a,e
   11BA 82                 4008 	add	a,d
   11BB 5F                 4009 	ld	e,a
                           4010 ;	genIpush
                           4011 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   11BC 79                 4012 	ld	a,c
   11BD F5                 4013 	push	af
   11BE 33                 4014 	inc	sp
                           4015 ;	genIpush
   11BF 3E 00              4016 	ld	a,#0x00
   11C1 F5                 4017 	push	af
   11C2 33                 4018 	inc	sp
                           4019 ;	genIpush
   11C3 7B                 4020 	ld	a,e
   11C4 F5                 4021 	push	af
   11C5 33                 4022 	inc	sp
                           4023 ;	genCall
   11C6 CDrA0s03           4024 	call	_mem_pages_alloc
   11C9 5D                 4025 	ld	e,l
   11CA F1                 4026 	pop	af
   11CB 33                 4027 	inc	sp
                           4028 ;	genAssign
                           4029 ;	(registers are the same)
                           4030 ;mem.c:629: if (p == 0) {
                           4031 ;	genIfx
   11CC AF                 4032 	xor	a,a
   11CD B3                 4033 	or	a,e
   11CE C2rD7s11           4034 	jp	nz,00106$
                           4035 ;mem.c:631: return NULL;
                           4036 ;	genRet
                           4037 ; Dump of IC_LEFT: type AOP_LIT size 2
   11D1 21 00 00           4038 	ld	hl,#0x0000
   11D4 C3r22s12           4039 	jp	00111$
                           4040 ;	genLabel
   11D7                    4041 00106$:
                           4042 ;mem.c:636: ret = PAGE2ADDR(p);
                           4043 ;	genCast
                           4044 ; Removed redundent load
   11D7 16 00              4045 	ld	d,#0x00
                           4046 ;	genLeftShift
   11D9 43                 4047 	ld	b,e
   11DA 0E 00              4048 	ld	c,#0x00
                           4049 ;	genCast
   11DC 1Er0E              4050 	ld	e,#<_ram
   11DE 16s00              4051 	ld	d,#>_ram
                           4052 ;	genPlus
                           4053 ;	Can't optimise plus by inc, falling back to the normal way
   11E0 79                 4054 	ld	a,c
   11E1 83                 4055 	add	a,e
   11E2 5F                 4056 	ld	e,a
   11E3 78                 4057 	ld	a,b
   11E4 8A                 4058 	adc	a,d
   11E5 57                 4059 	ld	d,a
                           4060 ;	genCast
                           4061 ;	AOP_STK for _pmalloc2_ret_1_1
   11E6 DD 73 FE           4062 	ld	-2(ix),e
   11E9 DD 72 FF           4063 	ld	-1(ix),d
                           4064 ;mem.c:637: RAMASSERT(ret);
                           4065 ;	genIfx
                           4066 ;	AOP_STK for _pmalloc2_ret_1_1
   11EC DD 7E FE           4067 	ld	a,-2(ix)
   11EF DD B6 FF           4068 	or	a,-1(ix)
   11F2 CAr1Cs12           4069 	jp	z,00108$
                           4070 ;	genAssign
                           4071 ;	AOP_STK for _pmalloc2_ret_1_1
   11F5 DD 5E FE           4072 	ld	e,-2(ix)
   11F8 DD 56 FF           4073 	ld	d,-1(ix)
                           4074 ;	genCmpLt
   11FB 7B                 4075 	ld	a,e
   11FC D6r0E              4076 	sub	a,#<_ram
   11FE 7A                 4077 	ld	a,d
   11FF DEs00              4078 	sbc	a,#>_ram
   1201 DAr14s12           4079 	jp	c,00107$
                           4080 ;	genAssign
                           4081 ;	AOP_STK for _pmalloc2_ret_1_1
   1204 DD 5E FE           4082 	ld	e,-2(ix)
   1207 DD 56 FF           4083 	ld	d,-1(ix)
                           4084 ;	genPlus
                           4085 ;	genPlusIncr
   120A 01r0Ds00           4086 	ld	bc,#_ram + 65535
                           4087 ;	genCmpGt
   120D 79                 4088 	ld	a,c
   120E 93                 4089 	sub	a,e
   120F 78                 4090 	ld	a,b
   1210 9A                 4091 	sbc	a,d
   1211 D2r1Cs12           4092 	jp	nc,00108$
                           4093 ;	genLabel
   1214                    4094 00107$:
                           4095 ;	genIpush
                           4096 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1214 21r27s12           4097 	ld	hl,#__str_7
   1217 E5                 4098 	push	hl
                           4099 ;	genCall
   1218 CDr00s00           4100 	call	_panic
   121B F1                 4101 	pop	af
                           4102 ;	genLabel
   121C                    4103 00108$:
                           4104 ;mem.c:638: return ret;
                           4105 ;	genRet
                           4106 ;	AOP_STK for _pmalloc2_ret_1_1
                           4107 ; Dump of IC_LEFT: type AOP_STK size 2
                           4108 ;	 aop_stk -2
   121C DD 6E FE           4109 	ld	l,-2(ix)
   121F DD 66 FF           4110 	ld	h,-1(ix)
                           4111 ;	genLabel
   1222                    4112 00111$:
                           4113 ;	genEndFunction
   1222 DD F9              4114 	ld	sp,ix
   1224 DD E1              4115 	pop	ix
   1226 C9                 4116 	ret
   1227                    4117 _pmalloc2_end::
   1227                    4118 __str_7:
   1227 50 6F 69 6E 74 65  4119 	.ascii "Pointer outside memory."
        72 20 6F 75 74 73
        69 64 65 20 6D 65
        6D 6F 72 79 2E
   123E 0A                 4120 	.db 0x0A
   123F 00                 4121 	.db 0x00
                           4122 ;mem.c:642: pmalloc (size_t size, struct proc *proc)
                           4123 ;	genLabel
                           4124 ;	genFunction
                           4125 ;	---------------------------------
                           4126 ; Function pmalloc
                           4127 ; ---------------------------------
   1240                    4128 _pmalloc_start::
   1240                    4129 _pmalloc:
   1240 DD E5              4130 	push	ix
   1242 DD 21 00 00        4131 	ld	ix,#0
   1246 DD 39              4132 	add	ix,sp
                           4133 ;mem.c:644: void *p = pmalloc2 (size, proc);
                           4134 ;	genIpush
                           4135 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4136 ;	AOP_STK for 
   1248 DD 6E 06           4137 	ld	l,6(ix)
   124B DD 66 07           4138 	ld	h,7(ix)
   124E E5                 4139 	push	hl
                           4140 ;	genIpush
                           4141 ;	AOP_STK for 
   124F DD 6E 04           4142 	ld	l,4(ix)
   1252 DD 66 05           4143 	ld	h,5(ix)
   1255 E5                 4144 	push	hl
                           4145 ;	genCall
   1256 CDr48s11           4146 	call	_pmalloc2
   1259 44                 4147 	ld	b,h
   125A 4D                 4148 	ld	c,l
   125B F1                 4149 	pop	af
   125C F1                 4150 	pop	af
                           4151 ;	genAssign
                           4152 ;	(registers are the same)
                           4153 ;mem.c:646: if (p == NULL) {
                           4154 ;	genCmpEq
                           4155 ; genCmpEq: left 2, right 2, result 0
   125D 79                 4156 	ld	a,c
   125E B0                 4157 	or	a,b
   125F CAr65s12           4158 	jp	z,00107$
   1262                    4159 00106$:
   1262 C3r7Fs12           4160 	jp	00102$
   1265                    4161 00107$:
                           4162 ;mem.c:647: bcleanup_glob ();
                           4163 ;	genCall
                           4164 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1265 CDr00s00           4165 	call	_bcleanup_glob
                           4166 ;mem.c:648: p = pmalloc2 (size, proc);
                           4167 ;	genIpush
                           4168 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4169 ;	AOP_STK for 
   1268 DD 6E 06           4170 	ld	l,6(ix)
   126B DD 66 07           4171 	ld	h,7(ix)
   126E E5                 4172 	push	hl
                           4173 ;	genIpush
                           4174 ;	AOP_STK for 
   126F DD 6E 04           4175 	ld	l,4(ix)
   1272 DD 66 05           4176 	ld	h,5(ix)
   1275 E5                 4177 	push	hl
                           4178 ;	genCall
   1276 CDr48s11           4179 	call	_pmalloc2
   1279 54                 4180 	ld	d,h
   127A 5D                 4181 	ld	e,l
   127B F1                 4182 	pop	af
   127C F1                 4183 	pop	af
                           4184 ;	genAssign
   127D 4B                 4185 	ld	c,e
   127E 42                 4186 	ld	b,d
                           4187 ;	genLabel
   127F                    4188 00102$:
                           4189 ;mem.c:651: return p;
                           4190 ;	genRet
                           4191 ; Dump of IC_LEFT: type AOP_REG size 2
                           4192 ;	 reg = bc
   127F 69                 4193 	ld	l,c
   1280 60                 4194 	ld	h,b
                           4195 ;	genLabel
   1281                    4196 00103$:
                           4197 ;	genEndFunction
   1281 DD E1              4198 	pop	ix
   1283 C9                 4199 	ret
   1284                    4200 _pmalloc_end::
                           4201 ;mem.c:656: kmalloc (size_t size)
                           4202 ;	genLabel
                           4203 ;	genFunction
                           4204 ;	---------------------------------
                           4205 ; Function kmalloc
                           4206 ; ---------------------------------
   1284                    4207 _kmalloc_start::
   1284                    4208 _kmalloc:
   1284 DD E5              4209 	push	ix
   1286 DD 21 00 00        4210 	ld	ix,#0
   128A DD 39              4211 	add	ix,sp
                           4212 ;mem.c:658: return pmalloc (size, &proc_holographic);
                           4213 ;	genIpush
                           4214 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   128C 21r00s00           4215 	ld	hl,#_proc_holographic
   128F E5                 4216 	push	hl
                           4217 ;	genIpush
                           4218 ;	AOP_STK for 
   1290 DD 6E 04           4219 	ld	l,4(ix)
   1293 DD 66 05           4220 	ld	h,5(ix)
   1296 E5                 4221 	push	hl
                           4222 ;	genCall
   1297 CDr40s12           4223 	call	_pmalloc
   129A F1                 4224 	pop	af
   129B F1                 4225 	pop	af
                           4226 ;	genRet
                           4227 ; Dump of IC_LEFT: type AOP_STR size 2
                           4228 ;	genLabel
   129C                    4229 00101$:
                           4230 ;	genEndFunction
   129C DD E1              4231 	pop	ix
   129E C9                 4232 	ret
   129F                    4233 _kmalloc_end::
                           4234 ;mem.c:663: freep (void *pos, struct proc *proc)
                           4235 ;	genLabel
                           4236 ;	genFunction
                           4237 ;	---------------------------------
                           4238 ; Function freep
                           4239 ; ---------------------------------
   129F                    4240 _freep_start::
   129F                    4241 _freep:
   129F DD E5              4242 	push	ix
   12A1 DD 21 00 00        4243 	ld	ix,#0
   12A5 DD 39              4244 	add	ix,sp
                           4245 ;mem.c:667: RAMASSERT(pos);
                           4246 ;	genIfx
                           4247 ;	AOP_STK for 
   12A7 DD 7E 04           4248 	ld	a,4(ix)
   12AA DD B6 05           4249 	or	a,5(ix)
   12AD CArD1s12           4250 	jp	z,00102$
                           4251 ;	genAssign
                           4252 ;	AOP_STK for 
   12B0 DD 4E 04           4253 	ld	c,4(ix)
   12B3 DD 46 05           4254 	ld	b,5(ix)
                           4255 ;	genCmpLt
   12B6 79                 4256 	ld	a,c
   12B7 D6r0E              4257 	sub	a,#<_ram
   12B9 78                 4258 	ld	a,b
   12BA DEs00              4259 	sbc	a,#>_ram
   12BC DArC9s12           4260 	jp	c,00101$
                           4261 ;	genAssign
                           4262 ;	(registers are the same)
                           4263 ;	genPlus
                           4264 ;	genPlusIncr
   12BF 11r0Ds00           4265 	ld	de,#_ram + 65535
                           4266 ;	genCmpGt
   12C2 7B                 4267 	ld	a,e
   12C3 91                 4268 	sub	a,c
   12C4 7A                 4269 	ld	a,d
   12C5 98                 4270 	sbc	a,b
   12C6 D2rD1s12           4271 	jp	nc,00102$
                           4272 ;	genLabel
   12C9                    4273 00101$:
                           4274 ;	genIpush
                           4275 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   12C9 21r21s13           4276 	ld	hl,#__str_8
   12CC E5                 4277 	push	hl
                           4278 ;	genCall
   12CD CDr00s00           4279 	call	_panic
   12D0 F1                 4280 	pop	af
                           4281 ;	genLabel
   12D1                    4282 00102$:
                           4283 ;mem.c:670: p = ADDR2PAGE(pos);
                           4284 ;	genCast
                           4285 ;	AOP_STK for 
   12D1 DD 4E 04           4286 	ld	c,4(ix)
   12D4 DD 46 05           4287 	ld	b,5(ix)
                           4288 ;	genCast
   12D7 1Er0E              4289 	ld	e,#<_ram
   12D9 16s00              4290 	ld	d,#>_ram
                           4291 ;	genMinus
   12DB 79                 4292 	ld	a,c
   12DC 93                 4293 	sub	a,e
   12DD 4F                 4294 	ld	c,a
   12DE 78                 4295 	ld	a,b
   12DF 9A                 4296 	sbc	a,d
   12E0 47                 4297 	ld	b,a
                           4298 ;	genCast
                           4299 ;	genCast
                           4300 ;	genRightShift
   12E1 48                 4301 	ld	c,b
   12E2 06 00              4302 	ld	b,#0x00
                           4303 ;	genCast
                           4304 ; Removed redundent load
                           4305 ;mem.c:674: if (FRAGLOG(p) == 0)    /* Fragment size in page info? */
                           4306 ;	genPlus
                           4307 ;	Can't optimise plus by inc, falling back to the normal way
   12E4 FD 21r08s00        4308 	ld	iy,#_page_list
   12E8 FD 7E 00           4309 	ld	a,0(iy)
   12EB 81                 4310 	add	a,c
   12EC 4F                 4311 	ld	c,a
   12ED FD 7E 01           4312 	ld	a,1(iy)
   12F0 CE 00              4313 	adc	a,#0x00
   12F2 47                 4314 	ld	b,a
                           4315 ;	genPointerGet
   12F3 0A                 4316 	ld	a,(bc)
                           4317 ;	genAnd
   12F4 4F                 4318 	ld	c,a
   12F5 E6 03              4319 	and	a,#0x03
   12F7 CArFDs12           4320 	jp	z,00114$
   12FA                    4321 00113$:
   12FA C3r0Bs13           4322 	jp	00106$
   12FD                    4323 00114$:
                           4324 ;mem.c:675: mem_page_free (pos);
                           4325 ;	genIpush
                           4326 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4327 ;	AOP_STK for 
   12FD DD 6E 04           4328 	ld	l,4(ix)
   1300 DD 66 05           4329 	ld	h,5(ix)
   1303 E5                 4330 	push	hl
                           4331 ;	genCall
   1304 CDr01s04           4332 	call	_mem_page_free
   1307 F1                 4333 	pop	af
                           4334 ;	genGoto
   1308 C3r1Es13           4335 	jp	00108$
                           4336 ;	genLabel
   130B                    4337 00106$:
                           4338 ;mem.c:677: mem_frag_free (pos, proc);
                           4339 ;	genIpush
                           4340 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
                           4341 ;	AOP_STK for 
   130B DD 6E 06           4342 	ld	l,6(ix)
   130E DD 66 07           4343 	ld	h,7(ix)
   1311 E5                 4344 	push	hl
                           4345 ;	genIpush
                           4346 ;	AOP_STK for 
   1312 DD 6E 04           4347 	ld	l,4(ix)
   1315 DD 66 05           4348 	ld	h,5(ix)
   1318 E5                 4349 	push	hl
                           4350 ;	genCall
   1319 CDrDEs0A           4351 	call	_mem_frag_free
   131C F1                 4352 	pop	af
   131D F1                 4353 	pop	af
                           4354 ;	genLabel
   131E                    4355 00108$:
                           4356 ;	genEndFunction
   131E DD E1              4357 	pop	ix
   1320 C9                 4358 	ret
   1321                    4359 _freep_end::
   1321                    4360 __str_8:
   1321 50 6F 69 6E 74 65  4361 	.ascii "Pointer outside memory."
        72 20 6F 75 74 73
        69 64 65 20 6D 65
        6D 6F 72 79 2E
   1338 0A                 4362 	.db 0x0A
   1339 00                 4363 	.db 0x00
                           4364 ;mem.c:693: malloc (size_t size)
                           4365 ;	genLabel
                           4366 ;	genFunction
                           4367 ;	---------------------------------
                           4368 ; Function malloc
                           4369 ; ---------------------------------
   133A                    4370 _malloc_start::
   133A                    4371 _malloc:
   133A DD E5              4372 	push	ix
   133C DD 21 00 00        4373 	ld	ix,#0
   1340 DD 39              4374 	add	ix,sp
                           4375 ;mem.c:696: struct proc *proc = (CURRENT_PROC() != NULL) ? CURRENT_PROC() : NULL;
                           4376 ;	genCmpEq
                           4377 ; genCmpEq: left 2, right 2, result 1
                           4378 ;4
   1342 FD 21r00s00        4379 	ld	iy,#_proc_current
   1346 FD 7E 00           4380 	ld	a,0(iy)
   1349 FD B6 01           4381 	or	a,1(iy)
   134C C2r54s13           4382 	jp	nz,00106$
   134F 3E 01              4383 	ld	a,#0x01
   1351 C3r55s13           4384 	jp	00107$
   1354                    4385 00106$:
   1354 AF                 4386 	xor	a,a
   1355                    4387 00107$:
                           4388 ;6
   1355 4F                 4389 	ld	c,a
                           4390 ;	genNot
   1356 AF                 4391 	xor	a,a
   1357 B1                 4392 	or	a,c
   1358 D6 01              4393 	sub	a,#0x01
   135A 3E 00              4394 	ld	a,#0x00
   135C 17                 4395 	rla
                           4396 ;	genIfx
   135D 4F                 4397 	ld	c,a
   135E B7                 4398 	or	a,a
   135F CAr69s13           4399 	jp	z,00103$
                           4400 ;	genAssign
   1362 ED 4Br00s00        4401 	ld	bc,(_proc_current)
                           4402 ;	genGoto
   1366 C3r6Cs13           4403 	jp	00104$
                           4404 ;	genLabel
   1369                    4405 00103$:
                           4406 ;	genAssign
   1369 01 00 00           4407 	ld	bc,#0x0000
                           4408 ;	genLabel
   136C                    4409 00104$:
                           4410 ;	genAssign
                           4411 ;	(registers are the same)
                           4412 ;mem.c:701: return pmalloc (size, proc);
                           4413 ;	genIpush
                           4414 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   136C C5                 4415 	push	bc
                           4416 ;	genIpush
                           4417 ;	AOP_STK for 
   136D DD 6E 04           4418 	ld	l,4(ix)
   1370 DD 66 05           4419 	ld	h,5(ix)
   1373 E5                 4420 	push	hl
                           4421 ;	genCall
   1374 CDr40s12           4422 	call	_pmalloc
   1377 F1                 4423 	pop	af
   1378 F1                 4424 	pop	af
                           4425 ;	genRet
                           4426 ; Dump of IC_LEFT: type AOP_STR size 2
                           4427 ;	genLabel
   1379                    4428 00101$:
                           4429 ;	genEndFunction
   1379 DD E1              4430 	pop	ix
   137B C9                 4431 	ret
   137C                    4432 _malloc_end::
                           4433 ;mem.c:705: free (void *pos)
                           4434 ;	genLabel
                           4435 ;	genFunction
                           4436 ;	---------------------------------
                           4437 ; Function free
                           4438 ; ---------------------------------
   137C                    4439 _free_start::
   137C                    4440 _free:
   137C DD E5              4441 	push	ix
   137E DD 21 00 00        4442 	ld	ix,#0
   1382 DD 39              4443 	add	ix,sp
                           4444 ;mem.c:707: freep (pos, CURRENT_PROC());
                           4445 ;	genIpush
                           4446 ; _saveRegsForCall: sendSetSize: 0 deInUse: 0 bcInUse: 0 deSending: 0
   1384 2Ar00s00           4447 	ld	hl,(_proc_current)
   1387 E5                 4448 	push	hl
                           4449 ;	genIpush
                           4450 ;	AOP_STK for 
   1388 DD 6E 04           4451 	ld	l,4(ix)
   138B DD 66 05           4452 	ld	h,5(ix)
   138E E5                 4453 	push	hl
                           4454 ;	genCall
   138F CDr9Fs12           4455 	call	_freep
   1392 F1                 4456 	pop	af
   1393 F1                 4457 	pop	af
                           4458 ;	genLabel
   1394                    4459 00101$:
                           4460 ;	genEndFunction
   1394 DD E1              4461 	pop	ix
   1396 C9                 4462 	ret
   1397                    4463 _free_end::
                           4464 	.area _CODE
